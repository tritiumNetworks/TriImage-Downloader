{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5","program":"/home/catry/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=7c68fa344c6f60d7","-C","extra-filename=-7c68fa344c6f60d7","--out-dir","/home/catry/project/TriImage-Downloader/target/rls/debug/deps","-L","dependency=/home/catry/project/TriImage-Downloader/target/rls/debug/deps","--extern","futures_core=/home/catry/project/TriImage-Downloader/target/rls/debug/deps/libfutures_core-6c5edd2d7cd8550a.rmeta","--extern","futures_io=/home/catry/project/TriImage-Downloader/target/rls/debug/deps/libfutures_io-a4a878f02187c6ad.rmeta","--extern","futures_task=/home/catry/project/TriImage-Downloader/target/rls/debug/deps/libfutures_task-604876886157973e.rmeta","--extern","memchr=/home/catry/project/TriImage-Downloader/target/rls/debug/deps/libmemchr-d54758852a71d8ed.rmeta","--extern","pin_project=/home/catry/project/TriImage-Downloader/target/rls/debug/deps/libpin_project-1b4eab9bba754e64.rmeta","--extern","pin_utils=/home/catry/project/TriImage-Downloader/target/rls/debug/deps/libpin_utils-f9e49bc7e7f315e9.rmeta","--extern","slab=/home/catry/project/TriImage-Downloader/target/rls/debug/deps/libslab-980a5c89adcaa5c2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/catry/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/catry/project/TriImage-Downloader/target/rls/debug/deps/libfutures_util-7c68fa344c6f60d7.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[14263147927439876396,14587836067057342564]},"crate_root":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src","external_crates":[{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","num":2,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":15,"id":{"name":"futures_core","disambiguator":[6531744885408136201,955413021722688199]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":16,"id":{"name":"pin_utils","disambiguator":[912976380524781605,4440106111369784297]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","num":17,"id":{"name":"futures_task","disambiguator":[15560382651395155939,2387653420687954075]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","num":18,"id":{"name":"once_cell","disambiguator":[17301106107091199291,9095410223576898873]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","num":19,"id":{"name":"pin_project","disambiguator":[1640622391262451174,7397995999358049003]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","num":20,"id":{"name":"pin_project_internal","disambiguator":[15766988387559193200,14486149999155801849]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","num":21,"id":{"name":"slab","disambiguator":[5582234693340378179,9833690510384661818]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","num":22,"id":{"name":"futures_io","disambiguator":[10868422328206392465,6775987692242518214]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","num":23,"id":{"name":"memchr","disambiguator":[7607275646445416622,17192177090491277173]}}],"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":12350,"line_start":1,"line_end":335,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":131},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":1650,"byte_end":1655,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":7},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":1676,"byte_end":1683,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":168},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":1920,"byte_end":1933,"line_start":51,"line_end":51,"column_start":23,"column_end":36},"alias_span":null,"name":"core_reexport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":11},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12611,"byte_end":12620,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":15,"index":14},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12622,"byte_end":12636,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":15,"index":17},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12670,"byte_end":12681,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":2,"index":8329},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12683,"byte_end":12689,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":15,"index":32},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12691,"byte_end":12700,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":17,"index":111},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12726,"byte_end":12735,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":17,"index":77},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12737,"byte_end":12751,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":17,"index":132},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12753,"byte_end":12768,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4448},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18192,"byte_end":18203,"line_start":99,"line_end":99,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":28}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18617,"byte_end":18623,"line_start":113,"line_end":113,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":28}},{"kind":"Use","ref_id":{"krate":0,"index":3896},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12883,"byte_end":12890,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":3788},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12892,"byte_end":12896,"line_start":16,"line_end":16,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":255},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12898,"byte_end":12907,"line_start":16,"line_end":16,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4277},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12909,"byte_end":12916,"line_start":16,"line_end":16,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4071},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12918,"byte_end":12928,"line_start":16,"line_end":16,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4004},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12930,"byte_end":12933,"line_start":16,"line_end":16,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4344},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12935,"byte_end":12945,"line_start":16,"line_end":16,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4195},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12947,"byte_end":12951,"line_start":16,"line_end":16,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4397},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12953,"byte_end":12962,"line_start":16,"line_end":16,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4126},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12964,"byte_end":12971,"line_start":16,"line_end":16,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":3949},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13067,"byte_end":13080,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4448},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13129,"byte_end":13140,"line_start":23,"line_end":23,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13288,"byte_end":13294,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4875},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13345,"byte_end":13352,"line_start":34,"line_end":34,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5040},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13354,"byte_end":13361,"line_start":34,"line_end":34,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5108},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13363,"byte_end":13369,"line_start":34,"line_end":34,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5244},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13371,"byte_end":13381,"line_start":34,"line_end":34,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5176},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13383,"byte_end":13392,"line_start":34,"line_end":34,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4492},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13394,"byte_end":13404,"line_start":34,"line_end":34,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5380},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13406,"byte_end":13412,"line_start":34,"line_end":34,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5312},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13414,"byte_end":13419,"line_start":34,"line_end":34,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4958},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13421,"byte_end":13427,"line_start":34,"line_end":34,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4819},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13429,"byte_end":13445,"line_start":34,"line_end":34,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":402},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13451,"byte_end":13463,"line_start":35,"line_end":35,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5531},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13465,"byte_end":13477,"line_start":35,"line_end":35,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5449},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13479,"byte_end":13490,"line_start":35,"line_end":35,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":4684},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13492,"byte_end":13502,"line_start":35,"line_end":35,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":458},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13626,"byte_end":13630,"line_start":44,"line_end":44,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5596},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13632,"byte_end":13636,"line_start":44,"line_end":44,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":485},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13677,"byte_end":13684,"line_start":47,"line_end":47,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5602},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13686,"byte_end":13693,"line_start":47,"line_end":47,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13740,"byte_end":13750,"line_start":50,"line_end":50,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5608},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13752,"byte_end":13761,"line_start":50,"line_end":50,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":538},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13816,"byte_end":13830,"line_start":53,"line_end":53,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5670},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13832,"byte_end":13844,"line_start":53,"line_end":53,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5732},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13882,"byte_end":13894,"line_start":56,"line_end":56,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":584},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13934,"byte_end":13941,"line_start":59,"line_end":59,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":579},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13943,"byte_end":13949,"line_start":59,"line_end":59,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":623},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13986,"byte_end":13989,"line_start":62,"line_end":62,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":620},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13991,"byte_end":13993,"line_start":62,"line_end":62,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13995,"byte_end":14000,"line_start":62,"line_end":62,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5779},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14002,"byte_end":14007,"line_start":62,"line_end":62,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14042,"byte_end":14046,"line_start":65,"line_end":65,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":649},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14048,"byte_end":14053,"line_start":65,"line_end":65,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14055,"byte_end":14060,"line_start":65,"line_end":65,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":658},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14062,"byte_end":14067,"line_start":65,"line_end":65,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5881},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14069,"byte_end":14073,"line_start":65,"line_end":65,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5933},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14075,"byte_end":14080,"line_start":65,"line_end":65,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":5999},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14082,"byte_end":14087,"line_start":65,"line_end":65,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6079},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14089,"byte_end":14094,"line_start":65,"line_end":65,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":695},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14189,"byte_end":14197,"line_start":70,"line_end":70,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":689},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14199,"byte_end":14206,"line_start":70,"line_end":70,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":723},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14245,"byte_end":14251,"line_start":73,"line_end":73,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6173},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14253,"byte_end":14259,"line_start":73,"line_end":73,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":750},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14358,"byte_end":14368,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6181},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14370,"byte_end":14379,"line_start":78,"line_end":78,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14427,"byte_end":14435,"line_start":82,"line_end":82,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":781},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14437,"byte_end":14446,"line_start":82,"line_end":82,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":785},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14448,"byte_end":14457,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":790},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14459,"byte_end":14468,"line_start":82,"line_end":82,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6257},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14470,"byte_end":14477,"line_start":82,"line_end":82,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6309},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14479,"byte_end":14487,"line_start":82,"line_end":82,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6375},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14489,"byte_end":14497,"line_start":82,"line_end":82,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6455},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14499,"byte_end":14507,"line_start":82,"line_end":82,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":838},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14612,"byte_end":14624,"line_start":88,"line_end":88,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":832},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14626,"byte_end":14636,"line_start":88,"line_end":88,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":866},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14683,"byte_end":14693,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6549},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14695,"byte_end":14704,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14801,"byte_end":14810,"line_start":96,"line_end":96,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6557},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14812,"byte_end":14820,"line_start":96,"line_end":96,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6563},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14858,"byte_end":14864,"line_start":99,"line_end":99,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6661},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":15001,"byte_end":15010,"line_start":105,"line_end":105,"column_start":31,"column_end":40},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":11656},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":15012,"byte_end":15021,"line_start":105,"line_end":105,"column_start":42,"column_end":51},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6682},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":15023,"byte_end":15034,"line_start":105,"line_end":105,"column_start":53,"column_end":64},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6678},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":15036,"byte_end":15053,"line_start":105,"line_end":105,"column_start":66,"column_end":83},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6693},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":15055,"byte_end":15062,"line_start":105,"line_end":105,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":6694},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":15055,"byte_end":15062,"line_start":105,"line_end":105,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":6677}},{"kind":"Use","ref_id":{"krate":0,"index":255},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11768,"byte_end":11777,"line_start":305,"line_end":305,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":402},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11779,"byte_end":11791,"line_start":305,"line_end":305,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":62},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136894,"byte_end":136903,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":15,"index":65},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136905,"byte_end":136919,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":15,"index":82},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136953,"byte_end":136964,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":15,"index":68},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136966,"byte_end":136972,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":15,"index":97},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136974,"byte_end":136983,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8162},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":143840,"byte_end":143846,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":990}},{"kind":"Use","ref_id":{"krate":0,"index":8214},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144023,"byte_end":144034,"line_start":154,"line_end":154,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":990}},{"kind":"Use","ref_id":{"krate":0,"index":8449},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145271,"byte_end":145282,"line_start":192,"line_end":192,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":990}},{"kind":"Use","ref_id":{"krate":0,"index":6706},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137099,"byte_end":137104,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":6763},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137106,"byte_end":137113,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":6819},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137115,"byte_end":137121,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":6864},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137123,"byte_end":137132,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":6913},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137134,"byte_end":137140,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":6986},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137142,"byte_end":137151,"line_start":16,"line_end":16,"column_start":48,"column_end":57},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7514},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137153,"byte_end":137160,"line_start":16,"line_end":16,"column_start":59,"column_end":66},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7119},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137162,"byte_end":137169,"line_start":16,"line_end":16,"column_start":68,"column_end":75},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7177},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137171,"byte_end":137175,"line_start":16,"line_end":16,"column_start":77,"column_end":81},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7256},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137177,"byte_end":137184,"line_start":16,"line_end":16,"column_start":83,"column_end":90},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7322},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137186,"byte_end":137190,"line_start":16,"line_end":16,"column_start":92,"column_end":96},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7380},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137196,"byte_end":137203,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7453},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137205,"byte_end":137208,"line_start":17,"line_end":17,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7602},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137210,"byte_end":137214,"line_start":17,"line_end":17,"column_start":19,"column_end":23},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7668},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137216,"byte_end":137220,"line_start":17,"line_end":17,"column_start":25,"column_end":29},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7618},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137222,"byte_end":137230,"line_start":17,"line_end":17,"column_start":31,"column_end":39},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8266},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137232,"byte_end":137236,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7610},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137238,"byte_end":137252,"line_start":17,"line_end":17,"column_start":47,"column_end":61},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7716},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137254,"byte_end":137258,"line_start":17,"line_end":17,"column_start":63,"column_end":67},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7765},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137260,"byte_end":137269,"line_start":17,"line_end":17,"column_start":69,"column_end":78},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1800},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137271,"byte_end":137280,"line_start":17,"line_end":17,"column_start":80,"column_end":89},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7371},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137286,"byte_end":137298,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7841},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137300,"byte_end":137304,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7890},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137306,"byte_end":137315,"line_start":18,"line_end":18,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":7966},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137317,"byte_end":137326,"line_start":18,"line_end":18,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8029},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137328,"byte_end":137332,"line_start":18,"line_end":18,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8099},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137334,"byte_end":137337,"line_start":18,"line_end":18,"column_start":53,"column_end":56},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8449},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137389,"byte_end":137400,"line_start":22,"line_end":22,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8162},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137451,"byte_end":137457,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8214},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137508,"byte_end":137519,"line_start":28,"line_end":28,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":11612},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137707,"byte_end":137722,"line_start":35,"line_end":35,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":11567},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137724,"byte_end":137732,"line_start":35,"line_end":35,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":11499},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137734,"byte_end":137751,"line_start":35,"line_end":35,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9723},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258629,"byte_end":258642,"line_start":126,"line_end":126,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1909}},{"kind":"Use","ref_id":{"krate":0,"index":2274},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":137996,"byte_end":138006,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8500},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138008,"byte_end":138015,"line_start":44,"line_end":44,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8573},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138017,"byte_end":138024,"line_start":44,"line_end":44,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8725},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138026,"byte_end":138036,"line_start":44,"line_end":44,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8649},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138038,"byte_end":138047,"line_start":44,"line_end":44,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8798},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138049,"byte_end":138059,"line_start":44,"line_end":44,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8922},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138061,"byte_end":138067,"line_start":44,"line_end":44,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8846},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138069,"byte_end":138074,"line_start":44,"line_end":44,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":8995},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138076,"byte_end":138082,"line_start":44,"line_end":44,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9332},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138088,"byte_end":138098,"line_start":45,"line_end":45,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9388},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138100,"byte_end":138109,"line_start":45,"line_end":45,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9139},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138111,"byte_end":138120,"line_start":45,"line_end":45,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9212},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138122,"byte_end":138134,"line_start":45,"line_end":45,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9282},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138136,"byte_end":138146,"line_start":45,"line_end":45,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9433},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138148,"byte_end":138155,"line_start":45,"line_end":45,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9073},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138157,"byte_end":138167,"line_start":45,"line_end":45,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9065},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138169,"byte_end":138176,"line_start":45,"line_end":45,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9577},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138182,"byte_end":138194,"line_start":46,"line_end":46,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":2364},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138196,"byte_end":138208,"line_start":46,"line_end":46,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9512},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138210,"byte_end":138219,"line_start":46,"line_end":46,"column_start":33,"column_end":42},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9723},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138298,"byte_end":138311,"line_start":51,"line_end":51,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":11450},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138446,"byte_end":138464,"line_start":55,"line_end":55,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":11382},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138466,"byte_end":138486,"line_start":55,"line_end":55,"column_start":48,"column_end":68},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":2446},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138543,"byte_end":138547,"line_start":60,"line_end":60,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9742},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138549,"byte_end":138553,"line_start":60,"line_end":60,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":2464},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138592,"byte_end":138598,"line_start":63,"line_end":63,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9748},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138600,"byte_end":138606,"line_start":63,"line_end":63,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":2488},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138643,"byte_end":138648,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9754},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138650,"byte_end":138655,"line_start":66,"line_end":66,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":2515},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138690,"byte_end":138694,"line_start":69,"line_end":69,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9760},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138696,"byte_end":138700,"line_start":69,"line_end":69,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":2539},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138741,"byte_end":138748,"line_start":72,"line_end":72,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9802},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138750,"byte_end":138757,"line_start":72,"line_end":72,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":2569},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138798,"byte_end":138805,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":2561},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138807,"byte_end":138813,"line_start":75,"line_end":75,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":2594},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138852,"byte_end":138858,"line_start":78,"line_end":78,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9808},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138860,"byte_end":138866,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":2630},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138905,"byte_end":138911,"line_start":81,"line_end":81,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9869},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":138913,"byte_end":138919,"line_start":81,"line_end":81,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":9969},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":139068,"byte_end":139082,"line_start":87,"line_end":87,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":10317},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8430118,"byte_end":8430122,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":10004}},{"kind":"Use","ref_id":{"krate":0,"index":10318},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8430118,"byte_end":8430122,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":10085}},{"kind":"Use","ref_id":{"krate":0,"index":10297},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8430124,"byte_end":8430131,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":10004}},{"kind":"Use","ref_id":{"krate":0,"index":10298},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8430124,"byte_end":8430131,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":10086}},{"kind":"Use","ref_id":{"krate":0,"index":10287},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8430133,"byte_end":8430143,"line_start":25,"line_end":25,"column_start":37,"column_end":47},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":10004}},{"kind":"Use","ref_id":{"krate":0,"index":10306},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8430145,"byte_end":8430155,"line_start":25,"line_end":25,"column_start":49,"column_end":59},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":10004}},{"kind":"Use","ref_id":{"krate":0,"index":10171},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":139232,"byte_end":139248,"line_start":93,"line_end":93,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":10274},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":139362,"byte_end":139372,"line_start":98,"line_end":98,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":10252},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":139374,"byte_end":139383,"line_start":98,"line_end":98,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":0,"index":1800},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11850,"byte_end":11859,"line_start":308,"line_end":308,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2364},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11861,"byte_end":11873,"line_start":308,"line_end":308,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":260},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":336949,"byte_end":336956,"line_start":5,"line_end":5,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":17,"index":274},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337015,"byte_end":337020,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":17,"index":305},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337080,"byte_end":337089,"line_start":11,"line_end":11,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":17,"index":310},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337091,"byte_end":337099,"line_start":11,"line_end":11,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":15,"index":142},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337147,"byte_end":337158,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":0,"index":2673},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337196,"byte_end":337204,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":0,"index":2676},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337206,"byte_end":337219,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":2,"index":8495},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337252,"byte_end":337259,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":2,"index":32543},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337261,"byte_end":337265,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":2,"index":8505},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337267,"byte_end":337272,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":2,"index":32583},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337274,"byte_end":337282,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":2,"index":32592},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337284,"byte_end":337298,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":17,"index":10},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337330,"byte_end":337335,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":17,"index":13},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337337,"byte_end":337347,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":17,"index":16},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337349,"byte_end":337359,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":17,"index":111},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337365,"byte_end":337374,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":17,"index":77},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337376,"byte_end":337390,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":17,"index":132},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337392,"byte_end":337407,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":17,"index":237},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337435,"byte_end":337445,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":17,"index":238},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":337493,"byte_end":337507,"line_start":28,"line_end":28,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":2658}},{"kind":"Use","ref_id":{"krate":22,"index":17},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344469,"byte_end":344478,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":22,"index":20},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344480,"byte_end":344490,"line_start":17,"line_end":17,"column_start":16,"column_end":26},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":22,"index":25},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344492,"byte_end":344501,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":22,"index":27},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344503,"byte_end":344515,"line_start":17,"line_end":17,"column_start":39,"column_end":51},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":1,"index":2541},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344517,"byte_end":344522,"line_start":17,"line_end":17,"column_start":53,"column_end":58},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":1,"index":6657},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344524,"byte_end":344533,"line_start":17,"line_end":17,"column_start":60,"column_end":69},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":1,"index":6720},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344539,"byte_end":344546,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":1,"index":2976},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344548,"byte_end":344558,"line_start":18,"line_end":18,"column_start":14,"column_end":24},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":1,"index":2539},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344560,"byte_end":344566,"line_start":18,"line_end":18,"column_start":26,"column_end":32},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":1,"index":6734},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344568,"byte_end":344576,"line_start":18,"line_end":18,"column_start":34,"column_end":42},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10332},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345246,"byte_end":345256,"line_start":42,"line_end":42,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10369},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345301,"byte_end":345310,"line_start":45,"line_end":45,"column_start":27,"column_end":36},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10426},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345355,"byte_end":345364,"line_start":48,"line_end":48,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10479},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345399,"byte_end":345404,"line_start":51,"line_end":51,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10539},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345439,"byte_end":345444,"line_start":54,"line_end":54,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":2933},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345478,"byte_end":345482,"line_start":57,"line_end":57,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10547},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345484,"byte_end":345488,"line_start":57,"line_end":57,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":2957},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345531,"byte_end":345539,"line_start":60,"line_end":60,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10611},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345541,"byte_end":345548,"line_start":60,"line_end":60,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10682},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345586,"byte_end":345592,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":3018},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345628,"byte_end":345633,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":3016},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345635,"byte_end":345640,"line_start":66,"line_end":66,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10710},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345676,"byte_end":345681,"line_start":69,"line_end":69,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10718},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345817,"byte_end":345822,"line_start":77,"line_end":77,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10769},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345855,"byte_end":345859,"line_start":80,"line_end":80,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10778},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345910,"byte_end":345922,"line_start":83,"line_end":83,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10787},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":345967,"byte_end":345976,"line_start":86,"line_end":86,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10796},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346019,"byte_end":346027,"line_start":89,"line_end":89,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10807},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346074,"byte_end":346083,"line_start":92,"line_end":92,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10817},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346136,"byte_end":346148,"line_start":95,"line_end":95,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10828},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346193,"byte_end":346202,"line_start":98,"line_end":98,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":3242},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346240,"byte_end":346246,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":3240},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346248,"byte_end":346254,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10839},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346288,"byte_end":346292,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":3284},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346326,"byte_end":346330,"line_start":107,"line_end":107,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":3282},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346332,"byte_end":346336,"line_start":107,"line_end":107,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10848},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346373,"byte_end":346381,"line_start":110,"line_end":110,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10854},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346383,"byte_end":346392,"line_start":110,"line_end":110,"column_start":33,"column_end":42},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":3339},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346394,"byte_end":346406,"line_start":110,"line_end":110,"column_start":44,"column_end":56},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":3340},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346394,"byte_end":346406,"line_start":110,"line_end":110,"column_start":44,"column_end":56},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3355}},{"kind":"Use","ref_id":{"krate":0,"index":10860},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346440,"byte_end":346444,"line_start":113,"line_end":113,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10911},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346481,"byte_end":346487,"line_start":116,"line_end":116,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10918},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346522,"byte_end":346527,"line_start":119,"line_end":119,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10927},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346580,"byte_end":346593,"line_start":122,"line_end":122,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":10936},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346636,"byte_end":346644,"line_start":125,"line_end":125,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":2699}},{"kind":"Use","ref_id":{"krate":0,"index":3462},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12203,"byte_end":12215,"line_start":327,"line_end":327,"column_start":36,"column_end":48},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3479},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12217,"byte_end":12230,"line_start":327,"line_end":327,"column_start":50,"column_end":63},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3490},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12232,"byte_end":12244,"line_start":327,"line_end":327,"column_start":65,"column_end":77},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3494},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12246,"byte_end":12261,"line_start":327,"line_end":327,"column_start":79,"column_end":94},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11203},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8485374,"byte_end":8485390,"line_start":9,"line_end":9,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":11102}},{"kind":"Use","ref_id":{"krate":0,"index":11124},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8485392,"byte_end":8485397,"line_start":9,"line_end":9,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":11102}},{"kind":"Use","ref_id":{"krate":0,"index":11161},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8485399,"byte_end":8485414,"line_start":9,"line_end":9,"column_start":48,"column_end":63},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":11102}},{"kind":"Use","ref_id":{"krate":0,"index":11180},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8485416,"byte_end":8485426,"line_start":9,"line_end":9,"column_start":65,"column_end":75},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":11102}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":12350,"line_start":1,"line_end":335,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":16},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2697},{"krate":0,"index":2699},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":11102}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"! Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":394,"byte_end":482,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":483,"byte_end":504,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":737,"byte_end":780,"line_start":15,"line_end":15,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":975},{"krate":0,"index":6643},{"krate":0,"index":6672},{"krate":0,"index":6673},{"krate":0,"index":6674},{"krate":0,"index":6675},{"krate":0,"index":6676},{"krate":0,"index":6677},{"krate":0,"index":12403},{"krate":0,"index":976}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"! Futures","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12352,"byte_end":12363,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12364,"byte_end":12367,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Future`s,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12368,"byte_end":12442,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12443,"byte_end":12521,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Future` types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12522,"byte_end":12552,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3718},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35003,"byte_end":35008,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First(Fut1)","parent":{"krate":0,"index":3715},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3720},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35027,"byte_end":35033,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second(Fut2)","parent":{"krate":0,"index":3715},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3722},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35052,"byte_end":35057,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":3715},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3715},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":34977,"byte_end":34984,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3718},{"krate":0,"index":3720},{"krate":0,"index":3722}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":34936,"byte_end":34950,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3758},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":34977,"byte_end":34984,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"__Flatten","qualname":"::future::future::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":3762},{"krate":0,"index":3763},{"krate":0,"index":3764}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3788},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39568,"byte_end":39572,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39489,"byte_end":39556,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39457,"byte_end":39471,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3809},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39568,"byte_end":39572,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::future::future::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":3812},{"krate":0,"index":3813}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41354,"byte_end":41364,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39732,"byte_end":39800,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39805,"byte_end":39808,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39813,"byte_end":39881,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39886,"byte_end":39931,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39936,"byte_end":39939,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39944,"byte_end":39958,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39963,"byte_end":39966,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39971,"byte_end":39978,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39983,"byte_end":40024,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40029,"byte_end":40060,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40065,"byte_end":40121,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40126,"byte_end":40150,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40155,"byte_end":40190,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40195,"byte_end":40220,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40225,"byte_end":40228,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40233,"byte_end":40282,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40287,"byte_end":40290,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40295,"byte_end":40337,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40342,"byte_end":40381,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40386,"byte_end":40425,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40430,"byte_end":40447,"line_start":39,"line_end":39,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40452,"byte_end":40455,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::termianted()` to create an already-terminated future","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40460,"byte_end":40530,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40535,"byte_end":40574,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40579,"byte_end":40620,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40625,"byte_end":40651,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40656,"byte_end":40659,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40664,"byte_end":40674,"line_start":46,"line_end":46,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40679,"byte_end":40696,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40701,"byte_end":40735,"line_start":48,"line_end":48,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40740,"byte_end":40787,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40792,"byte_end":40841,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40846,"byte_end":40908,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40913,"byte_end":40937,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40942,"byte_end":40985,"line_start":53,"line_end":53,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40990,"byte_end":41047,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41052,"byte_end":41127,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41132,"byte_end":41162,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41167,"byte_end":41184,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41189,"byte_end":41203,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41208,"byte_end":41292,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41297,"byte_end":41306,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41311,"byte_end":41316,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41321,"byte_end":41330,"line_start":62,"line_end":62,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41335,"byte_end":41342,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":3835},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42317,"byte_end":42327,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":3832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3837},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42391,"byte_end":42399,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":3832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3832},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42299,"byte_end":42302,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        #[pin]\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":3835},{"krate":0,"index":3837}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42222,"byte_end":42289,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42190,"byte_end":42204,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3866},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42299,"byte_end":42302,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"__Map","qualname":"::future::future::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":3870},{"krate":0,"index":3871}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3896},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":3898}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3914},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::future::future::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":3917},{"krate":0,"index":3918}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3949},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":3951}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3967},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__FlattenStream","qualname":"::future::future::_::__FlattenStream","value":"__FlattenStream {  }","parent":null,"children":[{"krate":0,"index":3970},{"krate":0,"index":3971}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4004},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4007}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4026},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Map","qualname":"::future::future::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":4030},{"krate":0,"index":4031}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4071},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":4073}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4089},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__IntoStream","qualname":"::future::future::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":4092},{"krate":0,"index":4093}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4126},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":4129}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4148},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapInto","qualname":"::future::future::_::__MapInto","value":"__MapInto {  }","parent":null,"children":[{"krate":0,"index":4152},{"krate":0,"index":4153}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4195},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":4199}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4221},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Then","qualname":"::future::future::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":4226},{"krate":0,"index":4227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4277},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":4280}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4299},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::future::future::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":4303},{"krate":0,"index":4304}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4344},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":4346}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4362},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__NeverError","qualname":"::future::future::_::__NeverError","value":"__NeverError {  }","parent":null,"children":[{"krate":0,"index":4365},{"krate":0,"index":4366}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4397},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":4399}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4415},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__UnitError","qualname":"::future::future::_::__UnitError","value":"__UnitError {  }","parent":null,"children":[{"krate":0,"index":4418},{"krate":0,"index":4419}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4448},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":45015,"byte_end":45026,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":44936,"byte_end":45003,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":44904,"byte_end":44918,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4469},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":45015,"byte_end":45026,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"__CatchUnwind","qualname":"::future::future::catch_unwind::_::__CatchUnwind","value":"__CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":4472},{"krate":0,"index":4473}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":45996,"byte_end":46002,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":45853,"byte_end":45916,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":45917,"byte_end":45984,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":48114,"byte_end":48118,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47845,"byte_end":47919,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47924,"byte_end":47997,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":48002,"byte_end":48070,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":48075,"byte_end":48102,"line_start":99,"line_end":99,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":255},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18777,"byte_end":18786,"line_start":119,"line_end":119,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18678,"byte_end":18752,"line_start":117,"line_end":117,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18753,"byte_end":18766,"line_start":118,"line_end":118,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19618,"byte_end":19621,"line_start":142,"line_end":142,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18801,"byte_end":18876,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18881,"byte_end":18904,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18909,"byte_end":18912,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18917,"byte_end":18991,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18996,"byte_end":19067,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19072,"byte_end":19134,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19139,"byte_end":19142,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19147,"byte_end":19218,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19223,"byte_end":19294,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19299,"byte_end":19320,"line_start":129,"line_end":129,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19325,"byte_end":19328,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19333,"byte_end":19347,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19352,"byte_end":19355,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19360,"byte_end":19367,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19372,"byte_end":19413,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19418,"byte_end":19453,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19458,"byte_end":19461,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19466,"byte_end":19495,"line_start":137,"line_end":137,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19500,"byte_end":19543,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19548,"byte_end":19584,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19589,"byte_end":19598,"line_start":140,"line_end":140,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19603,"byte_end":19610,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20018,"byte_end":20026,"line_start":155,"line_end":155,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19791,"byte_end":19866,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19871,"byte_end":19894,"line_start":151,"line_end":151,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19899,"byte_end":19902,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19907,"byte_end":19985,"line_start":153,"line_end":153,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19990,"byte_end":20010,"line_start":154,"line_end":154,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21038,"byte_end":21042,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20185,"byte_end":20261,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20266,"byte_end":20309,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20314,"byte_end":20317,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20322,"byte_end":20393,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20398,"byte_end":20472,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20477,"byte_end":20493,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20498,"byte_end":20501,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20506,"byte_end":20581,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20586,"byte_end":20597,"line_start":171,"line_end":171,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20602,"byte_end":20605,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20610,"byte_end":20681,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20686,"byte_end":20712,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20717,"byte_end":20720,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20725,"byte_end":20739,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20744,"byte_end":20747,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20752,"byte_end":20759,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20764,"byte_end":20805,"line_start":179,"line_end":179,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20810,"byte_end":20845,"line_start":180,"line_end":180,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20850,"byte_end":20853,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20858,"byte_end":20892,"line_start":182,"line_end":182,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20897,"byte_end":20962,"line_start":183,"line_end":183,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20967,"byte_end":21004,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21009,"byte_end":21018,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21023,"byte_end":21030,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21912,"byte_end":21923,"line_start":218,"line_end":218,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21254,"byte_end":21329,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21334,"byte_end":21355,"line_start":197,"line_end":197,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21360,"byte_end":21363,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21368,"byte_end":21448,"line_start":199,"line_end":199,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21453,"byte_end":21525,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21530,"byte_end":21533,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21538,"byte_end":21552,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21557,"byte_end":21560,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21565,"byte_end":21572,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21577,"byte_end":21618,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21623,"byte_end":21658,"line_start":206,"line_end":206,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21663,"byte_end":21666,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21671,"byte_end":21685,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21690,"byte_end":21718,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21723,"byte_end":21759,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21764,"byte_end":21776,"line_start":211,"line_end":211,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21781,"byte_end":21819,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21824,"byte_end":21830,"line_start":213,"line_end":213,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21835,"byte_end":21838,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21843,"byte_end":21878,"line_start":215,"line_end":215,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21883,"byte_end":21892,"line_start":216,"line_end":216,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21897,"byte_end":21904,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22728,"byte_end":22740,"line_start":248,"line_end":248,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22069,"byte_end":22145,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22150,"byte_end":22171,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22176,"byte_end":22179,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22184,"byte_end":22263,"line_start":229,"line_end":229,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22268,"byte_end":22340,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22345,"byte_end":22348,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22353,"byte_end":22367,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22372,"byte_end":22375,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22380,"byte_end":22387,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22392,"byte_end":22433,"line_start":235,"line_end":235,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22438,"byte_end":22473,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22478,"byte_end":22481,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22486,"byte_end":22500,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22505,"byte_end":22533,"line_start":239,"line_end":239,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22538,"byte_end":22574,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22579,"byte_end":22591,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22596,"byte_end":22634,"line_start":242,"line_end":242,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22639,"byte_end":22645,"line_start":243,"line_end":243,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22650,"byte_end":22653,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22658,"byte_end":22694,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22699,"byte_end":22708,"line_start":246,"line_end":246,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22713,"byte_end":22720,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23485,"byte_end":23496,"line_start":274,"line_end":274,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22887,"byte_end":22940,"line_start":256,"line_end":256,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22945,"byte_end":22948,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22953,"byte_end":23027,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23032,"byte_end":23095,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23100,"byte_end":23103,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23108,"byte_end":23122,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23127,"byte_end":23130,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23135,"byte_end":23142,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23147,"byte_end":23188,"line_start":264,"line_end":264,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23193,"byte_end":23228,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23233,"byte_end":23268,"line_start":266,"line_end":266,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23273,"byte_end":23276,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23281,"byte_end":23311,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23316,"byte_end":23354,"line_start":269,"line_end":269,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23359,"byte_end":23410,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23415,"byte_end":23451,"line_start":271,"line_end":271,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23456,"byte_end":23465,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23470,"byte_end":23477,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24327,"byte_end":24334,"line_start":303,"line_end":303,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23601,"byte_end":23665,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23670,"byte_end":23706,"line_start":282,"line_end":282,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23711,"byte_end":23714,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23719,"byte_end":23788,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23793,"byte_end":23830,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23835,"byte_end":23838,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23843,"byte_end":23903,"line_start":287,"line_end":287,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23908,"byte_end":23911,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23916,"byte_end":23987,"line_start":289,"line_end":289,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23992,"byte_end":24018,"line_start":290,"line_end":290,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24023,"byte_end":24026,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24031,"byte_end":24045,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24050,"byte_end":24053,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24058,"byte_end":24065,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24070,"byte_end":24111,"line_start":295,"line_end":295,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24116,"byte_end":24151,"line_start":296,"line_end":296,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24156,"byte_end":24159,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24164,"byte_end":24210,"line_start":298,"line_end":298,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24215,"byte_end":24256,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24261,"byte_end":24293,"line_start":300,"line_end":300,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24298,"byte_end":24307,"line_start":301,"line_end":301,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24312,"byte_end":24319,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25439,"byte_end":25453,"line_start":337,"line_end":337,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24548,"byte_end":24623,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24628,"byte_end":24651,"line_start":313,"line_end":313,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24656,"byte_end":24659,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24664,"byte_end":24736,"line_start":315,"line_end":315,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24741,"byte_end":24814,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24819,"byte_end":24833,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24838,"byte_end":24841,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24846,"byte_end":24916,"line_start":319,"line_end":319,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24921,"byte_end":24939,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24944,"byte_end":24947,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24952,"byte_end":24966,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24971,"byte_end":24974,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24979,"byte_end":24986,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24991,"byte_end":25032,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25037,"byte_end":25072,"line_start":326,"line_end":326,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25077,"byte_end":25120,"line_start":327,"line_end":327,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25125,"byte_end":25128,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25133,"byte_end":25173,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25178,"byte_end":25244,"line_start":330,"line_end":330,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25249,"byte_end":25252,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25257,"byte_end":25310,"line_start":332,"line_end":332,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25315,"byte_end":25361,"line_start":333,"line_end":333,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25366,"byte_end":25405,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25410,"byte_end":25419,"line_start":335,"line_end":335,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25424,"byte_end":25431,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26489,"byte_end":26493,"line_start":361,"line_end":361,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25594,"byte_end":25667,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25672,"byte_end":25738,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25743,"byte_end":25761,"line_start":347,"line_end":347,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25766,"byte_end":25769,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25774,"byte_end":25841,"line_start":349,"line_end":349,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25846,"byte_end":25911,"line_start":350,"line_end":350,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25916,"byte_end":25988,"line_start":351,"line_end":351,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25993,"byte_end":26067,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26072,"byte_end":26098,"line_start":353,"line_end":353,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26103,"byte_end":26106,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26111,"byte_end":26182,"line_start":355,"line_end":355,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26187,"byte_end":26262,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26267,"byte_end":26321,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26326,"byte_end":26329,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26334,"byte_end":26408,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26413,"byte_end":26481,"line_start":360,"line_end":360,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27333,"byte_end":27340,"line_start":387,"line_end":387,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26639,"byte_end":26705,"line_start":369,"line_end":369,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26710,"byte_end":26713,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26718,"byte_end":26793,"line_start":371,"line_end":371,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26798,"byte_end":26871,"line_start":372,"line_end":372,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26876,"byte_end":26945,"line_start":373,"line_end":373,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26950,"byte_end":27000,"line_start":374,"line_end":374,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27005,"byte_end":27008,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27013,"byte_end":27027,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27032,"byte_end":27035,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27040,"byte_end":27047,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27052,"byte_end":27093,"line_start":379,"line_end":379,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27098,"byte_end":27133,"line_start":380,"line_end":380,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27138,"byte_end":27141,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27146,"byte_end":27175,"line_start":382,"line_end":382,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27180,"byte_end":27258,"line_start":383,"line_end":383,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27263,"byte_end":27299,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27304,"byte_end":27313,"line_start":385,"line_end":385,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27318,"byte_end":27325,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28878,"byte_end":28890,"line_start":427,"line_end":427,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27522,"byte_end":27576,"line_start":395,"line_end":395,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27581,"byte_end":27584,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27589,"byte_end":27664,"line_start":397,"line_end":397,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27669,"byte_end":27743,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27748,"byte_end":27822,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27827,"byte_end":27878,"line_start":400,"line_end":400,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27883,"byte_end":27886,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27891,"byte_end":27966,"line_start":402,"line_end":402,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27971,"byte_end":28041,"line_start":403,"line_end":403,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28046,"byte_end":28113,"line_start":404,"line_end":404,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28118,"byte_end":28193,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28198,"byte_end":28270,"line_start":406,"line_end":406,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28275,"byte_end":28278,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28283,"byte_end":28347,"line_start":408,"line_end":408,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28352,"byte_end":28409,"line_start":409,"line_end":409,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28414,"byte_end":28417,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28422,"byte_end":28436,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28441,"byte_end":28444,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28449,"byte_end":28456,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28461,"byte_end":28502,"line_start":414,"line_end":414,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28507,"byte_end":28557,"line_start":415,"line_end":415,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28562,"byte_end":28565,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28570,"byte_end":28604,"line_start":417,"line_end":417,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28609,"byte_end":28658,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28663,"byte_end":28666,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28671,"byte_end":28720,"line_start":420,"line_end":420,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28725,"byte_end":28749,"line_start":421,"line_end":421,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28754,"byte_end":28761,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28766,"byte_end":28816,"line_start":423,"line_end":423,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28821,"byte_end":28830,"line_start":424,"line_end":424,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28835,"byte_end":28842,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":28847,"byte_end":28870,"line_start":426,"line_end":426,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30546,"byte_end":30552,"line_start":480,"line_end":480,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29024,"byte_end":29099,"line_start":434,"line_end":434,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29104,"byte_end":29127,"line_start":435,"line_end":435,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29132,"byte_end":29135,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29140,"byte_end":29214,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29219,"byte_end":29292,"line_start":438,"line_end":438,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29297,"byte_end":29309,"line_start":439,"line_end":439,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29314,"byte_end":29317,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29322,"byte_end":29386,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29391,"byte_end":29448,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29453,"byte_end":29456,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29461,"byte_end":29475,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29480,"byte_end":29483,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29488,"byte_end":29495,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29500,"byte_end":29541,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29546,"byte_end":29581,"line_start":448,"line_end":448,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29586,"byte_end":29589,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29594,"byte_end":29623,"line_start":450,"line_end":450,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29628,"byte_end":29662,"line_start":451,"line_end":451,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29667,"byte_end":29701,"line_start":452,"line_end":452,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29706,"byte_end":29709,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29714,"byte_end":29747,"line_start":454,"line_end":454,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29752,"byte_end":29785,"line_start":455,"line_end":455,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29790,"byte_end":29799,"line_start":456,"line_end":456,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29804,"byte_end":29811,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29816,"byte_end":29819,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29824,"byte_end":29831,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29836,"byte_end":29905,"line_start":460,"line_end":460,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29910,"byte_end":29985,"line_start":461,"line_end":461,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":29990,"byte_end":30021,"line_start":462,"line_end":462,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30026,"byte_end":30029,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30034,"byte_end":30075,"line_start":464,"line_end":464,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30080,"byte_end":30115,"line_start":465,"line_end":465,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30120,"byte_end":30156,"line_start":466,"line_end":466,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30161,"byte_end":30181,"line_start":467,"line_end":467,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30186,"byte_end":30189,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30194,"byte_end":30223,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30228,"byte_end":30262,"line_start":470,"line_end":470,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30267,"byte_end":30301,"line_start":471,"line_end":471,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30306,"byte_end":30351,"line_start":472,"line_end":472,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30356,"byte_end":30397,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30402,"byte_end":30409,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30414,"byte_end":30447,"line_start":475,"line_end":475,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30452,"byte_end":30484,"line_start":476,"line_end":476,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30489,"byte_end":30498,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30503,"byte_end":30510,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":30515,"byte_end":30538,"line_start":479,"line_end":479,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31550,"byte_end":31555,"line_start":510,"line_end":510,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31321,"byte_end":31362,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31367,"byte_end":31370,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31375,"byte_end":31450,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31455,"byte_end":31512,"line_start":508,"line_end":508,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31517,"byte_end":31542,"line_start":509,"line_end":509,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31981,"byte_end":31992,"line_start":524,"line_end":524,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31680,"byte_end":31721,"line_start":517,"line_end":517,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31726,"byte_end":31729,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31734,"byte_end":31793,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31798,"byte_end":31801,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31806,"byte_end":31881,"line_start":521,"line_end":521,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31886,"byte_end":31943,"line_start":522,"line_end":522,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":31948,"byte_end":31973,"line_start":523,"line_end":523,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32248,"byte_end":32258,"line_start":533,"line_end":533,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32115,"byte_end":32164,"line_start":531,"line_end":531,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32169,"byte_end":32240,"line_start":532,"line_end":532,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32497,"byte_end":32508,"line_start":542,"line_end":542,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32361,"byte_end":32410,"line_start":540,"line_end":540,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32415,"byte_end":32489,"line_start":541,"line_end":541,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32690,"byte_end":32700,"line_start":550,"line_end":550,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32613,"byte_end":32682,"line_start":549,"line_end":549,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":34096,"byte_end":34108,"line_start":588,"line_end":588,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32836,"byte_end":32908,"line_start":557,"line_end":557,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32913,"byte_end":32976,"line_start":558,"line_end":558,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32981,"byte_end":32984,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32989,"byte_end":33055,"line_start":560,"line_end":560,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33060,"byte_end":33063,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33068,"byte_end":33141,"line_start":562,"line_end":562,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33146,"byte_end":33215,"line_start":563,"line_end":563,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33220,"byte_end":33290,"line_start":564,"line_end":564,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33295,"byte_end":33298,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33303,"byte_end":33317,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33322,"byte_end":33325,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33330,"byte_end":33337,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33342,"byte_end":33372,"line_start":569,"line_end":569,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33377,"byte_end":33427,"line_start":570,"line_end":570,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33432,"byte_end":33471,"line_start":571,"line_end":571,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33476,"byte_end":33527,"line_start":572,"line_end":572,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33532,"byte_end":33535,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33540,"byte_end":33600,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33605,"byte_end":33657,"line_start":575,"line_end":575,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33662,"byte_end":33669,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33674,"byte_end":33677,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33682,"byte_end":33751,"line_start":578,"line_end":578,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33756,"byte_end":33829,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33834,"byte_end":33866,"line_start":580,"line_end":580,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33871,"byte_end":33874,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33879,"byte_end":33886,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33891,"byte_end":33938,"line_start":583,"line_end":583,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33943,"byte_end":33982,"line_start":584,"line_end":584,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33987,"byte_end":33990,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33995,"byte_end":34076,"line_start":586,"line_end":586,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":34081,"byte_end":34088,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4492},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76210,"byte_end":76220,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76131,"byte_end":76198,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76099,"byte_end":76113,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4513},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76210,"byte_end":76220,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"__IntoFuture","qualname":"::future::try_future::into_future::_::__IntoFuture","value":"__IntoFuture {  }","parent":null,"children":[{"krate":0,"index":4516},{"krate":0,"index":4517}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4539},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77113,"byte_end":77118,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First(Fut1)","parent":{"krate":0,"index":4536},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4541},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77137,"byte_end":77143,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second(Fut2)","parent":{"krate":0,"index":4536},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4543},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77162,"byte_end":77167,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":4536},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4536},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77084,"byte_end":77094,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4539},{"krate":0,"index":4541},{"krate":0,"index":4543}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77043,"byte_end":77057,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4579},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77084,"byte_end":77094,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"__TryFlatten","qualname":"::future::try_future::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4583},{"krate":0,"index":4584},{"krate":0,"index":4585}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4612},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82394,"byte_end":82399,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First(Fut1)","parent":{"krate":0,"index":4609},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4614},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82418,"byte_end":82424,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second(Fut2)","parent":{"krate":0,"index":4609},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4616},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82443,"byte_end":82448,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":4609},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4609},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82362,"byte_end":82375,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4612},{"krate":0,"index":4614},{"krate":0,"index":4616}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82321,"byte_end":82335,"line_start":6,"line_end":6,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4652},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82362,"byte_end":82375,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"__TryFlattenErr","qualname":"::future::try_future::try_flatten_err::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4656},{"krate":0,"index":4657},{"krate":0,"index":4658}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4684},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4687}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4706},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__TryFlatten","qualname":"::future::try_future::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4710},{"krate":0,"index":4711}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4752},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4755}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4774},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__TryFlattenErr","qualname":"::future::try_future::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4778},{"krate":0,"index":4779}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4819},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":4821}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4837},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__TryFlattenStream","qualname":"::future::try_future::_::__TryFlattenStream","value":"__TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":4840},{"krate":0,"index":4841}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4875},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":4879}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4901},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__AndThen","qualname":"::future::try_future::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":4906},{"krate":0,"index":4907}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4958},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":4962}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4984},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__OrElse","qualname":"::future::try_future::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":4989},{"krate":0,"index":4990}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5040},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5043}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5062},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::future::try_future::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":5066},{"krate":0,"index":5067}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5108},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":5111}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5130},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__OkInto","qualname":"::future::try_future::_::__OkInto","value":"__OkInto {  }","parent":null,"children":[{"krate":0,"index":5134},{"krate":0,"index":5135}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5176},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5179}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5198},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::future::try_future::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":5202},{"krate":0,"index":5203}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5244},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":5247}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5266},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::future::try_future::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":5270},{"krate":0,"index":5271}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5312},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":5315}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5334},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::future::try_future::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":5338},{"krate":0,"index":5339}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5380},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":5383}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5402},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::future::try_future::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":5406},{"krate":0,"index":5407}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5449},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":5453}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5475},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapOkOrElse","qualname":"::future::try_future::_::__MapOkOrElse","value":"__MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":5480},{"krate":0,"index":5481}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5531},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5534}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5553},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__UnwrapOrElse","qualname":"::future::try_future::_::__UnwrapOrElse","value":"__UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5557},{"krate":0,"index":5558}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":402},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59291,"byte_end":59303,"line_start":136,"line_end":136,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":432}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59227,"byte_end":59280,"line_start":135,"line_end":135,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61961,"byte_end":61967,"line_start":215,"line_end":215,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60589,"byte_end":60647,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60652,"byte_end":60655,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60660,"byte_end":60735,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60740,"byte_end":60810,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60815,"byte_end":60888,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60893,"byte_end":60922,"line_start":182,"line_end":182,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60927,"byte_end":60930,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60935,"byte_end":61010,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61015,"byte_end":61090,"line_start":185,"line_end":185,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61095,"byte_end":61142,"line_start":186,"line_end":186,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61147,"byte_end":61150,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61155,"byte_end":61230,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61235,"byte_end":61261,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61266,"byte_end":61269,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61274,"byte_end":61288,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61293,"byte_end":61296,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61301,"byte_end":61308,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61313,"byte_end":61351,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61356,"byte_end":61359,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61364,"byte_end":61405,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61410,"byte_end":61455,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61460,"byte_end":61502,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61507,"byte_end":61543,"line_start":199,"line_end":199,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61548,"byte_end":61557,"line_start":200,"line_end":200,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61562,"byte_end":61569,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61574,"byte_end":61577,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61582,"byte_end":61654,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61659,"byte_end":61670,"line_start":204,"line_end":204,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61675,"byte_end":61678,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61683,"byte_end":61690,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61695,"byte_end":61733,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61738,"byte_end":61741,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61746,"byte_end":61787,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61792,"byte_end":61838,"line_start":210,"line_end":210,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61843,"byte_end":61885,"line_start":211,"line_end":211,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61890,"byte_end":61927,"line_start":212,"line_end":212,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61932,"byte_end":61941,"line_start":213,"line_end":213,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61946,"byte_end":61953,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63529,"byte_end":63543,"line_start":255,"line_end":255,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62158,"byte_end":62275,"line_start":223,"line_end":223,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62280,"byte_end":62283,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62288,"byte_end":62410,"line_start":225,"line_end":225,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62415,"byte_end":62465,"line_start":226,"line_end":226,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62470,"byte_end":62473,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62478,"byte_end":62553,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62558,"byte_end":62633,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62638,"byte_end":62685,"line_start":230,"line_end":230,"column_start":5,"column_end":52}},{"value":"/ ","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62690,"byte_end":62694,"line_start":231,"line_end":231,"column_start":5,"column_end":9}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62699,"byte_end":62774,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62779,"byte_end":62854,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62859,"byte_end":62906,"line_start":234,"line_end":234,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62911,"byte_end":62914,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62919,"byte_end":62994,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62999,"byte_end":63025,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63030,"byte_end":63033,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63038,"byte_end":63052,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63057,"byte_end":63060,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63065,"byte_end":63072,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63077,"byte_end":63115,"line_start":242,"line_end":242,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63120,"byte_end":63123,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63128,"byte_end":63169,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63174,"byte_end":63219,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63224,"byte_end":63285,"line_start":246,"line_end":246,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63290,"byte_end":63322,"line_start":247,"line_end":247,"column_start":5,"column_end":37}},{"value":"/ ","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63327,"byte_end":63331,"line_start":248,"line_end":248,"column_start":5,"column_end":9}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63336,"byte_end":63382,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63387,"byte_end":63448,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63453,"byte_end":63486,"line_start":251,"line_end":251,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63491,"byte_end":63500,"line_start":252,"line_end":252,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63505,"byte_end":63512,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ ","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63517,"byte_end":63521,"line_start":254,"line_end":254,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65226,"byte_end":65233,"line_start":303,"line_end":303,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63777,"byte_end":63833,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63838,"byte_end":63841,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63846,"byte_end":63920,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63925,"byte_end":63986,"line_start":267,"line_end":267,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63991,"byte_end":64061,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64066,"byte_end":64141,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64146,"byte_end":64181,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64186,"byte_end":64189,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64194,"byte_end":64269,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64274,"byte_end":64349,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64354,"byte_end":64401,"line_start":274,"line_end":274,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64406,"byte_end":64409,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64414,"byte_end":64489,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64494,"byte_end":64520,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64525,"byte_end":64528,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64533,"byte_end":64547,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64552,"byte_end":64555,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64560,"byte_end":64567,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64572,"byte_end":64610,"line_start":282,"line_end":282,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64615,"byte_end":64618,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64623,"byte_end":64664,"line_start":284,"line_end":284,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64669,"byte_end":64715,"line_start":285,"line_end":285,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64720,"byte_end":64763,"line_start":286,"line_end":286,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64768,"byte_end":64805,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64810,"byte_end":64819,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64824,"byte_end":64831,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64836,"byte_end":64839,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64844,"byte_end":64917,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64922,"byte_end":64936,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64941,"byte_end":64944,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64949,"byte_end":64956,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64961,"byte_end":64999,"line_start":295,"line_end":295,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65004,"byte_end":65007,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65012,"byte_end":65053,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65058,"byte_end":65103,"line_start":298,"line_end":298,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65108,"byte_end":65151,"line_start":299,"line_end":299,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65156,"byte_end":65192,"line_start":300,"line_end":300,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65197,"byte_end":65206,"line_start":301,"line_end":301,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65211,"byte_end":65218,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66323,"byte_end":66331,"line_start":333,"line_end":333,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65426,"byte_end":65496,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65501,"byte_end":65550,"line_start":312,"line_end":312,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65555,"byte_end":65558,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65563,"byte_end":65626,"line_start":314,"line_end":314,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65631,"byte_end":65699,"line_start":315,"line_end":315,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65704,"byte_end":65777,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65782,"byte_end":65858,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65863,"byte_end":65908,"line_start":318,"line_end":318,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65913,"byte_end":65916,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65921,"byte_end":65996,"line_start":320,"line_end":320,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66001,"byte_end":66027,"line_start":321,"line_end":321,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66032,"byte_end":66035,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66040,"byte_end":66054,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66059,"byte_end":66062,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66067,"byte_end":66074,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66079,"byte_end":66117,"line_start":326,"line_end":326,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66122,"byte_end":66125,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66130,"byte_end":66171,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66176,"byte_end":66227,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66232,"byte_end":66289,"line_start":330,"line_end":330,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66294,"byte_end":66303,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66308,"byte_end":66315,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66627,"byte_end":66634,"line_start":343,"line_end":343,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66507,"byte_end":66565,"line_start":341,"line_end":341,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66570,"byte_end":66619,"line_start":342,"line_end":342,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68189,"byte_end":68197,"line_start":387,"line_end":387,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66808,"byte_end":66877,"line_start":351,"line_end":351,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66882,"byte_end":66956,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66961,"byte_end":66964,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":66969,"byte_end":67044,"line_start":354,"line_end":354,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67049,"byte_end":67119,"line_start":355,"line_end":355,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67124,"byte_end":67189,"line_start":356,"line_end":356,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67194,"byte_end":67260,"line_start":357,"line_end":357,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67265,"byte_end":67299,"line_start":358,"line_end":358,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67304,"byte_end":67307,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67312,"byte_end":67387,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67392,"byte_end":67418,"line_start":361,"line_end":361,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67423,"byte_end":67426,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67431,"byte_end":67445,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67450,"byte_end":67453,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67458,"byte_end":67465,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67470,"byte_end":67508,"line_start":366,"line_end":366,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67513,"byte_end":67516,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67521,"byte_end":67562,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67567,"byte_end":67612,"line_start":369,"line_end":369,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67617,"byte_end":67692,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67697,"byte_end":67733,"line_start":371,"line_end":371,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67738,"byte_end":67747,"line_start":372,"line_end":372,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67752,"byte_end":67759,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67764,"byte_end":67767,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67772,"byte_end":67848,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67853,"byte_end":67864,"line_start":376,"line_end":376,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67869,"byte_end":67872,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67877,"byte_end":67884,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67889,"byte_end":67927,"line_start":379,"line_end":379,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67932,"byte_end":67935,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67940,"byte_end":67981,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":67986,"byte_end":68032,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68037,"byte_end":68113,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68118,"byte_end":68155,"line_start":384,"line_end":384,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68160,"byte_end":68169,"line_start":385,"line_end":385,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68174,"byte_end":68181,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69818,"byte_end":69825,"line_start":432,"line_end":432,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68451,"byte_end":68516,"line_start":396,"line_end":396,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68521,"byte_end":68593,"line_start":397,"line_end":397,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68598,"byte_end":68601,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68606,"byte_end":68681,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68686,"byte_end":68756,"line_start":400,"line_end":400,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68761,"byte_end":68826,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68831,"byte_end":68907,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68912,"byte_end":68930,"line_start":403,"line_end":403,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68935,"byte_end":68938,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":68943,"byte_end":69018,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69023,"byte_end":69049,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69054,"byte_end":69057,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69062,"byte_end":69076,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69081,"byte_end":69084,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69089,"byte_end":69096,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69101,"byte_end":69139,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69144,"byte_end":69147,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69152,"byte_end":69193,"line_start":413,"line_end":413,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69198,"byte_end":69244,"line_start":414,"line_end":414,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69249,"byte_end":69324,"line_start":415,"line_end":415,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69329,"byte_end":69366,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69371,"byte_end":69380,"line_start":417,"line_end":417,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69385,"byte_end":69392,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69397,"byte_end":69400,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69405,"byte_end":69478,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69483,"byte_end":69497,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69502,"byte_end":69505,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69510,"byte_end":69517,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69522,"byte_end":69560,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69565,"byte_end":69568,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69573,"byte_end":69614,"line_start":426,"line_end":426,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69619,"byte_end":69664,"line_start":427,"line_end":427,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69669,"byte_end":69743,"line_start":428,"line_end":428,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69748,"byte_end":69784,"line_start":429,"line_end":429,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69789,"byte_end":69798,"line_start":430,"line_end":430,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":69803,"byte_end":69810,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70801,"byte_end":70811,"line_start":459,"line_end":459,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70074,"byte_end":70147,"line_start":441,"line_end":441,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70152,"byte_end":70155,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70160,"byte_end":70235,"line_start":443,"line_end":443,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70240,"byte_end":70313,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70318,"byte_end":70387,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70392,"byte_end":70445,"line_start":446,"line_end":446,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70450,"byte_end":70453,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70458,"byte_end":70472,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70477,"byte_end":70480,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70485,"byte_end":70492,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70497,"byte_end":70538,"line_start":451,"line_end":451,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70543,"byte_end":70581,"line_start":452,"line_end":452,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70586,"byte_end":70589,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70594,"byte_end":70636,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70641,"byte_end":70722,"line_start":455,"line_end":455,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70727,"byte_end":70767,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70772,"byte_end":70781,"line_start":457,"line_end":457,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":70786,"byte_end":70793,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71737,"byte_end":71748,"line_start":485,"line_end":485,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71010,"byte_end":71081,"line_start":467,"line_end":467,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71086,"byte_end":71089,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71094,"byte_end":71169,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71174,"byte_end":71247,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71252,"byte_end":71321,"line_start":471,"line_end":471,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71326,"byte_end":71380,"line_start":472,"line_end":472,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71385,"byte_end":71388,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71393,"byte_end":71407,"line_start":474,"line_end":474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71412,"byte_end":71415,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71420,"byte_end":71427,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71432,"byte_end":71473,"line_start":477,"line_end":477,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71478,"byte_end":71516,"line_start":478,"line_end":478,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71521,"byte_end":71524,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71529,"byte_end":71572,"line_start":480,"line_end":480,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71577,"byte_end":71657,"line_start":481,"line_end":481,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71662,"byte_end":71703,"line_start":482,"line_end":482,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71708,"byte_end":71717,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71722,"byte_end":71729,"line_start":484,"line_end":484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72133,"byte_end":72144,"line_start":497,"line_end":497,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":71952,"byte_end":72027,"line_start":493,"line_end":493,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72032,"byte_end":72061,"line_start":494,"line_end":494,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72066,"byte_end":72069,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72074,"byte_end":72125,"line_start":496,"line_end":496,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73253,"byte_end":73271,"line_start":530,"line_end":530,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72309,"byte_end":72384,"line_start":505,"line_end":505,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72389,"byte_end":72412,"line_start":506,"line_end":506,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72417,"byte_end":72420,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72425,"byte_end":72497,"line_start":508,"line_end":508,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72502,"byte_end":72575,"line_start":509,"line_end":509,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72580,"byte_end":72594,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72599,"byte_end":72602,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72607,"byte_end":72677,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72682,"byte_end":72700,"line_start":513,"line_end":513,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72705,"byte_end":72708,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72713,"byte_end":72727,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72732,"byte_end":72735,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72740,"byte_end":72747,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72752,"byte_end":72793,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72798,"byte_end":72836,"line_start":519,"line_end":519,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72841,"byte_end":72887,"line_start":520,"line_end":520,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72892,"byte_end":72895,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72900,"byte_end":72960,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":72965,"byte_end":73044,"line_start":523,"line_end":523,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73049,"byte_end":73052,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73057,"byte_end":73114,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73119,"byte_end":73171,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73176,"byte_end":73219,"line_start":527,"line_end":527,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73224,"byte_end":73233,"line_start":528,"line_end":528,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73238,"byte_end":73245,"line_start":529,"line_end":529,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74268,"byte_end":74282,"line_start":560,"line_end":560,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73438,"byte_end":73508,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73513,"byte_end":73550,"line_start":539,"line_end":539,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73555,"byte_end":73604,"line_start":540,"line_end":540,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73609,"byte_end":73612,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73617,"byte_end":73686,"line_start":542,"line_end":542,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73691,"byte_end":73764,"line_start":543,"line_end":543,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73769,"byte_end":73839,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73844,"byte_end":73862,"line_start":545,"line_end":545,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73867,"byte_end":73870,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73875,"byte_end":73943,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73948,"byte_end":73951,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73956,"byte_end":73970,"line_start":549,"line_end":549,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73975,"byte_end":73978,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73983,"byte_end":73990,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":73995,"byte_end":74033,"line_start":552,"line_end":552,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74038,"byte_end":74041,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74046,"byte_end":74087,"line_start":554,"line_end":554,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74092,"byte_end":74144,"line_start":555,"line_end":555,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74149,"byte_end":74196,"line_start":556,"line_end":556,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74201,"byte_end":74234,"line_start":557,"line_end":557,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74239,"byte_end":74248,"line_start":558,"line_end":558,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74253,"byte_end":74260,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75482,"byte_end":75493,"line_start":599,"line_end":599,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74781,"byte_end":74834,"line_start":578,"line_end":578,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74839,"byte_end":74875,"line_start":579,"line_end":579,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74880,"byte_end":74883,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74888,"byte_end":74937,"line_start":581,"line_end":581,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":74942,"byte_end":75009,"line_start":582,"line_end":582,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75014,"byte_end":75027,"line_start":583,"line_end":583,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75032,"byte_end":75035,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75040,"byte_end":75054,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75059,"byte_end":75062,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75067,"byte_end":75074,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75079,"byte_end":75138,"line_start":588,"line_end":588,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75143,"byte_end":75146,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75151,"byte_end":75170,"line_start":590,"line_end":590,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75175,"byte_end":75193,"line_start":591,"line_end":591,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75198,"byte_end":75270,"line_start":592,"line_end":592,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75275,"byte_end":75307,"line_start":593,"line_end":593,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75312,"byte_end":75319,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75324,"byte_end":75400,"line_start":595,"line_end":595,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75405,"byte_end":75408,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75413,"byte_end":75462,"line_start":597,"line_end":597,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75467,"byte_end":75474,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75701,"byte_end":75715,"line_start":608,"line_end":608,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75598,"byte_end":75671,"line_start":606,"line_end":606,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":75676,"byte_end":75693,"line_start":607,"line_end":607,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5596},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84197,"byte_end":84201,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":5598}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84063,"byte_end":84100,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84118,"byte_end":84185,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":458},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84742,"byte_end":84746,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84305,"byte_end":84373,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84374,"byte_end":84377,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84378,"byte_end":84441,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84442,"byte_end":84445,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84446,"byte_end":84460,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84461,"byte_end":84464,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84465,"byte_end":84472,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84473,"byte_end":84514,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84515,"byte_end":84539,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84540,"byte_end":84543,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84544,"byte_end":84576,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84577,"byte_end":84604,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84605,"byte_end":84608,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84609,"byte_end":84646,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84647,"byte_end":84671,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84672,"byte_end":84679,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84680,"byte_end":84716,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84717,"byte_end":84726,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84727,"byte_end":84734,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5602},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85512,"byte_end":85519,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":5604}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85373,"byte_end":85415,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85433,"byte_end":85500,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":485},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86038,"byte_end":86045,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85660,"byte_end":85740,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85741,"byte_end":85754,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85755,"byte_end":85758,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85759,"byte_end":85821,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85822,"byte_end":85825,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85826,"byte_end":85840,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85841,"byte_end":85844,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85845,"byte_end":85858,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85859,"byte_end":85900,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85901,"byte_end":85925,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85926,"byte_end":85929,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85930,"byte_end":85965,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85966,"byte_end":85992,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85993,"byte_end":86012,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86013,"byte_end":86022,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86023,"byte_end":86030,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5610},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86813,"byte_end":86819,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86778,"byte_end":86808,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5612},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86880,"byte_end":86884,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86837,"byte_end":86875,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5615},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87046,"byte_end":87050,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86903,"byte_end":86969,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86974,"byte_end":87041,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":5608},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86749,"byte_end":86758,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":5610},{"krate":0,"index":5612},{"krate":0,"index":5615}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86708,"byte_end":86722,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5647},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":86749,"byte_end":86758,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"__MaybeDone","qualname":"::future::maybe_done::_::__MaybeDone","value":"__MaybeDone {  }","parent":null,"children":[{"krate":0,"index":5650},{"krate":0,"index":5651}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":511},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87516,"byte_end":87526,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87055,"byte_end":87092,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87093,"byte_end":87096,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87097,"byte_end":87111,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87112,"byte_end":87115,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87116,"byte_end":87123,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87124,"byte_end":87165,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87166,"byte_end":87190,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87191,"byte_end":87216,"line_start":31,"line_end":31,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87217,"byte_end":87220,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87221,"byte_end":87270,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87271,"byte_end":87292,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87293,"byte_end":87345,"line_start":35,"line_end":35,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87346,"byte_end":87381,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87382,"byte_end":87437,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87438,"byte_end":87490,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87491,"byte_end":87500,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87501,"byte_end":87508,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5668},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87958,"byte_end":87968,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87937,"byte_end":87946,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":88282,"byte_end":88293,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":88162,"byte_end":88228,"line_start":60,"line_end":60,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":88233,"byte_end":88256,"line_start":61,"line_end":61,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":88261,"byte_end":88270,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5672},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90248,"byte_end":90254,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":5670},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90213,"byte_end":90243,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5674},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90315,"byte_end":90319,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":5670},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90272,"byte_end":90310,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5677},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90527,"byte_end":90531,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":5670},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90334,"byte_end":90403,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90408,"byte_end":90478,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90483,"byte_end":90522,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":5670},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90178,"byte_end":90190,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Ok),\n\n    /// The empty variant after the result of a [`TryMaybeDone`] has been\n    /// taken using the [`take_output`](TryMaybeDone::take_output) method,\n    /// or if the future returned an error.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":5672},{"krate":0,"index":5674},{"krate":0,"index":5677}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90137,"byte_end":90151,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5709},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90178,"byte_end":90190,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"__TryMaybeDone","qualname":"::future::try_maybe_done::_::__TryMaybeDone","value":"__TryMaybeDone {  }","parent":null,"children":[{"krate":0,"index":5712},{"krate":0,"index":5713}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":538},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90584,"byte_end":90598,"line_start":26,"line_end":26,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90536,"byte_end":90576,"line_start":25,"line_end":25,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5730},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":91056,"byte_end":91066,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":91035,"byte_end":91044,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":91382,"byte_end":91393,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":91259,"byte_end":91328,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":91333,"byte_end":91356,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":91361,"byte_end":91370,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5732},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":93919,"byte_end":93931,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":93840,"byte_end":93907,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":93801,"byte_end":93815,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5753},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":93919,"byte_end":93931,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"__OptionFuture","qualname":"::future::option::_::__OptionFuture","value":"__OptionFuture {  }","parent":null,"children":[{"krate":0,"index":5756},{"krate":0,"index":5757}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":579},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":94901,"byte_end":94907,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":581}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":94781,"byte_end":94821,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":94822,"byte_end":94889,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":584},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95494,"byte_end":95501,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":94958,"byte_end":95029,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95030,"byte_end":95033,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95034,"byte_end":95100,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95101,"byte_end":95104,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95105,"byte_end":95119,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95120,"byte_end":95123,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95124,"byte_end":95131,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95132,"byte_end":95173,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95174,"byte_end":95207,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95208,"byte_end":95247,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95248,"byte_end":95251,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95252,"byte_end":95309,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95310,"byte_end":95353,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95354,"byte_end":95359,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95360,"byte_end":95363,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95364,"byte_end":95405,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95406,"byte_end":95468,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95469,"byte_end":95478,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95479,"byte_end":95486,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5779},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96221,"byte_end":96226,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96070,"byte_end":96117,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96142,"byte_end":96209,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96349,"byte_end":96359,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96266,"byte_end":96323,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96328,"byte_end":96337,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":618},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97025,"byte_end":97030,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96779,"byte_end":96839,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96840,"byte_end":96843,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96844,"byte_end":96858,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96859,"byte_end":96862,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96863,"byte_end":96870,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96871,"byte_end":96912,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96913,"byte_end":96937,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96938,"byte_end":96941,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96942,"byte_end":96971,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96972,"byte_end":96999,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97000,"byte_end":97009,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97010,"byte_end":97017,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":620},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97342,"byte_end":97344,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97076,"byte_end":97143,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97144,"byte_end":97147,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97148,"byte_end":97162,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97163,"byte_end":97166,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97167,"byte_end":97174,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97175,"byte_end":97216,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97217,"byte_end":97241,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97242,"byte_end":97245,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97246,"byte_end":97284,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97285,"byte_end":97316,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97317,"byte_end":97326,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97327,"byte_end":97334,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":623},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97675,"byte_end":97678,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97408,"byte_end":97474,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97475,"byte_end":97478,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97479,"byte_end":97493,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97494,"byte_end":97497,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97498,"byte_end":97505,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97506,"byte_end":97547,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97548,"byte_end":97572,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97573,"byte_end":97576,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97577,"byte_end":97616,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97617,"byte_end":97649,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97650,"byte_end":97659,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":97660,"byte_end":97667,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5881},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":5884},{"krate":0,"index":5885}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5906},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join","qualname":"::future::join::_::__Join","value":"__Join {  }","parent":null,"children":[{"krate":0,"index":5910},{"krate":0,"index":5911},{"krate":0,"index":5912}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5933},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":5937},{"krate":0,"index":5938},{"krate":0,"index":5939}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5965},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join3","qualname":"::future::join::_::__Join3","value":"__Join3 {  }","parent":null,"children":[{"krate":0,"index":5970},{"krate":0,"index":5971},{"krate":0,"index":5972},{"krate":0,"index":5973}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5999},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":6004},{"krate":0,"index":6005},{"krate":0,"index":6006},{"krate":0,"index":6007}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6038},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join4","qualname":"::future::join::_::__Join4","value":"__Join4 {  }","parent":null,"children":[{"krate":0,"index":6044},{"krate":0,"index":6045},{"krate":0,"index":6046},{"krate":0,"index":6047},{"krate":0,"index":6048}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6079},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6085},{"krate":0,"index":6086},{"krate":0,"index":6087},{"krate":0,"index":6088},{"krate":0,"index":6089}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6125},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":98143,"byte_end":98157,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join5","qualname":"::future::join::_::__Join5","value":"__Join5 {  }","parent":null,"children":[{"krate":0,"index":6132},{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6137}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":646},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100793,"byte_end":100797,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100216,"byte_end":100287,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100288,"byte_end":100291,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100292,"byte_end":100363,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100364,"byte_end":100439,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100440,"byte_end":100443,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100444,"byte_end":100513,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100514,"byte_end":100540,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100541,"byte_end":100544,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100545,"byte_end":100559,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100560,"byte_end":100563,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100564,"byte_end":100571,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100572,"byte_end":100613,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100614,"byte_end":100638,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100639,"byte_end":100642,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100643,"byte_end":100667,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100668,"byte_end":100692,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100693,"byte_end":100727,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100728,"byte_end":100731,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100732,"byte_end":100767,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100768,"byte_end":100777,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":100778,"byte_end":100785,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":649},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101343,"byte_end":101348,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101004,"byte_end":101056,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101057,"byte_end":101060,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101061,"byte_end":101075,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101076,"byte_end":101079,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101080,"byte_end":101087,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101088,"byte_end":101129,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101130,"byte_end":101154,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101155,"byte_end":101158,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101159,"byte_end":101183,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101184,"byte_end":101208,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101209,"byte_end":101233,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101234,"byte_end":101273,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101274,"byte_end":101277,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101278,"byte_end":101317,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101318,"byte_end":101327,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101328,"byte_end":101335,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":653},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101931,"byte_end":101936,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101561,"byte_end":101613,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101614,"byte_end":101617,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101618,"byte_end":101632,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101633,"byte_end":101636,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101637,"byte_end":101644,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101645,"byte_end":101686,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101687,"byte_end":101711,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101712,"byte_end":101715,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101716,"byte_end":101740,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101741,"byte_end":101765,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101766,"byte_end":101790,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101791,"byte_end":101815,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101816,"byte_end":101858,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101859,"byte_end":101862,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101863,"byte_end":101905,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101906,"byte_end":101915,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":101916,"byte_end":101923,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":658},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102608,"byte_end":102613,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102207,"byte_end":102259,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102260,"byte_end":102263,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102264,"byte_end":102278,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102279,"byte_end":102282,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102283,"byte_end":102290,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102291,"byte_end":102332,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102333,"byte_end":102357,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102358,"byte_end":102361,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102362,"byte_end":102386,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102387,"byte_end":102411,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102412,"byte_end":102436,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102437,"byte_end":102461,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102462,"byte_end":102486,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102487,"byte_end":102532,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102533,"byte_end":102536,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102537,"byte_end":102582,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102583,"byte_end":102592,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":102593,"byte_end":102600,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":689},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":103774,"byte_end":103781,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":691}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":103653,"byte_end":103694,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":103695,"byte_end":103762,"line_start":25,"line_end":25,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":695},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105323,"byte_end":105331,"line_start":80,"line_end":80,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104114,"byte_end":104194,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104195,"byte_end":104205,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104206,"byte_end":104209,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104210,"byte_end":104289,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104290,"byte_end":104370,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104371,"byte_end":104389,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104390,"byte_end":104393,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104394,"byte_end":104471,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104472,"byte_end":104529,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104530,"byte_end":104533,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104534,"byte_end":104548,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104549,"byte_end":104552,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104553,"byte_end":104628,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104629,"byte_end":104677,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/ [`FuturesUnordered`][crate::stream::FuturesUnordered] APIs, some","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104678,"byte_end":104746,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ examples of additional functionality that provides:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104747,"byte_end":104802,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104803,"byte_end":104806,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104807,"byte_end":104875,"line_start":62,"line_end":62,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104876,"byte_end":104879,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104880,"byte_end":104957,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":104958,"byte_end":105039,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105040,"byte_end":105043,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105044,"byte_end":105058,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105059,"byte_end":105062,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105063,"byte_end":105070,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105071,"byte_end":105112,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105113,"byte_end":105147,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105148,"byte_end":105151,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105152,"byte_end":105189,"line_start":73,"line_end":73,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105190,"byte_end":105193,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105194,"byte_end":105241,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105242,"byte_end":105245,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105246,"byte_end":105297,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105298,"byte_end":105307,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105308,"byte_end":105315,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6173},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106644,"byte_end":106650,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6176}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106506,"byte_end":106547,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106548,"byte_end":106615,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":723},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107916,"byte_end":107922,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106741,"byte_end":106811,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106812,"byte_end":106815,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106816,"byte_end":106894,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106895,"byte_end":106971,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106972,"byte_end":107044,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107045,"byte_end":107048,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107049,"byte_end":107121,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107122,"byte_end":107150,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107151,"byte_end":107154,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107155,"byte_end":107222,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107223,"byte_end":107287,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107288,"byte_end":107338,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107339,"byte_end":107342,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107343,"byte_end":107357,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107358,"byte_end":107361,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107362,"byte_end":107369,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107370,"byte_end":107429,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107430,"byte_end":107433,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107434,"byte_end":107487,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107488,"byte_end":107491,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107492,"byte_end":107567,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107568,"byte_end":107600,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107601,"byte_end":107633,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107634,"byte_end":107639,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107640,"byte_end":107684,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107685,"byte_end":107711,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107712,"byte_end":107789,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107790,"byte_end":107869,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107870,"byte_end":107883,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107884,"byte_end":107894,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107895,"byte_end":107900,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":107901,"byte_end":107908,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6181},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109274,"byte_end":109283,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":6183}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109134,"byte_end":109177,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109195,"byte_end":109262,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":750},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":110063,"byte_end":110073,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109361,"byte_end":109427,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109428,"byte_end":109431,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109432,"byte_end":109512,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109513,"byte_end":109591,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109592,"byte_end":109660,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109661,"byte_end":109664,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109665,"byte_end":109745,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109746,"byte_end":109820,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109821,"byte_end":109824,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109825,"byte_end":109902,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109903,"byte_end":109960,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109961,"byte_end":109964,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109965,"byte_end":109977,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109978,"byte_end":109981,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109982,"byte_end":110055,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6257},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":6260},{"krate":0,"index":6261}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6282},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin","qualname":"::future::try_join::_::__TryJoin","value":"__TryJoin {  }","parent":null,"children":[{"krate":0,"index":6286},{"krate":0,"index":6287},{"krate":0,"index":6288}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6309},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6313},{"krate":0,"index":6314},{"krate":0,"index":6315}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6341},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin3","qualname":"::future::try_join::_::__TryJoin3","value":"__TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6346},{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6349}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6375},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6380},{"krate":0,"index":6381},{"krate":0,"index":6382},{"krate":0,"index":6383}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6414},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin4","qualname":"::future::try_join::_::__TryJoin4","value":"__TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6420},{"krate":0,"index":6421},{"krate":0,"index":6422},{"krate":0,"index":6423},{"krate":0,"index":6424}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6455},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6461},{"krate":0,"index":6462},{"krate":0,"index":6463},{"krate":0,"index":6464},{"krate":0,"index":6465}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6501},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":111542,"byte_end":111556,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin5","qualname":"::future::try_join::_::__TryJoin5","value":"__TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6510},{"krate":0,"index":6511},{"krate":0,"index":6512},{"krate":0,"index":6513}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":778},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115538,"byte_end":115546,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114304,"byte_end":114377,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114378,"byte_end":114410,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114411,"byte_end":114414,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114415,"byte_end":114486,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114487,"byte_end":114563,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114564,"byte_end":114635,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114636,"byte_end":114652,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114653,"byte_end":114656,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114657,"byte_end":114726,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114727,"byte_end":114753,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114754,"byte_end":114757,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114758,"byte_end":114772,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114773,"byte_end":114776,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114777,"byte_end":114853,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114854,"byte_end":114890,"line_start":119,"line_end":119,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114891,"byte_end":114894,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114895,"byte_end":114902,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114903,"byte_end":114944,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114945,"byte_end":114969,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114970,"byte_end":114973,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":114974,"byte_end":115019,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115020,"byte_end":115065,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115066,"byte_end":115104,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115105,"byte_end":115108,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115109,"byte_end":115148,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115149,"byte_end":115158,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115159,"byte_end":115166,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115167,"byte_end":115170,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115171,"byte_end":115241,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115242,"byte_end":115257,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115258,"byte_end":115261,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115262,"byte_end":115269,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115270,"byte_end":115311,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115312,"byte_end":115336,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115337,"byte_end":115340,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115341,"byte_end":115386,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115387,"byte_end":115433,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115434,"byte_end":115472,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115473,"byte_end":115476,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115477,"byte_end":115512,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115513,"byte_end":115522,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115523,"byte_end":115530,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":781},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116139,"byte_end":116148,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115721,"byte_end":115781,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115782,"byte_end":115785,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115786,"byte_end":115800,"line_start":157,"line_end":157,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115801,"byte_end":115804,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115805,"byte_end":115812,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115813,"byte_end":115854,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115855,"byte_end":115879,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115880,"byte_end":115883,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115884,"byte_end":115929,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115930,"byte_end":115975,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":115976,"byte_end":116021,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116022,"byte_end":116065,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116066,"byte_end":116069,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116070,"byte_end":116113,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116114,"byte_end":116123,"line_start":169,"line_end":169,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116124,"byte_end":116131,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":785},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116888,"byte_end":116897,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116418,"byte_end":116478,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116479,"byte_end":116482,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116483,"byte_end":116497,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116498,"byte_end":116501,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116502,"byte_end":116509,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116510,"byte_end":116551,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116552,"byte_end":116576,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116577,"byte_end":116580,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116581,"byte_end":116626,"line_start":192,"line_end":192,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116627,"byte_end":116672,"line_start":193,"line_end":193,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116673,"byte_end":116718,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116719,"byte_end":116764,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116765,"byte_end":116811,"line_start":196,"line_end":196,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116812,"byte_end":116815,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116816,"byte_end":116862,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116863,"byte_end":116872,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":116873,"byte_end":116880,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":790},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117771,"byte_end":117780,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117249,"byte_end":117309,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117310,"byte_end":117313,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117314,"byte_end":117328,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117329,"byte_end":117332,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117333,"byte_end":117340,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117341,"byte_end":117382,"line_start":221,"line_end":221,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117383,"byte_end":117407,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117408,"byte_end":117411,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117412,"byte_end":117457,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117458,"byte_end":117503,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117504,"byte_end":117549,"line_start":226,"line_end":226,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117550,"byte_end":117595,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117596,"byte_end":117641,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117642,"byte_end":117691,"line_start":229,"line_end":229,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117692,"byte_end":117695,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117696,"byte_end":117745,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117746,"byte_end":117755,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":117756,"byte_end":117763,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":832},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119166,"byte_end":119176,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":834}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119041,"byte_end":119086,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119087,"byte_end":119154,"line_start":31,"line_end":31,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":838},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120795,"byte_end":120807,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119546,"byte_end":119625,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119626,"byte_end":119656,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119657,"byte_end":119660,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119661,"byte_end":119740,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119741,"byte_end":119821,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119822,"byte_end":119840,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119841,"byte_end":119844,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119845,"byte_end":119923,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119924,"byte_end":120004,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120005,"byte_end":120079,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120080,"byte_end":120103,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120104,"byte_end":120107,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120108,"byte_end":120185,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120186,"byte_end":120243,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120244,"byte_end":120247,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120248,"byte_end":120262,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120263,"byte_end":120266,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120267,"byte_end":120274,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120275,"byte_end":120316,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120317,"byte_end":120363,"line_start":71,"line_end":71,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120364,"byte_end":120367,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120368,"byte_end":120391,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120392,"byte_end":120426,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120427,"byte_end":120461,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120462,"byte_end":120496,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120497,"byte_end":120503,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120504,"byte_end":120507,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120508,"byte_end":120571,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120572,"byte_end":120575,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120576,"byte_end":120599,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120600,"byte_end":120634,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120635,"byte_end":120670,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120671,"byte_end":120705,"line_start":84,"line_end":84,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120706,"byte_end":120712,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120713,"byte_end":120716,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120717,"byte_end":120769,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120770,"byte_end":120779,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":120780,"byte_end":120787,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6549},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122636,"byte_end":122645,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":6552}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122494,"byte_end":122539,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122540,"byte_end":122607,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":866},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124230,"byte_end":124240,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122739,"byte_end":122809,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122810,"byte_end":122813,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122814,"byte_end":122892,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122893,"byte_end":122969,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122970,"byte_end":123042,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123043,"byte_end":123046,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123047,"byte_end":123119,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123120,"byte_end":123148,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123149,"byte_end":123152,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123153,"byte_end":123220,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123221,"byte_end":123292,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123293,"byte_end":123343,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123344,"byte_end":123347,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123348,"byte_end":123362,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123363,"byte_end":123366,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123367,"byte_end":123374,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123375,"byte_end":123459,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123460,"byte_end":123463,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123464,"byte_end":123521,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123522,"byte_end":123525,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123526,"byte_end":123608,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123609,"byte_end":123666,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123667,"byte_end":123724,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123725,"byte_end":123751,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123752,"byte_end":123757,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123758,"byte_end":123853,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123854,"byte_end":123877,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123878,"byte_end":123958,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":123959,"byte_end":124040,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124041,"byte_end":124111,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124112,"byte_end":124183,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124184,"byte_end":124197,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124198,"byte_end":124208,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124209,"byte_end":124214,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124215,"byte_end":124222,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6557},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125729,"byte_end":125737,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":6559}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125590,"byte_end":125632,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125650,"byte_end":125717,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126459,"byte_end":126468,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125814,"byte_end":125908,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125909,"byte_end":125912,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125913,"byte_end":126002,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126003,"byte_end":126087,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126088,"byte_end":126169,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126170,"byte_end":126215,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126216,"byte_end":126219,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126220,"byte_end":126298,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126299,"byte_end":126356,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126357,"byte_end":126360,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126361,"byte_end":126373,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126374,"byte_end":126377,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126378,"byte_end":126451,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6566},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128793,"byte_end":128797,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":6563},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128760,"byte_end":128788,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6568},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128847,"byte_end":128852,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":6563},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128813,"byte_end":128842,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":6563},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128741,"byte_end":128747,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(\n         #[pin]\n         A),\n\n    /// Second branch of the type\n    Right(\n          #[pin]\n          B),\n}","parent":null,"children":[{"krate":0,"index":6566},{"krate":0,"index":6568}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128693,"byte_end":128707,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6600},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128741,"byte_end":128747,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"__Either","qualname":"::future::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":6604},{"krate":0,"index":6605},{"krate":0,"index":6606}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129058,"byte_end":129070,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128910,"byte_end":128968,"line_start":21,"line_end":21,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128973,"byte_end":128976,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128981,"byte_end":129046,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129450,"byte_end":129463,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129301,"byte_end":129359,"line_start":33,"line_end":33,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129364,"byte_end":129367,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129372,"byte_end":129438,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129751,"byte_end":129761,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129678,"byte_end":129739,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":11656},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8347568,"byte_end":8347577,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Abortable","qualname":"::future::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":11659},{"krate":0,"index":11658}],"decl_id":null,"docs":" A future which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8347489,"byte_end":8347556,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8347450,"byte_end":8347464,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11677},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8347568,"byte_end":8347577,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__Abortable","qualname":"::future::abortable::_::__Abortable","value":"__Abortable {  }","parent":null,"children":[{"krate":0,"index":11680},{"krate":0,"index":11681}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6658},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348460,"byte_end":8348463,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<Fut>>::new","value":"pub fn new(Fut, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future using an existing `AbortRegistration`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8347693,"byte_end":8347768,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8347773,"byte_end":8347841,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8347846,"byte_end":8347849,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8347854,"byte_end":8347926,"line_start":24,"line_end":24,"column_start":5,"column_end":77}},{"value":"/ already been called, the future will complete immediately without making","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8347931,"byte_end":8348007,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/ any further progress.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348012,"byte_end":8348037,"line_start":26,"line_end":26,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348042,"byte_end":8348045,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348050,"byte_end":8348062,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348067,"byte_end":8348070,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348075,"byte_end":8348082,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348087,"byte_end":8348128,"line_start":31,"line_end":31,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348133,"byte_end":8348192,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348197,"byte_end":8348200,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348205,"byte_end":8348274,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348279,"byte_end":8348344,"line_start":35,"line_end":35,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348349,"byte_end":8348374,"line_start":36,"line_end":36,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348379,"byte_end":8348422,"line_start":37,"line_end":37,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348427,"byte_end":8348436,"line_start":38,"line_end":38,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348441,"byte_end":8348448,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6678},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348791,"byte_end":8348808,"line_start":52,"line_end":52,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::future::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":6679}],"decl_id":null,"docs":" A registration handle for a `Abortable` future.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for a `Abortable` future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348600,"byte_end":8348651,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348652,"byte_end":8348728,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348729,"byte_end":8348762,"line_start":50,"line_end":50,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6682},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348915,"byte_end":8348926,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::future::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":6683}],"decl_id":null,"docs":" A handle to a `Abortable` future.\n","sig":null,"attributes":[{"value":"/ A handle to a `Abortable` future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348842,"byte_end":8348879,"line_start":56,"line_end":56,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6660},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349596,"byte_end":8349604,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348983,"byte_end":8349057,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ to abort a running future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349062,"byte_end":8349092,"line_start":64,"line_end":64,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349097,"byte_end":8349100,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to `Abortable::new`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349105,"byte_end":8349173,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349178,"byte_end":8349181,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349186,"byte_end":8349198,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349203,"byte_end":8349206,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349211,"byte_end":8349218,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349223,"byte_end":8349264,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349269,"byte_end":8349328,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349333,"byte_end":8349336,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349341,"byte_end":8349410,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349415,"byte_end":8349480,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349485,"byte_end":8349510,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349515,"byte_end":8349558,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349563,"byte_end":8349572,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8349577,"byte_end":8349584,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":6661},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8350507,"byte_end":8350516,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8350138,"byte_end":8350224,"line_start":105,"line_end":105,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8350225,"byte_end":8350228,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8350229,"byte_end":8350305,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8350306,"byte_end":8350359,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8350360,"byte_end":8350363,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8350364,"byte_end":8350441,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8350442,"byte_end":8350499,"line_start":111,"line_end":111,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6693},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8350820,"byte_end":8350827,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::future::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` future was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` future was aborted.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8350709,"byte_end":8350763,"line_start":122,"line_end":122,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6671},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8352440,"byte_end":8352445,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` future associated with this handle.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8352076,"byte_end":8352137,"line_start":165,"line_end":165,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8352142,"byte_end":8352145,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable future associated with this handle that it","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8352150,"byte_end":8352219,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ should abort. Note that if the future is currently being polled on","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8352224,"byte_end":8352294,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8352299,"byte_end":8352373,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8352378,"byte_end":8352428,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":982},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":9934},{"krate":0,"index":10003},{"krate":0,"index":10004},{"krate":0,"index":10235},{"krate":0,"index":10236},{"krate":0,"index":10284},{"krate":0,"index":10285},{"krate":0,"index":10286}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"! Streams","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136636,"byte_end":136647,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136648,"byte_end":136651,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Stream`s,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136652,"byte_end":136726,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136727,"byte_end":136805,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Stream` types","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":136806,"byte_end":136835,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6706},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":185945,"byte_end":185950,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6709},{"krate":0,"index":6710}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":185885,"byte_end":185933,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":185853,"byte_end":185867,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6731},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":185945,"byte_end":185950,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::stream::stream::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":6735},{"krate":0,"index":6736},{"krate":0,"index":6737}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6763},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188112,"byte_end":188119,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":6767},{"krate":0,"index":6766}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188033,"byte_end":188100,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188001,"byte_end":188015,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6788},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188112,"byte_end":188119,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Collect","qualname":"::stream::stream::collect::_::__Collect","value":"__Collect {  }","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6793}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6819},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189579,"byte_end":189585,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":6822},{"krate":0,"index":6821}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189500,"byte_end":189567,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189468,"byte_end":189482,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6840},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189579,"byte_end":189585,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Concat","qualname":"::stream::stream::concat::_::__Concat","value":"__Concat {  }","parent":null,"children":[{"krate":0,"index":6843},{"krate":0,"index":6844}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6864},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191369,"byte_end":191378,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":6867},{"krate":0,"index":6866}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191309,"byte_end":191357,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191277,"byte_end":191291,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6885},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191369,"byte_end":191378,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"__Enumerate","qualname":"::stream::stream::enumerate::_::__Enumerate","value":"__Enumerate {  }","parent":null,"children":[{"krate":0,"index":6888},{"krate":0,"index":6889}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6913},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193073,"byte_end":193079,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":6919},{"krate":0,"index":6917},{"krate":0,"index":6920},{"krate":0,"index":6918}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193013,"byte_end":193061,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":192998,"byte_end":193012,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6948},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193073,"byte_end":193079,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"__Filter","qualname":"::stream::stream::filter::_::__Filter","value":"__Filter {  }","parent":null,"children":[{"krate":0,"index":6953},{"krate":0,"index":6954},{"krate":0,"index":6955}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6986},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196411,"byte_end":196420,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":6991},{"krate":0,"index":6990},{"krate":0,"index":6992}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196351,"byte_end":196399,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196336,"byte_end":196350,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7018},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196411,"byte_end":196420,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__FilterMap","qualname":"::stream::stream::filter_map::_::__FilterMap","value":"__FilterMap {  }","parent":null,"children":[{"krate":0,"index":7023},{"krate":0,"index":7024},{"krate":0,"index":7025}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7056},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199493,"byte_end":199500,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7059},{"krate":0,"index":7060}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199433,"byte_end":199481,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199401,"byte_end":199415,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7081},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199493,"byte_end":199500,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Flatten","qualname":"::stream::stream::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":7085},{"krate":0,"index":7086},{"krate":0,"index":7087}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7119},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7121}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7137},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::stream::stream::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":7140},{"krate":0,"index":7141}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7177},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201302,"byte_end":201306,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7184},{"krate":0,"index":7182},{"krate":0,"index":7183},{"krate":0,"index":7185}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201223,"byte_end":201290,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201208,"byte_end":201222,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7216},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201302,"byte_end":201306,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"__Fold","qualname":"::stream::stream::fold::_::__Fold","value":"__Fold {  }","parent":null,"children":[{"krate":0,"index":7222},{"krate":0,"index":7223},{"krate":0,"index":7224}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7256},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":203848,"byte_end":203855,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":7261},{"krate":0,"index":7260},{"krate":0,"index":7262}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":203769,"byte_end":203836,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":203754,"byte_end":203768,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7288},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":203848,"byte_end":203855,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__ForEach","qualname":"::stream::stream::for_each::_::__ForEach","value":"__ForEach {  }","parent":null,"children":[{"krate":0,"index":7293},{"krate":0,"index":7294},{"krate":0,"index":7295}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7322},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":205874,"byte_end":205878,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7325},{"krate":0,"index":7324}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":205814,"byte_end":205862,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":205782,"byte_end":205796,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7343},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":205874,"byte_end":205878,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::stream::stream::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":7346},{"krate":0,"index":7347}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":206316,"byte_end":206323,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":206047,"byte_end":206109,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":206114,"byte_end":206117,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":206122,"byte_end":206190,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":206195,"byte_end":206261,"line_start":26,"line_end":26,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":206266,"byte_end":206304,"line_start":27,"line_end":27,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7371},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":207716,"byte_end":207728,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":7373}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":207546,"byte_end":207619,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":207637,"byte_end":207704,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208311,"byte_end":208318,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":207919,"byte_end":207992,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":207997,"byte_end":208014,"line_start":20,"line_end":20,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208019,"byte_end":208022,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208027,"byte_end":208108,"line_start":22,"line_end":22,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208113,"byte_end":208195,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208200,"byte_end":208279,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208284,"byte_end":208299,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208929,"byte_end":208936,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208383,"byte_end":208450,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208455,"byte_end":208486,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208491,"byte_end":208494,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208499,"byte_end":208572,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208577,"byte_end":208632,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208637,"byte_end":208640,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208645,"byte_end":208726,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208731,"byte_end":208813,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208818,"byte_end":208897,"line_start":38,"line_end":38,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":208902,"byte_end":208917,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209562,"byte_end":209573,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209009,"byte_end":209083,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209088,"byte_end":209119,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209124,"byte_end":209127,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209132,"byte_end":209205,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209210,"byte_end":209265,"line_start":48,"line_end":48,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209270,"byte_end":209273,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209278,"byte_end":209359,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209364,"byte_end":209446,"line_start":51,"line_end":51,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209451,"byte_end":209530,"line_start":52,"line_end":52,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209535,"byte_end":209550,"line_start":53,"line_end":53,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210210,"byte_end":210220,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209690,"byte_end":209752,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209757,"byte_end":209760,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209765,"byte_end":209837,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209842,"byte_end":209913,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209918,"byte_end":209921,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":209926,"byte_end":210007,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210012,"byte_end":210094,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210099,"byte_end":210178,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210183,"byte_end":210198,"line_start":66,"line_end":66,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7380},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7383}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7402},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::stream::stream::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":7406},{"krate":0,"index":7407}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7453},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":211236,"byte_end":211239,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7457},{"krate":0,"index":7456}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":211176,"byte_end":211224,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":211161,"byte_end":211175,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7478},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":211236,"byte_end":211239,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"__Map","qualname":"::stream::stream::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":7482},{"krate":0,"index":7483}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7514},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":7518}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7540},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__FlatMap","qualname":"::stream::stream::_::__FlatMap","value":"__FlatMap {  }","parent":null,"children":[{"krate":0,"index":7545},{"krate":0,"index":7546}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7602},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":212977,"byte_end":212981,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":7605}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":212821,"byte_end":212880,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":212898,"byte_end":212965,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7610},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":213987,"byte_end":214001,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":7613}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":213803,"byte_end":213878,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":213879,"byte_end":213890,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":213908,"byte_end":213975,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7618},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":215495,"byte_end":215503,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":7621},{"krate":0,"index":7620}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":215435,"byte_end":215483,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":215403,"byte_end":215417,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7639},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":215495,"byte_end":215503,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"__Peekable","qualname":"::stream::stream::peek::_::__Peekable","value":"__Peekable {  }","parent":null,"children":[{"krate":0,"index":7642},{"krate":0,"index":7643}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":215970,"byte_end":215974,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":215815,"byte_end":215888,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":215893,"byte_end":215958,"line_start":36,"line_end":36,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":7666},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":216314,"byte_end":216323,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7668},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218102,"byte_end":218106,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":7671}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218042,"byte_end":218090,"line_start":109,"line_end":109,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218027,"byte_end":218041,"line_start":108,"line_end":108,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7690},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218102,"byte_end":218106,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"__Peek","qualname":"::stream::stream::peek::_::__Peek","value":"__Peek {  }","parent":null,"children":[{"krate":0,"index":7694},{"krate":0,"index":7695}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7716},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":219369,"byte_end":219373,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7719},{"krate":0,"index":7718}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":219309,"byte_end":219357,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":219277,"byte_end":219291,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7737},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":219369,"byte_end":219373,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Skip","qualname":"::stream::stream::skip::_::__Skip","value":"__Skip {  }","parent":null,"children":[{"krate":0,"index":7740},{"krate":0,"index":7741}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7765},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":221265,"byte_end":221274,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7772},{"krate":0,"index":7769},{"krate":0,"index":7773},{"krate":0,"index":7770},{"krate":0,"index":7771}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":221205,"byte_end":221253,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":221190,"byte_end":221204,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7803},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":221265,"byte_end":221274,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__SkipWhile","qualname":"::stream::stream::skip_while::_::__SkipWhile","value":"__SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7808},{"krate":0,"index":7809},{"krate":0,"index":7810}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7841},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":224918,"byte_end":224922,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7844},{"krate":0,"index":7843}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":224858,"byte_end":224906,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":224826,"byte_end":224840,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7862},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":224918,"byte_end":224922,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::stream::stream::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":7865},{"krate":0,"index":7866}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7890},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":227013,"byte_end":227022,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7897},{"krate":0,"index":7894},{"krate":0,"index":7898},{"krate":0,"index":7895},{"krate":0,"index":7896}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":226953,"byte_end":227001,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":226938,"byte_end":226952,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7928},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":227013,"byte_end":227022,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__TakeWhile","qualname":"::stream::stream::take_while::_::__TakeWhile","value":"__TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7933},{"krate":0,"index":7934},{"krate":0,"index":7935}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7966},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":230642,"byte_end":230651,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":7971},{"krate":0,"index":7972},{"krate":0,"index":7969},{"krate":0,"index":7970}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":230582,"byte_end":230630,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":230567,"byte_end":230581,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7997},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":230642,"byte_end":230651,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"__TakeUntil","qualname":"::stream::stream::take_until::_::__TakeUntil","value":"__TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8001},{"krate":0,"index":8002},{"krate":0,"index":8003}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232008,"byte_end":232019,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":231708,"byte_end":231762,"line_start":58,"line_end":58,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":231767,"byte_end":231861,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":231866,"byte_end":231929,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":231934,"byte_end":231996,"line_start":61,"line_end":61,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233303,"byte_end":233314,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232156,"byte_end":232221,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232226,"byte_end":232283,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232288,"byte_end":232291,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232296,"byte_end":232361,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232366,"byte_end":232426,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232431,"byte_end":232434,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resovled yet,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232439,"byte_end":232507,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232512,"byte_end":232555,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232560,"byte_end":232563,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232568,"byte_end":232582,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232587,"byte_end":232590,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232595,"byte_end":232602,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232607,"byte_end":232648,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232653,"byte_end":232677,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232682,"byte_end":232725,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232730,"byte_end":232758,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232763,"byte_end":232766,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232771,"byte_end":232809,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232814,"byte_end":232817,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232822,"byte_end":232840,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232845,"byte_end":232887,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232892,"byte_end":232907,"line_start":91,"line_end":91,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232912,"byte_end":232931,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232936,"byte_end":232961,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232966,"byte_end":232982,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":232987,"byte_end":233020,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233025,"byte_end":233034,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233039,"byte_end":233046,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233051,"byte_end":233054,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233059,"byte_end":233108,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233113,"byte_end":233167,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233172,"byte_end":233175,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233180,"byte_end":233227,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233232,"byte_end":233265,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233270,"byte_end":233279,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233284,"byte_end":233291,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233490,"byte_end":233500,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233393,"byte_end":233454,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233459,"byte_end":233478,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8029},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":235439,"byte_end":235443,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8034},{"krate":0,"index":8035},{"krate":0,"index":8033}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":235379,"byte_end":235427,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":235364,"byte_end":235378,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8061},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":235439,"byte_end":235443,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Then","qualname":"::stream::stream::then::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":8066},{"krate":0,"index":8067},{"krate":0,"index":8068}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8099},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238130,"byte_end":238133,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8104},{"krate":0,"index":8105},{"krate":0,"index":8102},{"krate":0,"index":8103}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238070,"byte_end":238118,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238038,"byte_end":238052,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8130},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238130,"byte_end":238133,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"__Zip","qualname":"::stream::stream::zip::_::__Zip","value":"__Zip {  }","parent":null,"children":[{"krate":0,"index":8134},{"krate":0,"index":8135},{"krate":0,"index":8136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238686,"byte_end":238693,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238578,"byte_end":238652,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238657,"byte_end":238674,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":239049,"byte_end":239056,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238787,"byte_end":238855,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238860,"byte_end":238891,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238896,"byte_end":238899,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238904,"byte_end":238977,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238982,"byte_end":239037,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":239431,"byte_end":239442,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":239162,"byte_end":239237,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":239242,"byte_end":239273,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":239278,"byte_end":239281,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":239286,"byte_end":239359,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":239364,"byte_end":239419,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":239948,"byte_end":239958,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":239712,"byte_end":239775,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":239780,"byte_end":239783,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":239788,"byte_end":239860,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":239865,"byte_end":239936,"line_start":61,"line_end":61,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8162},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":242781,"byte_end":242787,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":8166},{"krate":0,"index":8164},{"krate":0,"index":8165}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":242721,"byte_end":242769,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":242689,"byte_end":242703,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8186},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":242781,"byte_end":242787,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"__Chunks","qualname":"::stream::stream::chunks::_::__Chunks","value":"__Chunks {  }","parent":null,"children":[{"krate":0,"index":8189},{"krate":0,"index":8190}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8214},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":245912,"byte_end":245923,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":8218},{"krate":0,"index":8216},{"krate":0,"index":8217}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":245852,"byte_end":245900,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":245820,"byte_end":245834,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8238},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":245912,"byte_end":245923,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"__ReadyChunks","qualname":"::stream::stream::ready_chunks::_::__ReadyChunks","value":"__ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":8241},{"krate":0,"index":8242}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8266},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":249377,"byte_end":249381,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":8272},{"krate":0,"index":8271},{"krate":0,"index":8273}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":249317,"byte_end":249365,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":249302,"byte_end":249316,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8302},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":249377,"byte_end":249381,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"__Scan","qualname":"::stream::stream::scan::_::__Scan","value":"__Scan {  }","parent":null,"children":[{"krate":0,"index":8308},{"krate":0,"index":8309},{"krate":0,"index":8310}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11612},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8382772,"byte_end":8382787,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11616},{"krate":0,"index":11614},{"krate":0,"index":11615}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8382712,"byte_end":8382760,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8382697,"byte_end":8382711,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11636},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8382772,"byte_end":8382787,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"__BufferUnordered","qualname":"::stream::stream::buffer_unordered::_::__BufferUnordered","value":"__BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11639},{"krate":0,"index":11640}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11567},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8386132,"byte_end":8386140,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":11571},{"krate":0,"index":11569},{"krate":0,"index":11570}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8386072,"byte_end":8386120,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8386057,"byte_end":8386071,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11591},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8386132,"byte_end":8386140,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"__Buffered","qualname":"::stream::stream::buffered::_::__Buffered","value":"__Buffered {  }","parent":null,"children":[{"krate":0,"index":11594},{"krate":0,"index":11595}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11499},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8389209,"byte_end":8389226,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11506},{"krate":0,"index":11503},{"krate":0,"index":11504},{"krate":0,"index":11505}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8389130,"byte_end":8389197,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8389115,"byte_end":8389129,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11534},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8389209,"byte_end":8389226,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"__ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::_::__ForEachConcurrent","value":"__ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11539},{"krate":0,"index":11540}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8449},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":252834,"byte_end":252845,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8452},{"krate":0,"index":8451}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":252774,"byte_end":252822,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":252742,"byte_end":252756,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8470},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":252834,"byte_end":252845,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"__CatchUnwind","qualname":"::stream::stream::catch_unwind::_::__CatchUnwind","value":"__CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8473},{"krate":0,"index":8474}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1800},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145448,"byte_end":145457,"line_start":198,"line_end":198,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1810},{"krate":0,"index":1814},{"krate":0,"index":1817},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1828},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1873}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145337,"byte_end":145411,"line_start":196,"line_end":196,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145412,"byte_end":145437,"line_start":197,"line_end":197,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146367,"byte_end":146371,"line_start":222,"line_end":222,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145472,"byte_end":145538,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145543,"byte_end":145546,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145551,"byte_end":145619,"line_start":201,"line_end":201,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145624,"byte_end":145699,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145704,"byte_end":145779,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145784,"byte_end":145838,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145843,"byte_end":145918,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145923,"byte_end":145933,"line_start":206,"line_end":206,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145938,"byte_end":145941,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145946,"byte_end":145960,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145965,"byte_end":145968,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145973,"byte_end":145980,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145985,"byte_end":146026,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146031,"byte_end":146074,"line_start":212,"line_end":212,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146079,"byte_end":146082,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146087,"byte_end":146128,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146133,"byte_end":146136,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146141,"byte_end":146186,"line_start":216,"line_end":216,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146191,"byte_end":146236,"line_start":217,"line_end":217,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146241,"byte_end":146286,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146291,"byte_end":146333,"line_start":219,"line_end":219,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146338,"byte_end":146347,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146352,"byte_end":146359,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147570,"byte_end":147581,"line_start":257,"line_end":257,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146473,"byte_end":146545,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146550,"byte_end":146611,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146616,"byte_end":146619,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146624,"byte_end":146699,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146704,"byte_end":146758,"line_start":233,"line_end":233,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146763,"byte_end":146766,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146771,"byte_end":146844,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146849,"byte_end":146911,"line_start":236,"line_end":236,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146916,"byte_end":146991,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146996,"byte_end":147050,"line_start":238,"line_end":238,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147055,"byte_end":147130,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147135,"byte_end":147145,"line_start":240,"line_end":240,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147150,"byte_end":147153,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147158,"byte_end":147172,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147177,"byte_end":147180,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147185,"byte_end":147192,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147197,"byte_end":147238,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147243,"byte_end":147286,"line_start":246,"line_end":246,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147291,"byte_end":147294,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147299,"byte_end":147336,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147341,"byte_end":147344,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147349,"byte_end":147401,"line_start":250,"line_end":250,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147406,"byte_end":147436,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147441,"byte_end":147444,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147449,"byte_end":147501,"line_start":253,"line_end":253,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147506,"byte_end":147536,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147541,"byte_end":147550,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147555,"byte_end":147562,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148534,"byte_end":148537,"line_start":287,"line_end":287,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147698,"byte_end":147773,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147778,"byte_end":147801,"line_start":265,"line_end":265,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147806,"byte_end":147809,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147814,"byte_end":147886,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147891,"byte_end":147955,"line_start":268,"line_end":268,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147960,"byte_end":147997,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148002,"byte_end":148005,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148010,"byte_end":148086,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148091,"byte_end":148162,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148167,"byte_end":148188,"line_start":273,"line_end":273,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148193,"byte_end":148196,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148201,"byte_end":148215,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148220,"byte_end":148223,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148228,"byte_end":148235,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148240,"byte_end":148281,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148286,"byte_end":148329,"line_start":279,"line_end":279,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148334,"byte_end":148337,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148342,"byte_end":148379,"line_start":281,"line_end":281,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148384,"byte_end":148423,"line_start":282,"line_end":282,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148428,"byte_end":148431,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148436,"byte_end":148500,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148505,"byte_end":148514,"line_start":285,"line_end":285,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148519,"byte_end":148526,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150069,"byte_end":150078,"line_start":333,"line_end":333,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148681,"byte_end":148752,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148757,"byte_end":148776,"line_start":296,"line_end":296,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148781,"byte_end":148784,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148789,"byte_end":148854,"line_start":298,"line_end":298,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148859,"byte_end":148928,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148933,"byte_end":148944,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148949,"byte_end":148952,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148957,"byte_end":149032,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149037,"byte_end":149119,"line_start":303,"line_end":303,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149124,"byte_end":149142,"line_start":304,"line_end":304,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149147,"byte_end":149150,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149155,"byte_end":149178,"line_start":306,"line_end":306,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149183,"byte_end":149186,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149191,"byte_end":149266,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ [`usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149271,"byte_end":149353,"line_start":309,"line_end":309,"column_start":5,"column_end":87}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149358,"byte_end":149414,"line_start":310,"line_end":310,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149419,"byte_end":149422,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149427,"byte_end":149439,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149444,"byte_end":149447,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149452,"byte_end":149521,"line_start":314,"line_end":314,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149526,"byte_end":149551,"line_start":315,"line_end":315,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149556,"byte_end":149559,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149564,"byte_end":149578,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149583,"byte_end":149586,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149591,"byte_end":149598,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149603,"byte_end":149644,"line_start":320,"line_end":320,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149649,"byte_end":149692,"line_start":321,"line_end":321,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149697,"byte_end":149700,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149705,"byte_end":149756,"line_start":323,"line_end":323,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149761,"byte_end":149764,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149769,"byte_end":149809,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149814,"byte_end":149817,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149822,"byte_end":149874,"line_start":327,"line_end":327,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149879,"byte_end":149931,"line_start":328,"line_end":328,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149936,"byte_end":149988,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":149993,"byte_end":150035,"line_start":330,"line_end":330,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150040,"byte_end":150049,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150054,"byte_end":150061,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151266,"byte_end":151272,"line_start":366,"line_end":366,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150181,"byte_end":150253,"line_start":340,"line_end":340,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150258,"byte_end":150285,"line_start":341,"line_end":341,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150290,"byte_end":150293,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150298,"byte_end":150373,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150378,"byte_end":150449,"line_start":344,"line_end":344,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150454,"byte_end":150526,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150531,"byte_end":150605,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150610,"byte_end":150668,"line_start":347,"line_end":347,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150673,"byte_end":150676,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150681,"byte_end":150757,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150762,"byte_end":150836,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150841,"byte_end":150862,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150867,"byte_end":150870,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150875,"byte_end":150889,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150894,"byte_end":150897,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150902,"byte_end":150909,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150914,"byte_end":150955,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150960,"byte_end":150984,"line_start":357,"line_end":357,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":150989,"byte_end":151032,"line_start":358,"line_end":358,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151037,"byte_end":151040,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151045,"byte_end":151083,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151088,"byte_end":151149,"line_start":361,"line_end":361,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151154,"byte_end":151157,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151162,"byte_end":151232,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151237,"byte_end":151246,"line_start":364,"line_end":364,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151251,"byte_end":151258,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152565,"byte_end":152575,"line_start":400,"line_end":400,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151468,"byte_end":151543,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151548,"byte_end":151624,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151629,"byte_end":151632,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151637,"byte_end":151712,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151717,"byte_end":151792,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151797,"byte_end":151873,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151878,"byte_end":151943,"line_start":381,"line_end":381,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151948,"byte_end":151951,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":151956,"byte_end":152032,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152037,"byte_end":152111,"line_start":384,"line_end":384,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152116,"byte_end":152141,"line_start":385,"line_end":385,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152146,"byte_end":152149,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152154,"byte_end":152168,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152173,"byte_end":152180,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152185,"byte_end":152226,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152231,"byte_end":152274,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152279,"byte_end":152282,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152287,"byte_end":152325,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152330,"byte_end":152380,"line_start":393,"line_end":393,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152385,"byte_end":152436,"line_start":394,"line_end":394,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152441,"byte_end":152448,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152453,"byte_end":152456,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152461,"byte_end":152531,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152536,"byte_end":152545,"line_start":398,"line_end":398,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152550,"byte_end":152557,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153581,"byte_end":153585,"line_start":431,"line_end":431,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152784,"byte_end":152857,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152862,"byte_end":152890,"line_start":410,"line_end":410,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152895,"byte_end":152898,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152903,"byte_end":152977,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":152982,"byte_end":153049,"line_start":413,"line_end":413,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153054,"byte_end":153099,"line_start":414,"line_end":414,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153104,"byte_end":153107,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153112,"byte_end":153188,"line_start":416,"line_end":416,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153193,"byte_end":153219,"line_start":417,"line_end":417,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153224,"byte_end":153227,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153232,"byte_end":153246,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153251,"byte_end":153254,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153259,"byte_end":153266,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153271,"byte_end":153312,"line_start":422,"line_end":422,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153317,"byte_end":153360,"line_start":423,"line_end":423,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153365,"byte_end":153368,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153373,"byte_end":153410,"line_start":425,"line_end":425,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153415,"byte_end":153470,"line_start":426,"line_end":426,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153475,"byte_end":153478,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153483,"byte_end":153547,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153552,"byte_end":153561,"line_start":429,"line_end":429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153566,"byte_end":153573,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154486,"byte_end":154493,"line_start":465,"line_end":465,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153761,"byte_end":153815,"line_start":440,"line_end":440,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153820,"byte_end":153875,"line_start":441,"line_end":441,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153880,"byte_end":153883,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153888,"byte_end":153956,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153961,"byte_end":153964,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153969,"byte_end":153983,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153988,"byte_end":153991,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153996,"byte_end":154003,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154008,"byte_end":154049,"line_start":448,"line_end":448,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154054,"byte_end":154085,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154090,"byte_end":154125,"line_start":450,"line_end":450,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154130,"byte_end":154150,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154155,"byte_end":154158,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154163,"byte_end":154200,"line_start":453,"line_end":453,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154205,"byte_end":154208,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154213,"byte_end":154240,"line_start":455,"line_end":455,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154245,"byte_end":154269,"line_start":456,"line_end":456,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154274,"byte_end":154316,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154321,"byte_end":154330,"line_start":458,"line_end":458,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154335,"byte_end":154342,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154347,"byte_end":154350,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154355,"byte_end":154403,"line_start":461,"line_end":461,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154408,"byte_end":154452,"line_start":462,"line_end":462,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154457,"byte_end":154466,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154471,"byte_end":154478,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155663,"byte_end":155669,"line_start":504,"line_end":504,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154628,"byte_end":154690,"line_start":472,"line_end":472,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154695,"byte_end":154759,"line_start":473,"line_end":473,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154764,"byte_end":154767,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154772,"byte_end":154836,"line_start":475,"line_end":475,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154841,"byte_end":154906,"line_start":476,"line_end":476,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154911,"byte_end":154957,"line_start":477,"line_end":477,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154962,"byte_end":154965,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154970,"byte_end":155019,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155024,"byte_end":155064,"line_start":480,"line_end":480,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155069,"byte_end":155072,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155077,"byte_end":155091,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155096,"byte_end":155099,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155104,"byte_end":155111,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155116,"byte_end":155157,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155162,"byte_end":155193,"line_start":486,"line_end":486,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155198,"byte_end":155233,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155238,"byte_end":155258,"line_start":488,"line_end":488,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155263,"byte_end":155266,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155271,"byte_end":155308,"line_start":490,"line_end":490,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155313,"byte_end":155316,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155321,"byte_end":155348,"line_start":492,"line_end":492,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155353,"byte_end":155384,"line_start":493,"line_end":493,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155389,"byte_end":155415,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155420,"byte_end":155486,"line_start":495,"line_end":495,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155491,"byte_end":155500,"line_start":496,"line_end":496,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155505,"byte_end":155512,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155517,"byte_end":155520,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155525,"byte_end":155560,"line_start":499,"line_end":499,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155565,"byte_end":155568,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155573,"byte_end":155629,"line_start":501,"line_end":501,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155634,"byte_end":155643,"line_start":502,"line_end":502,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155648,"byte_end":155655,"line_start":503,"line_end":503,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156682,"byte_end":156686,"line_start":532,"line_end":532,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155867,"byte_end":155934,"line_start":512,"line_end":512,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155939,"byte_end":155991,"line_start":513,"line_end":513,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155996,"byte_end":155999,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156004,"byte_end":156074,"line_start":515,"line_end":515,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156079,"byte_end":156155,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156160,"byte_end":156236,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156241,"byte_end":156311,"line_start":518,"line_end":518,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156316,"byte_end":156342,"line_start":519,"line_end":519,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156347,"byte_end":156350,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156355,"byte_end":156369,"line_start":521,"line_end":521,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156374,"byte_end":156377,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156382,"byte_end":156389,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156394,"byte_end":156435,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156440,"byte_end":156483,"line_start":525,"line_end":525,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156488,"byte_end":156491,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156496,"byte_end":156539,"line_start":527,"line_end":527,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156544,"byte_end":156613,"line_start":528,"line_end":528,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156618,"byte_end":156648,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156653,"byte_end":156662,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156667,"byte_end":156674,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157857,"byte_end":157864,"line_start":572,"line_end":572,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156898,"byte_end":156963,"line_start":541,"line_end":541,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156968,"byte_end":156971,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156976,"byte_end":156990,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":156995,"byte_end":156998,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157003,"byte_end":157010,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157015,"byte_end":157056,"line_start":546,"line_end":546,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157061,"byte_end":157092,"line_start":547,"line_end":547,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157097,"byte_end":157132,"line_start":548,"line_end":548,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157137,"byte_end":157157,"line_start":549,"line_end":549,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157162,"byte_end":157165,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157170,"byte_end":157209,"line_start":551,"line_end":551,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157214,"byte_end":157253,"line_start":552,"line_end":552,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157258,"byte_end":157297,"line_start":553,"line_end":553,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157302,"byte_end":157305,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157310,"byte_end":157337,"line_start":555,"line_end":555,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157342,"byte_end":157381,"line_start":556,"line_end":556,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157386,"byte_end":157425,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157430,"byte_end":157437,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157442,"byte_end":157469,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157474,"byte_end":157513,"line_start":560,"line_end":560,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157518,"byte_end":157557,"line_start":561,"line_end":561,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157562,"byte_end":157569,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157574,"byte_end":157601,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157606,"byte_end":157647,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157652,"byte_end":157693,"line_start":565,"line_end":565,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157698,"byte_end":157705,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157710,"byte_end":157713,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157718,"byte_end":157777,"line_start":568,"line_end":568,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157782,"byte_end":157823,"line_start":569,"line_end":569,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157828,"byte_end":157837,"line_start":570,"line_end":570,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157842,"byte_end":157849,"line_start":571,"line_end":571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159076,"byte_end":159084,"line_start":605,"line_end":605,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":157991,"byte_end":158063,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158068,"byte_end":158071,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158076,"byte_end":158153,"line_start":582,"line_end":582,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158158,"byte_end":158233,"line_start":583,"line_end":583,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158238,"byte_end":158314,"line_start":584,"line_end":584,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158319,"byte_end":158322,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158327,"byte_end":158409,"line_start":586,"line_end":586,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158414,"byte_end":158497,"line_start":587,"line_end":587,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158502,"byte_end":158505,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158510,"byte_end":158586,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158591,"byte_end":158667,"line_start":590,"line_end":590,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158672,"byte_end":158693,"line_start":591,"line_end":591,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158698,"byte_end":158701,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158706,"byte_end":158720,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158725,"byte_end":158728,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158733,"byte_end":158740,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158745,"byte_end":158786,"line_start":596,"line_end":596,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158791,"byte_end":158834,"line_start":597,"line_end":597,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158839,"byte_end":158842,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158847,"byte_end":158884,"line_start":599,"line_end":599,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158889,"byte_end":158956,"line_start":600,"line_end":600,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158961,"byte_end":158964,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":158969,"byte_end":159042,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159047,"byte_end":159056,"line_start":603,"line_end":603,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159061,"byte_end":159068,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160068,"byte_end":160072,"line_start":638,"line_end":638,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state \n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state ","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159258,"byte_end":159330,"line_start":614,"line_end":614,"column_start":5,"column_end":77}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159335,"byte_end":159365,"line_start":615,"line_end":615,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159370,"byte_end":159373,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159378,"byte_end":159453,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159458,"byte_end":159529,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159534,"byte_end":159574,"line_start":619,"line_end":619,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159579,"byte_end":159582,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159587,"byte_end":159601,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159606,"byte_end":159609,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159614,"byte_end":159621,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159626,"byte_end":159667,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159672,"byte_end":159696,"line_start":625,"line_end":625,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159701,"byte_end":159744,"line_start":626,"line_end":626,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159749,"byte_end":159752,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159757,"byte_end":159795,"line_start":628,"line_end":628,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159800,"byte_end":159803,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159808,"byte_end":159852,"line_start":630,"line_end":630,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159857,"byte_end":159877,"line_start":631,"line_end":631,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159882,"byte_end":159945,"line_start":632,"line_end":632,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159950,"byte_end":159957,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159962,"byte_end":159965,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159970,"byte_end":160034,"line_start":635,"line_end":635,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160039,"byte_end":160048,"line_start":636,"line_end":636,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160053,"byte_end":160060,"line_start":637,"line_end":637,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161096,"byte_end":161106,"line_start":669,"line_end":669,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160318,"byte_end":160392,"line_start":647,"line_end":647,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160397,"byte_end":160420,"line_start":648,"line_end":648,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160425,"byte_end":160428,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160433,"byte_end":160506,"line_start":650,"line_end":650,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160511,"byte_end":160583,"line_start":651,"line_end":651,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160588,"byte_end":160665,"line_start":652,"line_end":652,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160670,"byte_end":160681,"line_start":653,"line_end":653,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160686,"byte_end":160689,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160694,"byte_end":160708,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160713,"byte_end":160716,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160721,"byte_end":160728,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160733,"byte_end":160774,"line_start":658,"line_end":658,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160779,"byte_end":160803,"line_start":659,"line_end":659,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160808,"byte_end":160851,"line_start":660,"line_end":660,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160856,"byte_end":160859,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160864,"byte_end":160902,"line_start":662,"line_end":662,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160907,"byte_end":160910,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160915,"byte_end":160978,"line_start":664,"line_end":664,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160983,"byte_end":160986,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160991,"byte_end":161062,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161067,"byte_end":161076,"line_start":667,"line_end":667,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161081,"byte_end":161088,"line_start":668,"line_end":668,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162063,"byte_end":162073,"line_start":699,"line_end":699,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161308,"byte_end":161384,"line_start":678,"line_end":678,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161389,"byte_end":161412,"line_start":679,"line_end":679,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161417,"byte_end":161420,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161425,"byte_end":161500,"line_start":681,"line_end":681,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161505,"byte_end":161577,"line_start":682,"line_end":682,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161582,"byte_end":161649,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161654,"byte_end":161657,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161662,"byte_end":161676,"line_start":685,"line_end":685,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161681,"byte_end":161684,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161689,"byte_end":161696,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161701,"byte_end":161742,"line_start":688,"line_end":688,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161747,"byte_end":161771,"line_start":689,"line_end":689,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161776,"byte_end":161819,"line_start":690,"line_end":690,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161824,"byte_end":161827,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161832,"byte_end":161870,"line_start":692,"line_end":692,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161875,"byte_end":161878,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161883,"byte_end":161946,"line_start":694,"line_end":694,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161951,"byte_end":161954,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161959,"byte_end":162029,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162034,"byte_end":162043,"line_start":697,"line_end":697,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162048,"byte_end":162055,"line_start":698,"line_end":698,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163557,"byte_end":163567,"line_start":744,"line_end":744,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162275,"byte_end":162345,"line_start":708,"line_end":708,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162350,"byte_end":162353,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162358,"byte_end":162429,"line_start":710,"line_end":710,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162434,"byte_end":162506,"line_start":711,"line_end":711,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162511,"byte_end":162581,"line_start":712,"line_end":712,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162586,"byte_end":162589,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162594,"byte_end":162665,"line_start":714,"line_end":714,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be aceessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162670,"byte_end":162756,"line_start":715,"line_end":715,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162761,"byte_end":162828,"line_start":716,"line_end":716,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162833,"byte_end":162897,"line_start":717,"line_end":717,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162902,"byte_end":162905,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162910,"byte_end":162924,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162929,"byte_end":162932,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162937,"byte_end":162944,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162949,"byte_end":162990,"line_start":722,"line_end":722,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162995,"byte_end":163019,"line_start":723,"line_end":723,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163024,"byte_end":163067,"line_start":724,"line_end":724,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163072,"byte_end":163100,"line_start":725,"line_end":725,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163105,"byte_end":163108,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163113,"byte_end":163151,"line_start":727,"line_end":727,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163156,"byte_end":163159,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163164,"byte_end":163182,"line_start":729,"line_end":729,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163187,"byte_end":163229,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163234,"byte_end":163249,"line_start":731,"line_end":731,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163254,"byte_end":163273,"line_start":732,"line_end":732,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163278,"byte_end":163303,"line_start":733,"line_end":733,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163308,"byte_end":163324,"line_start":734,"line_end":734,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163329,"byte_end":163356,"line_start":735,"line_end":735,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163361,"byte_end":163370,"line_start":736,"line_end":736,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163375,"byte_end":163382,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163387,"byte_end":163390,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163395,"byte_end":163440,"line_start":739,"line_end":739,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163445,"byte_end":163448,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163453,"byte_end":163523,"line_start":741,"line_end":741,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163528,"byte_end":163537,"line_start":742,"line_end":742,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163542,"byte_end":163549,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164774,"byte_end":164782,"line_start":785,"line_end":785,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163716,"byte_end":163787,"line_start":752,"line_end":752,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163792,"byte_end":163835,"line_start":753,"line_end":753,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163840,"byte_end":163843,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163848,"byte_end":163923,"line_start":755,"line_end":755,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":163928,"byte_end":163998,"line_start":756,"line_end":756,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164003,"byte_end":164041,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164046,"byte_end":164049,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164054,"byte_end":164129,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164134,"byte_end":164177,"line_start":760,"line_end":760,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164182,"byte_end":164185,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164190,"byte_end":164263,"line_start":762,"line_end":762,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164268,"byte_end":164311,"line_start":763,"line_end":763,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164316,"byte_end":164319,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164324,"byte_end":164338,"line_start":765,"line_end":765,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164343,"byte_end":164346,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164351,"byte_end":164358,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164363,"byte_end":164404,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164409,"byte_end":164433,"line_start":769,"line_end":769,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164438,"byte_end":164481,"line_start":770,"line_end":770,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164486,"byte_end":164489,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164494,"byte_end":164512,"line_start":772,"line_end":772,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164517,"byte_end":164520,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164525,"byte_end":164530,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164535,"byte_end":164596,"line_start":775,"line_end":775,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164601,"byte_end":164623,"line_start":776,"line_end":776,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164628,"byte_end":164657,"line_start":777,"line_end":777,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164662,"byte_end":164673,"line_start":778,"line_end":778,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164678,"byte_end":164696,"line_start":779,"line_end":779,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164701,"byte_end":164706,"line_start":780,"line_end":780,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164711,"byte_end":164714,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164719,"byte_end":164740,"line_start":782,"line_end":782,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164745,"byte_end":164754,"line_start":783,"line_end":783,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164759,"byte_end":164766,"line_start":784,"line_end":784,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166964,"byte_end":166983,"line_start":841,"line_end":841,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":164977,"byte_end":165048,"line_start":794,"line_end":794,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165053,"byte_end":165127,"line_start":795,"line_end":795,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165132,"byte_end":165146,"line_start":796,"line_end":796,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165151,"byte_end":165154,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165159,"byte_end":165222,"line_start":798,"line_end":798,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165227,"byte_end":165298,"line_start":799,"line_end":799,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165303,"byte_end":165355,"line_start":800,"line_end":800,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165360,"byte_end":165363,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165368,"byte_end":165443,"line_start":802,"line_end":802,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165448,"byte_end":165518,"line_start":803,"line_end":803,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165523,"byte_end":165587,"line_start":804,"line_end":804,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165592,"byte_end":165595,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165600,"byte_end":165671,"line_start":806,"line_end":806,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165676,"byte_end":165746,"line_start":807,"line_end":807,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165751,"byte_end":165812,"line_start":808,"line_end":808,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165817,"byte_end":165884,"line_start":809,"line_end":809,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165889,"byte_end":165958,"line_start":810,"line_end":810,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":165963,"byte_end":166035,"line_start":811,"line_end":811,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166040,"byte_end":166043,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166048,"byte_end":166123,"line_start":813,"line_end":813,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166128,"byte_end":166185,"line_start":814,"line_end":814,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166190,"byte_end":166193,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166198,"byte_end":166212,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166217,"byte_end":166220,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166225,"byte_end":166232,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166237,"byte_end":166278,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166283,"byte_end":166317,"line_start":820,"line_end":820,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166322,"byte_end":166365,"line_start":821,"line_end":821,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166370,"byte_end":166373,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166378,"byte_end":166418,"line_start":823,"line_end":823,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166423,"byte_end":166463,"line_start":824,"line_end":824,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166468,"byte_end":166508,"line_start":825,"line_end":825,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166513,"byte_end":166516,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166521,"byte_end":166589,"line_start":827,"line_end":827,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166594,"byte_end":166616,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166621,"byte_end":166646,"line_start":829,"line_end":829,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166651,"byte_end":166681,"line_start":830,"line_end":830,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166686,"byte_end":166695,"line_start":831,"line_end":831,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166700,"byte_end":166706,"line_start":832,"line_end":832,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166711,"byte_end":166737,"line_start":833,"line_end":833,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166742,"byte_end":166768,"line_start":834,"line_end":834,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166773,"byte_end":166799,"line_start":835,"line_end":835,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166804,"byte_end":166818,"line_start":836,"line_end":836,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166823,"byte_end":166831,"line_start":837,"line_end":837,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166836,"byte_end":166843,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":166931,"byte_end":166956,"line_start":840,"line_end":840,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167784,"byte_end":167788,"line_start":870,"line_end":870,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167276,"byte_end":167347,"line_start":854,"line_end":854,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167352,"byte_end":167355,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167360,"byte_end":167433,"line_start":856,"line_end":856,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167438,"byte_end":167473,"line_start":857,"line_end":857,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167478,"byte_end":167481,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167486,"byte_end":167500,"line_start":859,"line_end":859,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167505,"byte_end":167508,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167513,"byte_end":167520,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167525,"byte_end":167566,"line_start":862,"line_end":862,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167571,"byte_end":167614,"line_start":863,"line_end":863,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167619,"byte_end":167622,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167627,"byte_end":167673,"line_start":865,"line_end":865,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167678,"byte_end":167681,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167686,"byte_end":167750,"line_start":867,"line_end":867,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167755,"byte_end":167764,"line_start":868,"line_end":868,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167769,"byte_end":167776,"line_start":869,"line_end":869,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168421,"byte_end":168425,"line_start":893,"line_end":893,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167894,"byte_end":167966,"line_start":877,"line_end":877,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167971,"byte_end":167974,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":167979,"byte_end":168052,"line_start":879,"line_end":879,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168057,"byte_end":168103,"line_start":880,"line_end":880,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168108,"byte_end":168111,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168116,"byte_end":168130,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168135,"byte_end":168138,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168143,"byte_end":168150,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168155,"byte_end":168196,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168201,"byte_end":168244,"line_start":886,"line_end":886,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168249,"byte_end":168252,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168257,"byte_end":168303,"line_start":888,"line_end":888,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168308,"byte_end":168311,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168316,"byte_end":168387,"line_start":890,"line_end":890,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168392,"byte_end":168401,"line_start":891,"line_end":891,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168406,"byte_end":168413,"line_start":892,"line_end":892,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170014,"byte_end":170018,"line_start":939,"line_end":939,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168531,"byte_end":168602,"line_start":900,"line_end":900,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168607,"byte_end":168680,"line_start":901,"line_end":901,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168685,"byte_end":168723,"line_start":902,"line_end":902,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168728,"byte_end":168731,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168736,"byte_end":168790,"line_start":904,"line_end":904,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168795,"byte_end":168867,"line_start":905,"line_end":905,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168872,"byte_end":168948,"line_start":906,"line_end":906,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":168953,"byte_end":169021,"line_start":907,"line_end":907,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169026,"byte_end":169102,"line_start":908,"line_end":908,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169107,"byte_end":169129,"line_start":909,"line_end":909,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169134,"byte_end":169137,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169142,"byte_end":169209,"line_start":911,"line_end":911,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169214,"byte_end":169282,"line_start":912,"line_end":912,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169287,"byte_end":169300,"line_start":913,"line_end":913,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169305,"byte_end":169308,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169313,"byte_end":169327,"line_start":915,"line_end":915,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169332,"byte_end":169335,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169340,"byte_end":169347,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169352,"byte_end":169395,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169400,"byte_end":169443,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169448,"byte_end":169476,"line_start":920,"line_end":920,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169481,"byte_end":169484,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169489,"byte_end":169507,"line_start":922,"line_end":922,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169512,"byte_end":169550,"line_start":923,"line_end":923,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169555,"byte_end":169570,"line_start":924,"line_end":924,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169575,"byte_end":169592,"line_start":925,"line_end":925,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169597,"byte_end":169639,"line_start":926,"line_end":926,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169644,"byte_end":169679,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169684,"byte_end":169728,"line_start":928,"line_end":928,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169733,"byte_end":169742,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169747,"byte_end":169761,"line_start":930,"line_end":930,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169766,"byte_end":169769,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169774,"byte_end":169817,"line_start":932,"line_end":932,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169822,"byte_end":169859,"line_start":933,"line_end":933,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169864,"byte_end":169901,"line_start":934,"line_end":934,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169906,"byte_end":169940,"line_start":935,"line_end":935,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169945,"byte_end":169979,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169984,"byte_end":169994,"line_start":937,"line_end":937,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":169999,"byte_end":170006,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170915,"byte_end":170921,"line_start":972,"line_end":972,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170111,"byte_end":170158,"line_start":946,"line_end":946,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170163,"byte_end":170166,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170171,"byte_end":170245,"line_start":948,"line_end":948,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170250,"byte_end":170287,"line_start":949,"line_end":949,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170292,"byte_end":170295,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170300,"byte_end":170314,"line_start":951,"line_end":951,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170319,"byte_end":170322,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170327,"byte_end":170334,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170339,"byte_end":170380,"line_start":954,"line_end":954,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170385,"byte_end":170428,"line_start":955,"line_end":955,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170433,"byte_end":170436,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170441,"byte_end":170481,"line_start":957,"line_end":957,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170486,"byte_end":170489,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170494,"byte_end":170523,"line_start":959,"line_end":959,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170528,"byte_end":170556,"line_start":960,"line_end":960,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170561,"byte_end":170618,"line_start":961,"line_end":961,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170623,"byte_end":170650,"line_start":962,"line_end":962,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170655,"byte_end":170678,"line_start":963,"line_end":963,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170683,"byte_end":170686,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170691,"byte_end":170726,"line_start":965,"line_end":965,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170731,"byte_end":170759,"line_start":966,"line_end":966,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170764,"byte_end":170821,"line_start":967,"line_end":967,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170826,"byte_end":170853,"line_start":968,"line_end":968,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170858,"byte_end":170881,"line_start":969,"line_end":969,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170886,"byte_end":170895,"line_start":970,"line_end":970,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170900,"byte_end":170907,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172680,"byte_end":172692,"line_start":1017,"line_end":1017,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":170972,"byte_end":171026,"line_start":976,"line_end":976,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171031,"byte_end":171034,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171039,"byte_end":171114,"line_start":978,"line_end":978,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171119,"byte_end":171122,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171127,"byte_end":171202,"line_start":980,"line_end":980,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171207,"byte_end":171281,"line_start":981,"line_end":981,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171286,"byte_end":171360,"line_start":982,"line_end":982,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171365,"byte_end":171414,"line_start":983,"line_end":983,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171419,"byte_end":171422,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171427,"byte_end":171502,"line_start":985,"line_end":985,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171507,"byte_end":171577,"line_start":986,"line_end":986,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171582,"byte_end":171649,"line_start":987,"line_end":987,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171654,"byte_end":171726,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171731,"byte_end":171800,"line_start":989,"line_end":989,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171805,"byte_end":171820,"line_start":990,"line_end":990,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171825,"byte_end":171828,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171833,"byte_end":171897,"line_start":992,"line_end":992,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171902,"byte_end":171959,"line_start":993,"line_end":993,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171964,"byte_end":171967,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171972,"byte_end":171986,"line_start":995,"line_end":995,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171991,"byte_end":171994,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":171999,"byte_end":172006,"line_start":997,"line_end":997,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172011,"byte_end":172052,"line_start":998,"line_end":998,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172057,"byte_end":172100,"line_start":999,"line_end":999,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172105,"byte_end":172108,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172113,"byte_end":172175,"line_start":1001,"line_end":1001,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172180,"byte_end":172210,"line_start":1002,"line_end":1002,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172215,"byte_end":172269,"line_start":1003,"line_end":1003,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172274,"byte_end":172304,"line_start":1004,"line_end":1004,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172309,"byte_end":172358,"line_start":1005,"line_end":1005,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172363,"byte_end":172366,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172371,"byte_end":172433,"line_start":1007,"line_end":1007,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172438,"byte_end":172460,"line_start":1008,"line_end":1008,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172465,"byte_end":172485,"line_start":1009,"line_end":1009,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172490,"byte_end":172532,"line_start":1010,"line_end":1010,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172537,"byte_end":172542,"line_start":1011,"line_end":1011,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172547,"byte_end":172580,"line_start":1012,"line_end":1012,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172585,"byte_end":172618,"line_start":1013,"line_end":1013,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172623,"byte_end":172632,"line_start":1014,"line_end":1014,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172637,"byte_end":172644,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172649,"byte_end":172672,"line_start":1016,"line_end":1016,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173053,"byte_end":173058,"line_start":1029,"line_end":1029,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172824,"byte_end":172865,"line_start":1024,"line_end":1024,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172870,"byte_end":172873,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172878,"byte_end":172953,"line_start":1026,"line_end":1026,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":172958,"byte_end":173015,"line_start":1027,"line_end":1027,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173020,"byte_end":173045,"line_start":1028,"line_end":1028,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173482,"byte_end":173493,"line_start":1043,"line_end":1043,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173181,"byte_end":173222,"line_start":1036,"line_end":1036,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173227,"byte_end":173230,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173235,"byte_end":173294,"line_start":1038,"line_end":1038,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173299,"byte_end":173302,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173307,"byte_end":173382,"line_start":1040,"line_end":1040,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173387,"byte_end":173444,"line_start":1041,"line_end":1041,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173449,"byte_end":173474,"line_start":1042,"line_end":1042,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174398,"byte_end":174406,"line_start":1064,"line_end":1064,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173614,"byte_end":173677,"line_start":1050,"line_end":1050,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173682,"byte_end":173685,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173690,"byte_end":173765,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173770,"byte_end":173846,"line_start":1053,"line_end":1053,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173851,"byte_end":173924,"line_start":1054,"line_end":1054,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":173929,"byte_end":174002,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174007,"byte_end":174049,"line_start":1056,"line_end":1056,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174054,"byte_end":174057,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174062,"byte_end":174127,"line_start":1058,"line_end":1058,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174132,"byte_end":174135,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174140,"byte_end":174215,"line_start":1060,"line_end":1060,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174220,"byte_end":174277,"line_start":1061,"line_end":1061,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174365,"byte_end":174390,"line_start":1063,"line_end":1063,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176078,"byte_end":176094,"line_start":1109,"line_end":1109,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174548,"byte_end":174623,"line_start":1072,"line_end":1072,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174628,"byte_end":174631,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174636,"byte_end":174711,"line_start":1074,"line_end":1074,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174716,"byte_end":174790,"line_start":1075,"line_end":1075,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174795,"byte_end":174867,"line_start":1076,"line_end":1076,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174872,"byte_end":174946,"line_start":1077,"line_end":1077,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174951,"byte_end":174980,"line_start":1078,"line_end":1078,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174985,"byte_end":174988,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":174993,"byte_end":175058,"line_start":1080,"line_end":1080,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175063,"byte_end":175066,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175071,"byte_end":175146,"line_start":1082,"line_end":1082,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175151,"byte_end":175208,"line_start":1083,"line_end":1083,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175213,"byte_end":175216,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175221,"byte_end":175235,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175240,"byte_end":175243,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175248,"byte_end":175255,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175260,"byte_end":175301,"line_start":1088,"line_end":1088,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175306,"byte_end":175340,"line_start":1089,"line_end":1089,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175345,"byte_end":175388,"line_start":1090,"line_end":1090,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175393,"byte_end":175396,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175401,"byte_end":175451,"line_start":1092,"line_end":1092,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175456,"byte_end":175506,"line_start":1093,"line_end":1093,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175511,"byte_end":175514,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175519,"byte_end":175586,"line_start":1095,"line_end":1095,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175591,"byte_end":175653,"line_start":1096,"line_end":1096,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175658,"byte_end":175661,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175666,"byte_end":175691,"line_start":1098,"line_end":1098,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175696,"byte_end":175750,"line_start":1099,"line_end":1099,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175755,"byte_end":175758,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175763,"byte_end":175788,"line_start":1101,"line_end":1101,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175793,"byte_end":175847,"line_start":1102,"line_end":1102,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175852,"byte_end":175855,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175860,"byte_end":175904,"line_start":1104,"line_end":1104,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175909,"byte_end":175945,"line_start":1105,"line_end":1105,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":175950,"byte_end":175957,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176045,"byte_end":176070,"line_start":1108,"line_end":1108,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176938,"byte_end":176941,"line_start":1139,"line_end":1139,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176250,"byte_end":176298,"line_start":1117,"line_end":1117,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176303,"byte_end":176306,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176311,"byte_end":176384,"line_start":1119,"line_end":1119,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176389,"byte_end":176461,"line_start":1120,"line_end":1120,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176466,"byte_end":176479,"line_start":1121,"line_end":1121,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176484,"byte_end":176487,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176492,"byte_end":176506,"line_start":1123,"line_end":1123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176511,"byte_end":176514,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176519,"byte_end":176526,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176531,"byte_end":176572,"line_start":1126,"line_end":1126,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176577,"byte_end":176620,"line_start":1127,"line_end":1127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176625,"byte_end":176628,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176633,"byte_end":176671,"line_start":1129,"line_end":1129,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176676,"byte_end":176715,"line_start":1130,"line_end":1130,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176720,"byte_end":176723,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176728,"byte_end":176762,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176767,"byte_end":176808,"line_start":1133,"line_end":1133,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176813,"byte_end":176841,"line_start":1134,"line_end":1134,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176846,"byte_end":176896,"line_start":1135,"line_end":1135,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176901,"byte_end":176910,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176915,"byte_end":176922,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":176927,"byte_end":176930,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177805,"byte_end":177810,"line_start":1170,"line_end":1170,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177078,"byte_end":177115,"line_start":1147,"line_end":1147,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177120,"byte_end":177123,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177128,"byte_end":177199,"line_start":1149,"line_end":1149,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177204,"byte_end":177280,"line_start":1150,"line_end":1150,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177285,"byte_end":177288,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177293,"byte_end":177300,"line_start":1152,"line_end":1152,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177305,"byte_end":177346,"line_start":1153,"line_end":1153,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177351,"byte_end":177394,"line_start":1154,"line_end":1154,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177399,"byte_end":177402,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177407,"byte_end":177464,"line_start":1156,"line_end":1156,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177469,"byte_end":177525,"line_start":1157,"line_end":1157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177530,"byte_end":177533,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177538,"byte_end":177578,"line_start":1159,"line_end":1159,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177583,"byte_end":177586,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177591,"byte_end":177639,"line_start":1161,"line_end":1161,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177644,"byte_end":177672,"line_start":1162,"line_end":1162,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177677,"byte_end":177692,"line_start":1163,"line_end":1163,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177697,"byte_end":177716,"line_start":1164,"line_end":1164,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177721,"byte_end":177739,"line_start":1165,"line_end":1165,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177744,"byte_end":177759,"line_start":1166,"line_end":1166,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177764,"byte_end":177771,"line_start":1167,"line_end":1167,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177776,"byte_end":177785,"line_start":1168,"line_end":1168,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177790,"byte_end":177797,"line_start":1169,"line_end":1169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178116,"byte_end":178124,"line_start":1181,"line_end":1181,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":177970,"byte_end":178025,"line_start":1178,"line_end":1178,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178030,"byte_end":178033,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178038,"byte_end":178108,"line_start":1180,"line_end":1180,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179127,"byte_end":179133,"line_start":1207,"line_end":1207,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178225,"byte_end":178292,"line_start":1188,"line_end":1188,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178297,"byte_end":178300,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178305,"byte_end":178379,"line_start":1190,"line_end":1190,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178384,"byte_end":178456,"line_start":1191,"line_end":1191,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178461,"byte_end":178513,"line_start":1192,"line_end":1192,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178518,"byte_end":178521,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178526,"byte_end":178599,"line_start":1194,"line_end":1194,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178604,"byte_end":178678,"line_start":1195,"line_end":1195,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178683,"byte_end":178758,"line_start":1196,"line_end":1196,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178763,"byte_end":178835,"line_start":1197,"line_end":1197,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178840,"byte_end":178852,"line_start":1198,"line_end":1198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178857,"byte_end":178860,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178865,"byte_end":178940,"line_start":1200,"line_end":1200,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":178945,"byte_end":179002,"line_start":1201,"line_end":1201,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179007,"byte_end":179010,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179015,"byte_end":179027,"line_start":1203,"line_end":1203,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179032,"byte_end":179035,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179040,"byte_end":179089,"line_start":1205,"line_end":1205,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179094,"byte_end":179119,"line_start":1206,"line_end":1206,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180193,"byte_end":180205,"line_start":1233,"line_end":1233,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179257,"byte_end":179330,"line_start":1214,"line_end":1214,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179335,"byte_end":179338,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179343,"byte_end":179416,"line_start":1216,"line_end":1216,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179421,"byte_end":179491,"line_start":1217,"line_end":1217,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179496,"byte_end":179571,"line_start":1218,"line_end":1218,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179576,"byte_end":179653,"line_start":1219,"line_end":1219,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179658,"byte_end":179686,"line_start":1220,"line_end":1220,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179691,"byte_end":179694,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179699,"byte_end":179772,"line_start":1222,"line_end":1222,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179777,"byte_end":179852,"line_start":1223,"line_end":1223,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179857,"byte_end":179918,"line_start":1224,"line_end":1224,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179923,"byte_end":179926,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":179931,"byte_end":180006,"line_start":1226,"line_end":1226,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180011,"byte_end":180068,"line_start":1227,"line_end":1227,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180073,"byte_end":180076,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180081,"byte_end":180093,"line_start":1229,"line_end":1229,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180098,"byte_end":180101,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180106,"byte_end":180155,"line_start":1231,"line_end":1231,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":180160,"byte_end":180185,"line_start":1232,"line_end":1232,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182254,"byte_end":182261,"line_start":1283,"line_end":1283,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":181951,"byte_end":182024,"line_start":1278,"line_end":1278,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182029,"byte_end":182032,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182037,"byte_end":182106,"line_start":1280,"line_end":1280,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182111,"byte_end":182180,"line_start":1281,"line_end":1281,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182185,"byte_end":182246,"line_start":1282,"line_end":1282,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182685,"byte_end":182696,"line_start":1296,"line_end":1296,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182406,"byte_end":182481,"line_start":1291,"line_end":1291,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182486,"byte_end":182507,"line_start":1292,"line_end":1292,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182512,"byte_end":182515,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182520,"byte_end":182600,"line_start":1294,"line_end":1294,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182605,"byte_end":182677,"line_start":1295,"line_end":1295,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183117,"byte_end":183129,"line_start":1309,"line_end":1309,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182838,"byte_end":182914,"line_start":1304,"line_end":1304,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182919,"byte_end":182940,"line_start":1305,"line_end":1305,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182945,"byte_end":182948,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":182953,"byte_end":183032,"line_start":1307,"line_end":1307,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183037,"byte_end":183109,"line_start":1308,"line_end":1308,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183373,"byte_end":183388,"line_start":1319,"line_end":1319,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183272,"byte_end":183343,"line_start":1317,"line_end":1317,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183348,"byte_end":183365,"line_start":1318,"line_end":1318,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185489,"byte_end":185505,"line_start":1374,"line_end":1374,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183535,"byte_end":183610,"line_start":1326,"line_end":1326,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183615,"byte_end":183625,"line_start":1327,"line_end":1327,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183630,"byte_end":183633,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183638,"byte_end":183711,"line_start":1329,"line_end":1329,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183716,"byte_end":183784,"line_start":1330,"line_end":1330,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183789,"byte_end":183837,"line_start":1331,"line_end":1331,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183842,"byte_end":183917,"line_start":1332,"line_end":1332,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":183922,"byte_end":183998,"line_start":1333,"line_end":1333,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184003,"byte_end":184029,"line_start":1334,"line_end":1334,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184034,"byte_end":184037,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184042,"byte_end":184115,"line_start":1336,"line_end":1336,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184120,"byte_end":184190,"line_start":1337,"line_end":1337,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184195,"byte_end":184235,"line_start":1338,"line_end":1338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184240,"byte_end":184243,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184248,"byte_end":184302,"line_start":1340,"line_end":1340,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184307,"byte_end":184391,"line_start":1341,"line_end":1341,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184396,"byte_end":184399,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184404,"byte_end":184418,"line_start":1343,"line_end":1343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184423,"byte_end":184426,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184431,"byte_end":184438,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184443,"byte_end":184484,"line_start":1346,"line_end":1346,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184489,"byte_end":184523,"line_start":1347,"line_end":1347,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184528,"byte_end":184583,"line_start":1348,"line_end":1348,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184588,"byte_end":184591,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184596,"byte_end":184631,"line_start":1350,"line_end":1350,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184636,"byte_end":184686,"line_start":1351,"line_end":1351,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184691,"byte_end":184713,"line_start":1352,"line_end":1352,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184718,"byte_end":184728,"line_start":1353,"line_end":1353,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184733,"byte_end":184750,"line_start":1354,"line_end":1354,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184755,"byte_end":184781,"line_start":1355,"line_end":1355,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184786,"byte_end":184841,"line_start":1356,"line_end":1356,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184846,"byte_end":184875,"line_start":1357,"line_end":1357,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184880,"byte_end":184943,"line_start":1358,"line_end":1358,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184948,"byte_end":184994,"line_start":1359,"line_end":1359,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":184999,"byte_end":185013,"line_start":1360,"line_end":1360,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185018,"byte_end":185087,"line_start":1361,"line_end":1361,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185092,"byte_end":185117,"line_start":1362,"line_end":1362,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185122,"byte_end":185175,"line_start":1363,"line_end":1363,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185180,"byte_end":185209,"line_start":1364,"line_end":1364,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185214,"byte_end":185227,"line_start":1365,"line_end":1365,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185232,"byte_end":185302,"line_start":1366,"line_end":1366,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185307,"byte_end":185366,"line_start":1367,"line_end":1367,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185371,"byte_end":185401,"line_start":1368,"line_end":1368,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185406,"byte_end":185415,"line_start":1369,"line_end":1369,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185420,"byte_end":185425,"line_start":1370,"line_end":1370,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185430,"byte_end":185455,"line_start":1371,"line_end":1371,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185460,"byte_end":185469,"line_start":1372,"line_end":1372,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":185474,"byte_end":185481,"line_start":1373,"line_end":1373,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8500},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":285201,"byte_end":285208,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":8505},{"krate":0,"index":8506},{"krate":0,"index":8504}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":285141,"byte_end":285189,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":285126,"byte_end":285140,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8532},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":285201,"byte_end":285208,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"__AndThen","qualname":"::stream::try_stream::and_then::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":8537},{"krate":0,"index":8538},{"krate":0,"index":8539}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8573},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":8576}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8595},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::stream::try_stream::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":8599},{"krate":0,"index":8600}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8649},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":8652}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8671},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::stream::try_stream::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":8675},{"krate":0,"index":8676}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8725},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":8728}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8747},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::stream::try_stream::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":8751},{"krate":0,"index":8752}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8798},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":287998,"byte_end":288008,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":8800}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":287938,"byte_end":287986,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":287906,"byte_end":287920,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8816},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":287998,"byte_end":288008,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__IntoStream","qualname":"::stream::try_stream::into_stream::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":8819},{"krate":0,"index":8820}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8846},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":8849}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8868},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::stream::try_stream::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":8872},{"krate":0,"index":8873}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8922},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":8925}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8944},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::stream::try_stream::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":8948},{"krate":0,"index":8949}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8995},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":289340,"byte_end":289346,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9000},{"krate":0,"index":9001},{"krate":0,"index":8999}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":289280,"byte_end":289328,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":289265,"byte_end":289279,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9027},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":289340,"byte_end":289346,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"__OrElse","qualname":"::stream::try_stream::or_else::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":9032},{"krate":0,"index":9033},{"krate":0,"index":9034}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9065},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":292251,"byte_end":292258,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":9068}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":292084,"byte_end":292154,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":292172,"byte_end":292239,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9073},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":293338,"byte_end":293348,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":9078},{"krate":0,"index":9077},{"krate":0,"index":9079}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":293259,"byte_end":293326,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":293244,"byte_end":293258,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9105},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":293338,"byte_end":293348,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"__TryForEach","qualname":"::stream::try_stream::try_for_each::_::__TryForEach","value":"__TryForEach {  }","parent":null,"children":[{"krate":0,"index":9110},{"krate":0,"index":9111},{"krate":0,"index":9112}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9139},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":295293,"byte_end":295302,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":9145},{"krate":0,"index":9143},{"krate":0,"index":9146},{"krate":0,"index":9144}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":295233,"byte_end":295281,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":295218,"byte_end":295232,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9174},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":295293,"byte_end":295302,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__TryFilter","qualname":"::stream::try_stream::try_filter::_::__TryFilter","value":"__TryFilter {  }","parent":null,"children":[{"krate":0,"index":9179},{"krate":0,"index":9180},{"krate":0,"index":9181}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9212},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":298530,"byte_end":298542,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9217},{"krate":0,"index":9216},{"krate":0,"index":9218}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":298470,"byte_end":298518,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":298455,"byte_end":298469,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9244},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":298530,"byte_end":298542,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryFilterMap","qualname":"::stream::try_stream::try_filter_map::_::__TryFilterMap","value":"__TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9249},{"krate":0,"index":9250},{"krate":0,"index":9251}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9282},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":301561,"byte_end":301571,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9284},{"krate":0,"index":9285}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":301501,"byte_end":301549,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":301469,"byte_end":301483,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9303},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":301561,"byte_end":301571,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryFlatten","qualname":"::stream::try_stream::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9306},{"krate":0,"index":9307},{"krate":0,"index":9308}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9332},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":303720,"byte_end":303730,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":9336},{"krate":0,"index":9335}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":303641,"byte_end":303708,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":303609,"byte_end":303623,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9357},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":303720,"byte_end":303730,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryCollect","qualname":"::stream::try_stream::try_collect::_::__TryCollect","value":"__TryCollect {  }","parent":null,"children":[{"krate":0,"index":9361},{"krate":0,"index":9362}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9388},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":305144,"byte_end":305153,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":9391},{"krate":0,"index":9390}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":305065,"byte_end":305132,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":305033,"byte_end":305047,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9409},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":305144,"byte_end":305153,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"__TryConcat","qualname":"::stream::try_stream::try_concat::_::__TryConcat","value":"__TryConcat {  }","parent":null,"children":[{"krate":0,"index":9412},{"krate":0,"index":9413}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9433},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":306601,"byte_end":306608,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":9440},{"krate":0,"index":9438},{"krate":0,"index":9439},{"krate":0,"index":9441}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":306522,"byte_end":306589,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":306507,"byte_end":306521,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9472},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":306601,"byte_end":306608,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__TryFold","qualname":"::stream::try_stream::try_fold::_::__TryFold","value":"__TryFold {  }","parent":null,"children":[{"krate":0,"index":9478},{"krate":0,"index":9479},{"krate":0,"index":9480}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2274},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311110,"byte_end":311120,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309253,"byte_end":309329,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309330,"byte_end":309333,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309334,"byte_end":309410,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309411,"byte_end":309481,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309482,"byte_end":309541,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309542,"byte_end":309545,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309546,"byte_end":309624,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309625,"byte_end":309702,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309703,"byte_end":309767,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309768,"byte_end":309771,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309772,"byte_end":309844,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309845,"byte_end":309923,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309924,"byte_end":309953,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309954,"byte_end":309957,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":309958,"byte_end":310035,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310036,"byte_end":310100,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310101,"byte_end":310153,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310154,"byte_end":310157,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310158,"byte_end":310235,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310236,"byte_end":310308,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310309,"byte_end":310378,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310379,"byte_end":310457,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310458,"byte_end":310461,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310462,"byte_end":310475,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310476,"byte_end":310479,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310480,"byte_end":310487,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310488,"byte_end":310521,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310522,"byte_end":310545,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310546,"byte_end":310587,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310588,"byte_end":310634,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310635,"byte_end":310638,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310639,"byte_end":310698,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310699,"byte_end":310721,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310722,"byte_end":310756,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310757,"byte_end":310766,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310767,"byte_end":310770,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310771,"byte_end":310794,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310795,"byte_end":310834,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310835,"byte_end":310871,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310872,"byte_end":310915,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310916,"byte_end":310932,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310933,"byte_end":310953,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310954,"byte_end":310963,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310964,"byte_end":310971,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310972,"byte_end":310975,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":310976,"byte_end":311041,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311042,"byte_end":311084,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311085,"byte_end":311094,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311095,"byte_end":311102,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9512},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311454,"byte_end":311463,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9516},{"krate":0,"index":9517},{"krate":0,"index":9518}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311394,"byte_end":311442,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311379,"byte_end":311393,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9544},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311454,"byte_end":311463,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"__TryUnfold","qualname":"::stream::try_stream::try_unfold::_::__TryUnfold","value":"__TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9549},{"krate":0,"index":9550}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9577},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":313414,"byte_end":313426,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9584},{"krate":0,"index":9581},{"krate":0,"index":9585},{"krate":0,"index":9582},{"krate":0,"index":9583}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":313354,"byte_end":313402,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":313339,"byte_end":313353,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9615},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":313414,"byte_end":313426,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::_::__TrySkipWhile","value":"__TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9620},{"krate":0,"index":9621},{"krate":0,"index":9622}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11450},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8412038,"byte_end":8412056,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11454},{"krate":0,"index":11452},{"krate":0,"index":11453}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8411978,"byte_end":8412026,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8411946,"byte_end":8411960,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11474},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8412038,"byte_end":8412056,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"__TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::_::__TryBufferUnordered","value":"__TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11477},{"krate":0,"index":11478}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11382},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8414645,"byte_end":8414665,"line_start":16,"line_end":16,"column_start":12,"column_end":32},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11389},{"krate":0,"index":11386},{"krate":0,"index":11387},{"krate":0,"index":11388}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8414566,"byte_end":8414633,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8414551,"byte_end":8414565,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11417},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8414645,"byte_end":8414665,"line_start":16,"line_end":16,"column_start":12,"column_end":32},"name":"__TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::_::__TryForEachConcurrent","value":"__TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11422},{"krate":0,"index":11423}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9723},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":317043,"byte_end":317056,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":9725},{"krate":0,"index":9726}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":316881,"byte_end":316965,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":316983,"byte_end":317031,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2364},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258758,"byte_end":258770,"line_start":131,"line_end":131,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2367},{"krate":0,"index":2370},{"krate":0,"index":2373},{"krate":0,"index":2376},{"krate":0,"index":2379},{"krate":0,"index":2381},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2388},{"krate":0,"index":2391},{"krate":0,"index":2395},{"krate":0,"index":2397},{"krate":0,"index":2400},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258696,"byte_end":258747,"line_start":130,"line_end":130,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259312,"byte_end":259320,"line_start":149,"line_end":149,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258788,"byte_end":258862,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258867,"byte_end":258893,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258898,"byte_end":258901,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258906,"byte_end":258920,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258925,"byte_end":258928,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258933,"byte_end":258940,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258945,"byte_end":258986,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258991,"byte_end":259037,"line_start":139,"line_end":139,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259042,"byte_end":259045,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259050,"byte_end":259070,"line_start":141,"line_end":141,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259075,"byte_end":259120,"line_start":142,"line_end":142,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259125,"byte_end":259156,"line_start":143,"line_end":143,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259161,"byte_end":259164,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259169,"byte_end":259223,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259228,"byte_end":259279,"line_start":146,"line_end":146,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259284,"byte_end":259292,"line_start":147,"line_end":147,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259297,"byte_end":259304,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259975,"byte_end":259981,"line_start":174,"line_end":174,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259455,"byte_end":259528,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259533,"byte_end":259564,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259569,"byte_end":259572,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259577,"byte_end":259591,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259596,"byte_end":259599,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259604,"byte_end":259611,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259616,"byte_end":259657,"line_start":163,"line_end":163,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259662,"byte_end":259708,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259713,"byte_end":259716,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259721,"byte_end":259741,"line_start":166,"line_end":166,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259746,"byte_end":259787,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259792,"byte_end":259823,"line_start":168,"line_end":168,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259828,"byte_end":259831,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259836,"byte_end":259889,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259894,"byte_end":259942,"line_start":171,"line_end":171,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259947,"byte_end":259955,"line_start":172,"line_end":172,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":259960,"byte_end":259967,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260646,"byte_end":260653,"line_start":199,"line_end":199,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260127,"byte_end":260198,"line_start":182,"line_end":182,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260203,"byte_end":260234,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260239,"byte_end":260242,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260247,"byte_end":260261,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260266,"byte_end":260269,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260274,"byte_end":260281,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260286,"byte_end":260327,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260332,"byte_end":260378,"line_start":189,"line_end":189,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260383,"byte_end":260386,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260391,"byte_end":260411,"line_start":191,"line_end":191,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260416,"byte_end":260457,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260462,"byte_end":260494,"line_start":193,"line_end":193,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260499,"byte_end":260502,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260507,"byte_end":260560,"line_start":195,"line_end":195,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260565,"byte_end":260613,"line_start":196,"line_end":196,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260618,"byte_end":260626,"line_start":197,"line_end":197,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260631,"byte_end":260638,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2373},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262217,"byte_end":262225,"line_start":245,"line_end":245,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260804,"byte_end":260880,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260885,"byte_end":260925,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260930,"byte_end":260933,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":260938,"byte_end":261014,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261019,"byte_end":261095,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261100,"byte_end":261173,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261178,"byte_end":261220,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261225,"byte_end":261228,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261233,"byte_end":261306,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261311,"byte_end":261342,"line_start":216,"line_end":216,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261347,"byte_end":261350,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261355,"byte_end":261429,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261434,"byte_end":261508,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261513,"byte_end":261529,"line_start":220,"line_end":220,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261534,"byte_end":261537,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261542,"byte_end":261613,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261618,"byte_end":261644,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261649,"byte_end":261652,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261657,"byte_end":261729,"line_start":225,"line_end":225,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261734,"byte_end":261783,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261788,"byte_end":261791,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261796,"byte_end":261810,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261815,"byte_end":261818,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261823,"byte_end":261830,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261835,"byte_end":261866,"line_start":231,"line_end":231,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261871,"byte_end":261895,"line_start":232,"line_end":232,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261900,"byte_end":261938,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261943,"byte_end":261946,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":261951,"byte_end":262007,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262012,"byte_end":262015,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262020,"byte_end":262055,"line_start":237,"line_end":237,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262060,"byte_end":262099,"line_start":238,"line_end":238,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262104,"byte_end":262128,"line_start":239,"line_end":239,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262133,"byte_end":262149,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262154,"byte_end":262170,"line_start":241,"line_end":241,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262175,"byte_end":262185,"line_start":242,"line_end":242,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262190,"byte_end":262197,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262202,"byte_end":262209,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2376},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263328,"byte_end":263335,"line_start":271,"line_end":271,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262429,"byte_end":262494,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262499,"byte_end":262548,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262553,"byte_end":262556,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262561,"byte_end":262640,"line_start":257,"line_end":257,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262645,"byte_end":262719,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262724,"byte_end":262800,"line_start":259,"line_end":259,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262805,"byte_end":262850,"line_start":260,"line_end":260,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262855,"byte_end":262858,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262863,"byte_end":262938,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262943,"byte_end":262983,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262988,"byte_end":262991,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":262996,"byte_end":263105,"line_start":265,"line_end":265,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263110,"byte_end":263184,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263189,"byte_end":263205,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263210,"byte_end":263213,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263218,"byte_end":263289,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263294,"byte_end":263320,"line_start":270,"line_end":270,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263837,"byte_end":263847,"line_start":286,"line_end":286,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263534,"byte_end":263608,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263613,"byte_end":263623,"line_start":281,"line_end":281,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263628,"byte_end":263631,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263636,"byte_end":263706,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263711,"byte_end":263787,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263792,"byte_end":263829,"line_start":285,"line_end":285,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264285,"byte_end":264296,"line_start":299,"line_end":299,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":263994,"byte_end":264073,"line_start":294,"line_end":294,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264078,"byte_end":264081,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264086,"byte_end":264156,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264161,"byte_end":264235,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264240,"byte_end":264277,"line_start":298,"line_end":298,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265166,"byte_end":265177,"line_start":328,"line_end":328,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264448,"byte_end":264501,"line_start":307,"line_end":307,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264506,"byte_end":264550,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264555,"byte_end":264558,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264563,"byte_end":264612,"line_start":310,"line_end":310,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264617,"byte_end":264690,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264695,"byte_end":264715,"line_start":312,"line_end":312,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264720,"byte_end":264723,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264728,"byte_end":264742,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264747,"byte_end":264750,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264755,"byte_end":264762,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264767,"byte_end":264826,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264831,"byte_end":264834,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264839,"byte_end":264858,"line_start":319,"line_end":319,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264863,"byte_end":264881,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264886,"byte_end":264958,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264963,"byte_end":264993,"line_start":322,"line_end":322,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":264998,"byte_end":265005,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265010,"byte_end":265084,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265089,"byte_end":265092,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265097,"byte_end":265146,"line_start":326,"line_end":326,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265151,"byte_end":265158,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266021,"byte_end":266029,"line_start":355,"line_end":355,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265282,"byte_end":265356,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265361,"byte_end":265435,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265440,"byte_end":265452,"line_start":337,"line_end":337,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265457,"byte_end":265460,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265465,"byte_end":265532,"line_start":339,"line_end":339,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265537,"byte_end":265609,"line_start":340,"line_end":340,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265614,"byte_end":265653,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265658,"byte_end":265661,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265666,"byte_end":265680,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265685,"byte_end":265688,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265693,"byte_end":265700,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265705,"byte_end":265746,"line_start":346,"line_end":346,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265751,"byte_end":265797,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265802,"byte_end":265805,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265810,"byte_end":265867,"line_start":349,"line_end":349,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265872,"byte_end":265875,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265880,"byte_end":265934,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265939,"byte_end":265988,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":265993,"byte_end":266001,"line_start":353,"line_end":353,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266006,"byte_end":266013,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267322,"byte_end":267334,"line_start":395,"line_end":395,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266137,"byte_end":266206,"line_start":362,"line_end":362,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266211,"byte_end":266267,"line_start":363,"line_end":363,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266272,"byte_end":266275,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266280,"byte_end":266355,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266360,"byte_end":266430,"line_start":366,"line_end":366,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266435,"byte_end":266473,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266478,"byte_end":266481,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266486,"byte_end":266564,"line_start":369,"line_end":369,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266569,"byte_end":266629,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266634,"byte_end":266691,"line_start":371,"line_end":371,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266696,"byte_end":266763,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266768,"byte_end":266798,"line_start":373,"line_end":373,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266803,"byte_end":266806,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266811,"byte_end":266825,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266830,"byte_end":266833,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266838,"byte_end":266845,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266850,"byte_end":266891,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266896,"byte_end":266920,"line_start":379,"line_end":379,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266925,"byte_end":266971,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266976,"byte_end":266979,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":266984,"byte_end":267005,"line_start":382,"line_end":382,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267010,"byte_end":267013,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267018,"byte_end":267023,"line_start":384,"line_end":384,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267028,"byte_end":267089,"line_start":385,"line_end":385,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267094,"byte_end":267116,"line_start":386,"line_end":386,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267121,"byte_end":267185,"line_start":387,"line_end":387,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267190,"byte_end":267201,"line_start":388,"line_end":388,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267206,"byte_end":267245,"line_start":389,"line_end":389,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267250,"byte_end":267255,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267260,"byte_end":267263,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267268,"byte_end":267289,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267294,"byte_end":267302,"line_start":393,"line_end":393,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267307,"byte_end":267314,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268302,"byte_end":268316,"line_start":425,"line_end":425,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267553,"byte_end":267627,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267632,"byte_end":267655,"line_start":405,"line_end":405,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267660,"byte_end":267663,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267668,"byte_end":267699,"line_start":407,"line_end":407,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267704,"byte_end":267781,"line_start":408,"line_end":408,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267786,"byte_end":267815,"line_start":409,"line_end":409,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267820,"byte_end":267823,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267828,"byte_end":267842,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267847,"byte_end":267850,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267855,"byte_end":267862,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267867,"byte_end":267908,"line_start":414,"line_end":414,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267913,"byte_end":267937,"line_start":415,"line_end":415,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267942,"byte_end":267988,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":267993,"byte_end":267996,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268001,"byte_end":268070,"line_start":418,"line_end":418,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268075,"byte_end":268145,"line_start":419,"line_end":419,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268150,"byte_end":268153,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268158,"byte_end":268225,"line_start":421,"line_end":421,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268230,"byte_end":268269,"line_start":422,"line_end":422,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268274,"byte_end":268282,"line_start":423,"line_end":423,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268287,"byte_end":268294,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270224,"byte_end":270247,"line_start":477,"line_end":477,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268542,"byte_end":268624,"line_start":434,"line_end":434,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268629,"byte_end":268703,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268708,"byte_end":268758,"line_start":436,"line_end":436,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268763,"byte_end":268766,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268771,"byte_end":268793,"line_start":438,"line_end":438,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268798,"byte_end":268884,"line_start":439,"line_end":439,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268889,"byte_end":268974,"line_start":440,"line_end":440,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":268979,"byte_end":269007,"line_start":441,"line_end":441,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269012,"byte_end":269015,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269020,"byte_end":269095,"line_start":443,"line_end":443,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269100,"byte_end":269157,"line_start":444,"line_end":444,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269162,"byte_end":269165,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269170,"byte_end":269184,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269189,"byte_end":269192,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269197,"byte_end":269204,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269209,"byte_end":269250,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269255,"byte_end":269289,"line_start":450,"line_end":450,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269294,"byte_end":269351,"line_start":451,"line_end":451,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269356,"byte_end":269359,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269364,"byte_end":269404,"line_start":453,"line_end":453,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269409,"byte_end":269449,"line_start":454,"line_end":454,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269454,"byte_end":269495,"line_start":455,"line_end":455,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269500,"byte_end":269503,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269508,"byte_end":269559,"line_start":457,"line_end":457,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269564,"byte_end":269617,"line_start":458,"line_end":458,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269622,"byte_end":269644,"line_start":459,"line_end":459,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269649,"byte_end":269674,"line_start":460,"line_end":460,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269679,"byte_end":269741,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269746,"byte_end":269761,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269766,"byte_end":269775,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269780,"byte_end":269786,"line_start":464,"line_end":464,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269791,"byte_end":269794,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269799,"byte_end":269825,"line_start":466,"line_end":466,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269830,"byte_end":269897,"line_start":467,"line_end":467,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269902,"byte_end":269916,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269921,"byte_end":269924,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269929,"byte_end":269990,"line_start":470,"line_end":470,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":269995,"byte_end":270023,"line_start":471,"line_end":471,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270028,"byte_end":270078,"line_start":472,"line_end":472,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270083,"byte_end":270091,"line_start":473,"line_end":473,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270096,"byte_end":270103,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270191,"byte_end":270216,"line_start":476,"line_end":476,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271604,"byte_end":271615,"line_start":520,"line_end":520,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270565,"byte_end":270617,"line_start":490,"line_end":490,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270622,"byte_end":270689,"line_start":491,"line_end":491,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270694,"byte_end":270697,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270702,"byte_end":270776,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270781,"byte_end":270862,"line_start":494,"line_end":494,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270867,"byte_end":270937,"line_start":495,"line_end":495,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270942,"byte_end":270945,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":270950,"byte_end":271018,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271023,"byte_end":271026,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271031,"byte_end":271045,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271050,"byte_end":271053,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271058,"byte_end":271065,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271070,"byte_end":271111,"line_start":502,"line_end":502,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271116,"byte_end":271147,"line_start":503,"line_end":503,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271152,"byte_end":271190,"line_start":504,"line_end":504,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271195,"byte_end":271215,"line_start":505,"line_end":505,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271220,"byte_end":271223,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271228,"byte_end":271265,"line_start":507,"line_end":507,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271270,"byte_end":271273,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271278,"byte_end":271305,"line_start":509,"line_end":509,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271310,"byte_end":271334,"line_start":510,"line_end":510,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271339,"byte_end":271385,"line_start":511,"line_end":511,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271390,"byte_end":271399,"line_start":512,"line_end":512,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271404,"byte_end":271447,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271452,"byte_end":271459,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271464,"byte_end":271467,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271472,"byte_end":271535,"line_start":516,"line_end":516,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271540,"byte_end":271571,"line_start":517,"line_end":517,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271576,"byte_end":271584,"line_start":518,"line_end":518,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271589,"byte_end":271596,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273042,"byte_end":273052,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271754,"byte_end":271827,"line_start":527,"line_end":527,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271832,"byte_end":271866,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271871,"byte_end":271874,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271879,"byte_end":271954,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":271959,"byte_end":272034,"line_start":531,"line_end":531,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272039,"byte_end":272112,"line_start":532,"line_end":532,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272117,"byte_end":272188,"line_start":533,"line_end":533,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272193,"byte_end":272243,"line_start":534,"line_end":534,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272248,"byte_end":272251,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272256,"byte_end":272327,"line_start":536,"line_end":536,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272332,"byte_end":272335,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272340,"byte_end":272416,"line_start":538,"line_end":538,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272421,"byte_end":272491,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272496,"byte_end":272521,"line_start":540,"line_end":540,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272526,"byte_end":272529,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272534,"byte_end":272548,"line_start":542,"line_end":542,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272553,"byte_end":272560,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272565,"byte_end":272606,"line_start":544,"line_end":544,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272611,"byte_end":272635,"line_start":545,"line_end":545,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272640,"byte_end":272697,"line_start":546,"line_end":546,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272702,"byte_end":272705,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272710,"byte_end":272790,"line_start":548,"line_end":548,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272795,"byte_end":272838,"line_start":549,"line_end":549,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272843,"byte_end":272876,"line_start":550,"line_end":550,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272881,"byte_end":272888,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272893,"byte_end":272896,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272901,"byte_end":272949,"line_start":553,"line_end":553,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":272954,"byte_end":273009,"line_start":554,"line_end":554,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273014,"byte_end":273022,"line_start":555,"line_end":555,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273027,"byte_end":273034,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274628,"byte_end":274642,"line_start":598,"line_end":598,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273252,"byte_end":273314,"line_start":566,"line_end":566,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273319,"byte_end":273387,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273392,"byte_end":273426,"line_start":568,"line_end":568,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273431,"byte_end":273434,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273439,"byte_end":273514,"line_start":570,"line_end":570,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273519,"byte_end":273594,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273599,"byte_end":273675,"line_start":572,"line_end":572,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273680,"byte_end":273745,"line_start":573,"line_end":573,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273750,"byte_end":273753,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273758,"byte_end":273829,"line_start":575,"line_end":575,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273834,"byte_end":273837,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273842,"byte_end":273918,"line_start":577,"line_end":577,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":273923,"byte_end":273997,"line_start":578,"line_end":578,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274002,"byte_end":274027,"line_start":579,"line_end":579,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274032,"byte_end":274035,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274040,"byte_end":274054,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274059,"byte_end":274066,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274071,"byte_end":274112,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274117,"byte_end":274174,"line_start":584,"line_end":584,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274179,"byte_end":274204,"line_start":585,"line_end":585,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274209,"byte_end":274212,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274217,"byte_end":274287,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274292,"byte_end":274347,"line_start":588,"line_end":588,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274352,"byte_end":274414,"line_start":589,"line_end":589,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274419,"byte_end":274434,"line_start":590,"line_end":590,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274439,"byte_end":274446,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274451,"byte_end":274454,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274459,"byte_end":274480,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274485,"byte_end":274534,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274539,"byte_end":274595,"line_start":595,"line_end":595,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274600,"byte_end":274608,"line_start":596,"line_end":596,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274613,"byte_end":274620,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276290,"byte_end":276301,"line_start":645,"line_end":645,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274875,"byte_end":274940,"line_start":607,"line_end":607,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274945,"byte_end":274948,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":274953,"byte_end":275026,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275031,"byte_end":275104,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275109,"byte_end":275182,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275187,"byte_end":275257,"line_start":612,"line_end":612,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275262,"byte_end":275265,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275270,"byte_end":275284,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275289,"byte_end":275292,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275297,"byte_end":275304,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275309,"byte_end":275350,"line_start":617,"line_end":617,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275355,"byte_end":275386,"line_start":618,"line_end":618,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275391,"byte_end":275442,"line_start":619,"line_end":619,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275447,"byte_end":275467,"line_start":620,"line_end":620,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275472,"byte_end":275475,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275480,"byte_end":275519,"line_start":622,"line_end":622,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275524,"byte_end":275563,"line_start":623,"line_end":623,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275568,"byte_end":275607,"line_start":624,"line_end":624,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275612,"byte_end":275615,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275620,"byte_end":275647,"line_start":626,"line_end":626,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275652,"byte_end":275695,"line_start":627,"line_end":627,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275700,"byte_end":275707,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275712,"byte_end":275739,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275744,"byte_end":275787,"line_start":630,"line_end":630,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275792,"byte_end":275836,"line_start":631,"line_end":631,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275841,"byte_end":275848,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275853,"byte_end":275880,"line_start":633,"line_end":633,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275885,"byte_end":275930,"line_start":634,"line_end":634,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275935,"byte_end":275980,"line_start":635,"line_end":635,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":275985,"byte_end":276029,"line_start":636,"line_end":636,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276034,"byte_end":276041,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276046,"byte_end":276049,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276054,"byte_end":276093,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276098,"byte_end":276147,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276152,"byte_end":276201,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276206,"byte_end":276256,"line_start":642,"line_end":642,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276261,"byte_end":276270,"line_start":643,"line_end":643,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276275,"byte_end":276282,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277781,"byte_end":277789,"line_start":682,"line_end":682,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276494,"byte_end":276564,"line_start":654,"line_end":654,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276569,"byte_end":276629,"line_start":655,"line_end":655,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276634,"byte_end":276637,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276642,"byte_end":276712,"line_start":657,"line_end":657,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276717,"byte_end":276793,"line_start":658,"line_end":658,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276798,"byte_end":276874,"line_start":659,"line_end":659,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276879,"byte_end":276949,"line_start":660,"line_end":660,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276954,"byte_end":276980,"line_start":661,"line_end":661,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276985,"byte_end":276988,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":276993,"byte_end":277073,"line_start":663,"line_end":663,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277078,"byte_end":277147,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277152,"byte_end":277173,"line_start":665,"line_end":665,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277178,"byte_end":277181,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277186,"byte_end":277200,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277205,"byte_end":277208,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277213,"byte_end":277220,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277225,"byte_end":277266,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277271,"byte_end":277317,"line_start":671,"line_end":671,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277322,"byte_end":277325,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277330,"byte_end":277399,"line_start":673,"line_end":673,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277404,"byte_end":277481,"line_start":674,"line_end":674,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277486,"byte_end":277519,"line_start":675,"line_end":675,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277524,"byte_end":277527,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277532,"byte_end":277618,"line_start":677,"line_end":677,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277623,"byte_end":277709,"line_start":678,"line_end":678,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277714,"byte_end":277748,"line_start":679,"line_end":679,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277753,"byte_end":277761,"line_start":680,"line_end":680,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":277766,"byte_end":277773,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279271,"byte_end":279281,"line_start":725,"line_end":725,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278025,"byte_end":278087,"line_start":691,"line_end":691,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278092,"byte_end":278167,"line_start":692,"line_end":692,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278172,"byte_end":278175,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278180,"byte_end":278251,"line_start":694,"line_end":694,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278256,"byte_end":278332,"line_start":695,"line_end":695,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278337,"byte_end":278376,"line_start":696,"line_end":696,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278381,"byte_end":278384,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278389,"byte_end":278475,"line_start":698,"line_end":698,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278480,"byte_end":278483,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278488,"byte_end":278572,"line_start":700,"line_end":700,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278577,"byte_end":278633,"line_start":701,"line_end":701,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278638,"byte_end":278641,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278646,"byte_end":278660,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278665,"byte_end":278668,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278673,"byte_end":278680,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278685,"byte_end":278726,"line_start":706,"line_end":706,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278731,"byte_end":278762,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278767,"byte_end":278805,"line_start":708,"line_end":708,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278810,"byte_end":278830,"line_start":709,"line_end":709,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278835,"byte_end":278838,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278843,"byte_end":278904,"line_start":711,"line_end":711,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278909,"byte_end":278912,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278917,"byte_end":278944,"line_start":713,"line_end":713,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278949,"byte_end":278980,"line_start":714,"line_end":714,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":278985,"byte_end":279011,"line_start":715,"line_end":715,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279016,"byte_end":279086,"line_start":716,"line_end":716,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279091,"byte_end":279100,"line_start":717,"line_end":717,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279105,"byte_end":279112,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279117,"byte_end":279120,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279125,"byte_end":279164,"line_start":720,"line_end":720,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279169,"byte_end":279172,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279177,"byte_end":279237,"line_start":722,"line_end":722,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279242,"byte_end":279251,"line_start":723,"line_end":723,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279256,"byte_end":279263,"line_start":724,"line_end":724,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281984,"byte_end":282004,"line_start":792,"line_end":792,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279484,"byte_end":279550,"line_start":733,"line_end":733,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279555,"byte_end":279558,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279563,"byte_end":279668,"line_start":735,"line_end":735,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279673,"byte_end":279716,"line_start":736,"line_end":736,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279721,"byte_end":279724,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279729,"byte_end":279797,"line_start":738,"line_end":738,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279802,"byte_end":279875,"line_start":739,"line_end":739,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279880,"byte_end":279936,"line_start":740,"line_end":740,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279941,"byte_end":279944,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":279949,"byte_end":280024,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280029,"byte_end":280102,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280107,"byte_end":280172,"line_start":744,"line_end":744,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280177,"byte_end":280180,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280185,"byte_end":280260,"line_start":746,"line_end":746,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280265,"byte_end":280322,"line_start":747,"line_end":747,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280327,"byte_end":280330,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280335,"byte_end":280349,"line_start":749,"line_end":749,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280354,"byte_end":280357,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280362,"byte_end":280414,"line_start":751,"line_end":751,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280419,"byte_end":280426,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280431,"byte_end":280472,"line_start":753,"line_end":753,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280477,"byte_end":280511,"line_start":754,"line_end":754,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280516,"byte_end":280573,"line_start":755,"line_end":755,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280578,"byte_end":280581,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280586,"byte_end":280636,"line_start":757,"line_end":757,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280641,"byte_end":280691,"line_start":758,"line_end":758,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280696,"byte_end":280699,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280704,"byte_end":280779,"line_start":760,"line_end":760,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280784,"byte_end":280787,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280792,"byte_end":280858,"line_start":762,"line_end":762,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280863,"byte_end":280866,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280871,"byte_end":280896,"line_start":764,"line_end":764,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280901,"byte_end":280955,"line_start":765,"line_end":765,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280960,"byte_end":280963,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280968,"byte_end":280993,"line_start":767,"line_end":767,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":280998,"byte_end":281052,"line_start":768,"line_end":768,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281057,"byte_end":281060,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281065,"byte_end":281109,"line_start":770,"line_end":770,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281114,"byte_end":281150,"line_start":771,"line_end":771,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281155,"byte_end":281162,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281167,"byte_end":281170,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281175,"byte_end":281235,"line_start":774,"line_end":774,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281240,"byte_end":281247,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281252,"byte_end":281293,"line_start":776,"line_end":776,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281298,"byte_end":281329,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281334,"byte_end":281385,"line_start":778,"line_end":778,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281390,"byte_end":281393,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281398,"byte_end":281452,"line_start":780,"line_end":780,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281457,"byte_end":281523,"line_start":781,"line_end":781,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281528,"byte_end":281531,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281536,"byte_end":281585,"line_start":783,"line_end":783,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281590,"byte_end":281644,"line_start":784,"line_end":784,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281649,"byte_end":281652,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281657,"byte_end":281710,"line_start":786,"line_end":786,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281715,"byte_end":281787,"line_start":787,"line_end":787,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281792,"byte_end":281851,"line_start":788,"line_end":788,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281856,"byte_end":281863,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":281951,"byte_end":281976,"line_start":791,"line_end":791,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282380,"byte_end":282399,"line_start":804,"line_end":804,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282272,"byte_end":282350,"line_start":802,"line_end":802,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":282355,"byte_end":282372,"line_start":803,"line_end":803,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284589,"byte_end":284604,"line_start":868,"line_end":868,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283417,"byte_end":283499,"line_start":841,"line_end":841,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283504,"byte_end":283507,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283512,"byte_end":283627,"line_start":843,"line_end":843,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283632,"byte_end":283723,"line_start":844,"line_end":844,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283728,"byte_end":283818,"line_start":845,"line_end":845,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283823,"byte_end":283908,"line_start":846,"line_end":846,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283913,"byte_end":283916,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283921,"byte_end":283985,"line_start":848,"line_end":848,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":283990,"byte_end":284047,"line_start":849,"line_end":849,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284052,"byte_end":284055,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284060,"byte_end":284074,"line_start":851,"line_end":851,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284079,"byte_end":284082,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284087,"byte_end":284094,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284099,"byte_end":284140,"line_start":854,"line_end":854,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284145,"byte_end":284191,"line_start":855,"line_end":855,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284196,"byte_end":284230,"line_start":856,"line_end":856,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284235,"byte_end":284238,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284243,"byte_end":284304,"line_start":858,"line_end":858,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284309,"byte_end":284355,"line_start":859,"line_end":859,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284360,"byte_end":284389,"line_start":860,"line_end":860,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284394,"byte_end":284397,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284402,"byte_end":284458,"line_start":862,"line_end":862,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284463,"byte_end":284501,"line_start":863,"line_end":863,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284506,"byte_end":284514,"line_start":864,"line_end":864,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284519,"byte_end":284526,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284531,"byte_end":284553,"line_start":866,"line_end":866,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":284558,"byte_end":284581,"line_start":867,"line_end":867,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":9742},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322335,"byte_end":322339,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":9744}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322220,"byte_end":322257,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322275,"byte_end":322323,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2446},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322857,"byte_end":322861,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322391,"byte_end":322455,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322456,"byte_end":322484,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322485,"byte_end":322488,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322489,"byte_end":322562,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322563,"byte_end":322618,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322619,"byte_end":322622,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322623,"byte_end":322630,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322631,"byte_end":322672,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322673,"byte_end":322716,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322717,"byte_end":322720,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322721,"byte_end":322765,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322766,"byte_end":322831,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322832,"byte_end":322841,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322842,"byte_end":322849,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9748},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323503,"byte_end":323509,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":9750}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323386,"byte_end":323425,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323443,"byte_end":323491,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2464},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":324033,"byte_end":324039,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323531,"byte_end":323591,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323592,"byte_end":323595,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323596,"byte_end":323663,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323664,"byte_end":323736,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323737,"byte_end":323794,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323795,"byte_end":323798,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323799,"byte_end":323806,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323807,"byte_end":323848,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323849,"byte_end":323892,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323893,"byte_end":323896,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323897,"byte_end":323932,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":323933,"byte_end":324007,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":324008,"byte_end":324017,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":324018,"byte_end":324025,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9754},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":324824,"byte_end":324829,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":9756}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":324708,"byte_end":324746,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":324764,"byte_end":324812,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2488},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":324997,"byte_end":325002,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":324867,"byte_end":324915,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":324916,"byte_end":324919,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":324920,"byte_end":324989,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2515},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":325947,"byte_end":325951,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":325640,"byte_end":325681,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":325682,"byte_end":325685,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":325686,"byte_end":325693,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":325694,"byte_end":325735,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":325736,"byte_end":325779,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":325780,"byte_end":325783,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":325784,"byte_end":325828,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":325829,"byte_end":325884,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":325885,"byte_end":325921,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":325922,"byte_end":325931,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":325932,"byte_end":325939,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9760},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":326222,"byte_end":326226,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":9762}],"decl_id":null,"docs":" A stream which emits single element and then EOF.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":326162,"byte_end":326210,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":326130,"byte_end":326144,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9778},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":326222,"byte_end":326226,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"__Once","qualname":"::stream::once::_::__Once","value":"__Once {  }","parent":null,"children":[{"krate":0,"index":9781},{"krate":0,"index":9782}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9802},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327397,"byte_end":327404,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":9804}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327277,"byte_end":327319,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327337,"byte_end":327385,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2539},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327580,"byte_end":327587,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327448,"byte_end":327502,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327503,"byte_end":327506,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327507,"byte_end":327572,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2561},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328293,"byte_end":328299,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2563}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328192,"byte_end":328232,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328233,"byte_end":328281,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2569},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328987,"byte_end":328994,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328499,"byte_end":328572,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328573,"byte_end":328576,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328577,"byte_end":328636,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328637,"byte_end":328640,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328641,"byte_end":328655,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328656,"byte_end":328659,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328660,"byte_end":328667,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328668,"byte_end":328701,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328702,"byte_end":328730,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328731,"byte_end":328734,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328735,"byte_end":328764,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328765,"byte_end":328768,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328769,"byte_end":328833,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328834,"byte_end":328887,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328888,"byte_end":328909,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328910,"byte_end":328963,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328964,"byte_end":328971,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328972,"byte_end":328979,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9808},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":329655,"byte_end":329661,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":9812},{"krate":0,"index":9813},{"krate":0,"index":9811}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":329595,"byte_end":329643,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":329563,"byte_end":329577,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9836},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":329655,"byte_end":329661,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Select","qualname":"::stream::select::_::__Select","value":"__Select {  }","parent":null,"children":[{"krate":0,"index":9840},{"krate":0,"index":9841},{"krate":0,"index":9842}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2594},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330239,"byte_end":330245,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":329763,"byte_end":329831,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":329832,"byte_end":329908,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":329909,"byte_end":329957,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":329958,"byte_end":329961,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":329962,"byte_end":330036,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330037,"byte_end":330106,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330107,"byte_end":330134,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330135,"byte_end":330138,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330139,"byte_end":330210,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330211,"byte_end":330231,"line_start":28,"line_end":28,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330624,"byte_end":330631,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330516,"byte_end":330590,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330595,"byte_end":330612,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330987,"byte_end":330994,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330725,"byte_end":330793,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330798,"byte_end":330829,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330834,"byte_end":330837,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330842,"byte_end":330915,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330920,"byte_end":330975,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":9867},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":331384,"byte_end":331395,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":331837,"byte_end":331847,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":331601,"byte_end":331664,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":331669,"byte_end":331672,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":331677,"byte_end":331749,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":331754,"byte_end":331825,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2630},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":335060,"byte_end":335066,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":333618,"byte_end":333688,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":333689,"byte_end":333692,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":333693,"byte_end":333762,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":333763,"byte_end":333844,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":333845,"byte_end":333876,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":333877,"byte_end":333880,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":333881,"byte_end":333960,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":333961,"byte_end":334040,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334041,"byte_end":334095,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334096,"byte_end":334099,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334100,"byte_end":334180,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334181,"byte_end":334251,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334252,"byte_end":334274,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334275,"byte_end":334278,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334279,"byte_end":334356,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334357,"byte_end":334429,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334430,"byte_end":334507,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334508,"byte_end":334568,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334569,"byte_end":334572,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334573,"byte_end":334586,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334587,"byte_end":334590,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334591,"byte_end":334598,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334599,"byte_end":334640,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334641,"byte_end":334684,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334685,"byte_end":334688,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334689,"byte_end":334744,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334745,"byte_end":334768,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334769,"byte_end":334808,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334809,"byte_end":334846,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334847,"byte_end":334886,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334887,"byte_end":334903,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334904,"byte_end":334920,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334921,"byte_end":334930,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334931,"byte_end":334938,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334939,"byte_end":334942,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334943,"byte_end":334995,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":334996,"byte_end":335034,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":335035,"byte_end":335044,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":335045,"byte_end":335052,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9869},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":335397,"byte_end":335403,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":9873},{"krate":0,"index":9874},{"krate":0,"index":9875}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":335337,"byte_end":335385,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":335322,"byte_end":335336,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9901},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":335397,"byte_end":335403,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"__Unfold","qualname":"::stream::unfold::_::__Unfold","value":"__Unfold {  }","parent":null,"children":[{"krate":0,"index":9906},{"krate":0,"index":9907}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9969},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425448,"byte_end":8425462,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":9971},{"krate":0,"index":9972},{"krate":0,"index":9973},{"krate":0,"index":9974}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423382,"byte_end":8423416,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423417,"byte_end":8423420,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423421,"byte_end":8423500,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423501,"byte_end":8423572,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423573,"byte_end":8423649,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423650,"byte_end":8423698,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423699,"byte_end":8423702,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423703,"byte_end":8423782,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423783,"byte_end":8423858,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423859,"byte_end":8423937,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423938,"byte_end":8424018,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424019,"byte_end":8424048,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424049,"byte_end":8424052,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424053,"byte_end":8424131,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424132,"byte_end":8424206,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424207,"byte_end":8424282,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424283,"byte_end":8424358,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424359,"byte_end":8424434,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424435,"byte_end":8424493,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424494,"byte_end":8424497,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424498,"byte_end":8424571,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424572,"byte_end":8424650,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424651,"byte_end":8424709,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424710,"byte_end":8424783,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424784,"byte_end":8424852,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424853,"byte_end":8424929,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424930,"byte_end":8424998,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8424999,"byte_end":8425052,"line_start":84,"line_end":84,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425053,"byte_end":8425056,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425057,"byte_end":8425123,"line_start":86,"line_end":86,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425124,"byte_end":8425203,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425204,"byte_end":8425251,"line_start":88,"line_end":88,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425252,"byte_end":8425255,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425256,"byte_end":8425329,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425330,"byte_end":8425387,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425388,"byte_end":8425436,"line_start":92,"line_end":92,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":9979},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425970,"byte_end":8425973,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> FuturesOrdered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425750,"byte_end":8425794,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425799,"byte_end":8425802,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425807,"byte_end":8425882,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425887,"byte_end":8425958,"line_start":106,"line_end":106,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":9980},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426495,"byte_end":8426498,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426222,"byte_end":8426279,"line_start":116,"line_end":116,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426284,"byte_end":8426287,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426292,"byte_end":8426355,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426360,"byte_end":8426424,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426429,"byte_end":8426483,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":9981},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426656,"byte_end":8426664,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426593,"byte_end":8426644,"line_start":125,"line_end":125,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":9982},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8427088,"byte_end":8427092,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426769,"byte_end":8426802,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426807,"byte_end":8426810,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426815,"byte_end":8426891,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426896,"byte_end":8426970,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8426975,"byte_end":8427048,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8427053,"byte_end":8427076,"line_start":135,"line_end":135,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":10004},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":10005},{"krate":0,"index":10006},{"krate":0,"index":10007},{"krate":0,"index":10008},{"krate":0,"index":10009},{"krate":0,"index":10010},{"krate":0,"index":10011},{"krate":0,"index":10012},{"krate":0,"index":10013},{"krate":0,"index":10014},{"krate":0,"index":10015},{"krate":0,"index":10016},{"krate":0,"index":10017},{"krate":0,"index":10018},{"krate":0,"index":10019},{"krate":0,"index":10020},{"krate":0,"index":10021},{"krate":0,"index":10022},{"krate":0,"index":13715},{"krate":0,"index":10023},{"krate":0,"index":10024},{"krate":0,"index":13719},{"krate":0,"index":10025},{"krate":0,"index":10026},{"krate":0,"index":10027},{"krate":0,"index":10028},{"krate":0,"index":10029},{"krate":0,"index":13727},{"krate":0,"index":10030},{"krate":0,"index":13729},{"krate":0,"index":10031},{"krate":0,"index":13731},{"krate":0,"index":10032},{"krate":0,"index":13733},{"krate":0,"index":10033},{"krate":0,"index":13735},{"krate":0,"index":10034},{"krate":0,"index":10035},{"krate":0,"index":10036},{"krate":0,"index":10037},{"krate":0,"index":10038},{"krate":0,"index":10039},{"krate":0,"index":10040},{"krate":0,"index":10046},{"krate":0,"index":10084},{"krate":0,"index":10085},{"krate":0,"index":13755},{"krate":0,"index":10086},{"krate":0,"index":13757},{"krate":0,"index":10087},{"krate":0,"index":10088},{"krate":0,"index":10089},{"krate":0,"index":10130},{"krate":0,"index":10131},{"krate":0,"index":10167},{"krate":0,"index":10168},{"krate":0,"index":10169},{"krate":0,"index":10170},{"krate":0,"index":10171},{"krate":0,"index":10176},{"krate":0,"index":10178},{"krate":0,"index":10180},{"krate":0,"index":10182},{"krate":0,"index":10184},{"krate":0,"index":10186},{"krate":0,"index":10189},{"krate":0,"index":10204},{"krate":0,"index":10217},{"krate":0,"index":10220},{"krate":0,"index":10223},{"krate":0,"index":10228},{"krate":0,"index":10231}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":139089,"byte_end":139114,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"! An unbounded set of futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8429343,"byte_end":8429375,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8429376,"byte_end":8429379,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8429380,"byte_end":8429455,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8429456,"byte_end":8429513,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10287},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8455762,"byte_end":8455772,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":10290},{"krate":0,"index":10291},{"krate":0,"index":10292}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8455691,"byte_end":8455750,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10297},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8456008,"byte_end":8456015,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8455937,"byte_end":8455996,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10306},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8456157,"byte_end":8456167,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":10309},{"krate":0,"index":10310},{"krate":0,"index":10311},{"krate":0,"index":10312}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8456084,"byte_end":8456145,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":10317},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8456454,"byte_end":8456458,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8456377,"byte_end":8456442,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":10171},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432227,"byte_end":8432243,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":10173},{"krate":0,"index":10174},{"krate":0,"index":10175}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431132,"byte_end":8431185,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431186,"byte_end":8431189,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431190,"byte_end":8431258,"line_start":52,"line_end":52,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431259,"byte_end":8431332,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431333,"byte_end":8431409,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431410,"byte_end":8431454,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431455,"byte_end":8431458,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431459,"byte_end":8431537,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431538,"byte_end":8431596,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431597,"byte_end":8431661,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431662,"byte_end":8431715,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431716,"byte_end":8431795,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431796,"byte_end":8431825,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431826,"byte_end":8431829,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431830,"byte_end":8431900,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431901,"byte_end":8431978,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8431979,"byte_end":8432030,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432031,"byte_end":8432034,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432035,"byte_end":8432108,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432109,"byte_end":8432166,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432167,"byte_end":8432215,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10191},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8434913,"byte_end":8434916,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> FuturesUnordered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8434642,"byte_end":8434691,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8434696,"byte_end":8434699,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8434704,"byte_end":8434771,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8434776,"byte_end":8434850,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8434855,"byte_end":8434901,"line_start":135,"line_end":135,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":10192},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8435940,"byte_end":8435943,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8435802,"byte_end":8435857,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8435862,"byte_end":8435865,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8435870,"byte_end":8435928,"line_start":163,"line_end":163,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10193},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8436107,"byte_end":8436115,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8436045,"byte_end":8436095,"line_start":169,"line_end":169,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":10194},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8436698,"byte_end":8436702,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8436328,"byte_end":8436359,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8436364,"byte_end":8436367,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8436372,"byte_end":8436442,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8436447,"byte_end":8436533,"line_start":179,"line_end":179,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8436538,"byte_end":8436614,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8436619,"byte_end":8436686,"line_start":181,"line_end":181,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10195},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8437977,"byte_end":8437981,"line_start":210,"line_end":210,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8437895,"byte_end":8437965,"line_start":209,"line_end":209,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":10197},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8438525,"byte_end":8438533,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8438444,"byte_end":8438513,"line_start":226,"line_end":226,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":10198},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8438723,"byte_end":8438735,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8438642,"byte_end":8438711,"line_start":231,"line_end":231,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":10252},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467750,"byte_end":8467759,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10254}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467126,"byte_end":8467157,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467158,"byte_end":8467161,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467162,"byte_end":8467233,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467234,"byte_end":8467271,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467272,"byte_end":8467275,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467276,"byte_end":8467342,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467343,"byte_end":8467414,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467415,"byte_end":8467495,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467496,"byte_end":8467499,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467500,"byte_end":8467561,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467562,"byte_end":8467636,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467637,"byte_end":8467689,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467690,"byte_end":8467738,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10260},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468216,"byte_end":8468219,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> SelectAll<St>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468016,"byte_end":8468055,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468060,"byte_end":8468063,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468068,"byte_end":8468138,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468143,"byte_end":8468204,"line_start":39,"line_end":39,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":10261},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468443,"byte_end":8468446,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468305,"byte_end":8468360,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468365,"byte_end":8468368,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468373,"byte_end":8468431,"line_start":46,"line_end":46,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10262},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468562,"byte_end":8468570,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468501,"byte_end":8468550,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":10263},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468932,"byte_end":8468936,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468629,"byte_end":8468660,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468665,"byte_end":8468668,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468673,"byte_end":8468745,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468750,"byte_end":8468824,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468829,"byte_end":8468897,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8468902,"byte_end":8468920,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":10274},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470712,"byte_end":8470722,"line_start":116,"line_end":116,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470091,"byte_end":8470165,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470166,"byte_end":8470169,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470170,"byte_end":8470249,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470250,"byte_end":8470301,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470302,"byte_end":8470376,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470377,"byte_end":8470436,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470437,"byte_end":8470440,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470441,"byte_end":8470513,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470514,"byte_end":8470564,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470565,"byte_end":8470568,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470569,"byte_end":8470646,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470647,"byte_end":8470704,"line_start":115,"line_end":115,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":2658},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":10326},{"krate":0,"index":10327},{"krate":0,"index":10328},{"krate":0,"index":10329},{"krate":0,"index":10330},{"krate":0,"index":10331},{"krate":0,"index":2659},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2696}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"! Task notification","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":336845,"byte_end":336866,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2673},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338056,"byte_end":338064,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":2674}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338013,"byte_end":338045,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":339061,"byte_end":339066,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338078,"byte_end":338143,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338148,"byte_end":338163,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338168,"byte_end":338171,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338176,"byte_end":338246,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338251,"byte_end":338270,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338275,"byte_end":338278,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338283,"byte_end":338352,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338357,"byte_end":338430,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338435,"byte_end":338474,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338479,"byte_end":338482,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338487,"byte_end":338553,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338558,"byte_end":338624,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338629,"byte_end":338700,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338705,"byte_end":338761,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338766,"byte_end":338769,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338774,"byte_end":338781,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338786,"byte_end":338824,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338829,"byte_end":338861,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338866,"byte_end":338869,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338874,"byte_end":338920,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338925,"byte_end":338928,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338933,"byte_end":338970,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338975,"byte_end":339011,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":339016,"byte_end":339023,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":339028,"byte_end":339053,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":2676},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":340711,"byte_end":340724,"line_start":95,"line_end":95,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":2677}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":340663,"byte_end":340700,"line_start":94,"line_end":94,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341767,"byte_end":341778,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":2676},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":340743,"byte_end":340808,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":340813,"byte_end":340828,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":340833,"byte_end":340836,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":340841,"byte_end":340911,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":340916,"byte_end":340935,"line_start":100,"line_end":100,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":340940,"byte_end":340943,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":340948,"byte_end":341017,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341022,"byte_end":341095,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341100,"byte_end":341139,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341144,"byte_end":341147,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341152,"byte_end":341218,"line_start":106,"line_end":106,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341223,"byte_end":341289,"line_start":107,"line_end":107,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341294,"byte_end":341365,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341370,"byte_end":341426,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341431,"byte_end":341434,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341439,"byte_end":341446,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341451,"byte_end":341488,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341493,"byte_end":341530,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341535,"byte_end":341538,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341543,"byte_end":341579,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341584,"byte_end":341621,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341626,"byte_end":341629,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341634,"byte_end":341671,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341676,"byte_end":341717,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341722,"byte_end":341729,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":341734,"byte_end":341759,"line_start":121,"line_end":121,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":2697},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","parent":null,"children":[{"krate":0,"index":2698}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"! Definition of the `Never` type,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343128,"byte_end":343163,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"! a stand-in for the `!` type until it becomes stable.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343164,"byte_end":343220,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2698},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343857,"byte_end":343862,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343222,"byte_end":343257,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343258,"byte_end":343261,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343262,"byte_end":343337,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343338,"byte_end":343375,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343376,"byte_end":343379,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343380,"byte_end":343444,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343445,"byte_end":343448,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343449,"byte_end":343520,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343521,"byte_end":343572,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343573,"byte_end":343665,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343666,"byte_end":343669,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343670,"byte_end":343741,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":343742,"byte_end":343847,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":2699},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2715},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3152},{"krate":0,"index":3153},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":14373},{"krate":0,"index":3356},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3477},{"krate":0,"index":3479},{"krate":0,"index":3488},{"krate":0,"index":3490},{"krate":0,"index":3492},{"krate":0,"index":3494},{"krate":0,"index":3500}],"decl_id":null,"docs":" IO","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12062,"byte_end":12084,"line_start":322,"line_end":322,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12085,"byte_end":12108,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"! IO","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":343893,"byte_end":343899,"line_start":1,"line_end":1,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":343900,"byte_end":343903,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":343904,"byte_end":343967,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"! `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` types, including","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":343968,"byte_end":344047,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! the `AsyncReadExt`, `AsyncWriteExt`, `AsyncSeekExt`, and `AsyncBufReadExt`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344048,"byte_end":344126,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"! traits which add methods to the `AsyncRead`, `AsyncWrite`, `AsyncSeek`,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344127,"byte_end":344202,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"! and `AsyncBufRead` types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344203,"byte_end":344232,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344233,"byte_end":344236,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `io` and `std` features of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344237,"byte_end":344311,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":344312,"byte_end":344369,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10332},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367891,"byte_end":367901,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367242,"byte_end":367307,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367308,"byte_end":367357,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367358,"byte_end":367429,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367430,"byte_end":367433,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367434,"byte_end":367510,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367511,"byte_end":367582,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367583,"byte_end":367651,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367652,"byte_end":367720,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367721,"byte_end":367796,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367797,"byte_end":367811,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":368465,"byte_end":368468,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":368395,"byte_end":368453,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":368583,"byte_end":368590,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":368520,"byte_end":368571,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":368704,"byte_end":368711,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":368633,"byte_end":368692,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":368832,"byte_end":368842,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":368766,"byte_end":368820,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":10369},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":373771,"byte_end":373780,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10374},{"krate":0,"index":10371},{"krate":0,"index":10372},{"krate":0,"index":10373}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":373745,"byte_end":373759,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10396},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":373771,"byte_end":373780,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"__BufReader","qualname":"::io::buf_reader::_::__BufReader","value":"__BufReader {  }","parent":null,"children":[{"krate":0,"index":10399},{"krate":0,"index":10400}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":374049,"byte_end":374052,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":373907,"byte_end":373999,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":374004,"byte_end":374037,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":374214,"byte_end":374227,"line_start":47,"line_end":47,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":374137,"byte_end":374202,"line_start":46,"line_end":46,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":374810,"byte_end":374816,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":374650,"byte_end":374706,"line_start":63,"line_end":63,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":374711,"byte_end":374714,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":374719,"byte_end":374798,"line_start":65,"line_end":65,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10426},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":381799,"byte_end":381808,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10430},{"krate":0,"index":10428},{"krate":0,"index":10429}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":381773,"byte_end":381787,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10450},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":381799,"byte_end":381808,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"__BufWriter","qualname":"::io::buf_writer::_::__BufWriter","value":"__BufWriter {  }","parent":null,"children":[{"krate":0,"index":10453},{"krate":0,"index":10454}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":382061,"byte_end":382064,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":381919,"byte_end":382011,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":382016,"byte_end":382049,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":382226,"byte_end":382239,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":382149,"byte_end":382214,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":383409,"byte_end":383415,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":383341,"byte_end":383397,"line_start":86,"line_end":86,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10479},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386264,"byte_end":386269,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10483},{"krate":0,"index":10484},{"krate":0,"index":10482}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386204,"byte_end":386252,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386189,"byte_end":386203,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10507},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386264,"byte_end":386269,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::io::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":10511},{"krate":0,"index":10512},{"krate":0,"index":10513}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2884},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386654,"byte_end":386661,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386580,"byte_end":386642,"line_start":34,"line_end":34,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386993,"byte_end":387000,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386730,"byte_end":386800,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386805,"byte_end":386808,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386813,"byte_end":386886,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386891,"byte_end":386964,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386969,"byte_end":386981,"line_start":43,"line_end":43,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":387359,"byte_end":387370,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":387089,"byte_end":387166,"line_start":48,"line_end":48,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":387171,"byte_end":387174,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":387179,"byte_end":387252,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":387257,"byte_end":387330,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":387335,"byte_end":387347,"line_start":52,"line_end":52,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":387670,"byte_end":387680,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":387602,"byte_end":387658,"line_start":60,"line_end":60,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10539},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":390679,"byte_end":390684,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":10542}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":390517,"byte_end":390582,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":390600,"byte_end":390667,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":2933},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392233,"byte_end":392237,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W: ?Sized>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391384,"byte_end":391459,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391460,"byte_end":391463,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391464,"byte_end":391547,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391548,"byte_end":391628,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391629,"byte_end":391701,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391702,"byte_end":391715,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391716,"byte_end":391719,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391720,"byte_end":391767,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391768,"byte_end":391771,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391772,"byte_end":391786,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391787,"byte_end":391790,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391791,"byte_end":391798,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391799,"byte_end":391840,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391841,"byte_end":391892,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391893,"byte_end":391896,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391897,"byte_end":391940,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391941,"byte_end":391988,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391989,"byte_end":391992,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":391993,"byte_end":392046,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392047,"byte_end":392073,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392074,"byte_end":392077,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392078,"byte_end":392103,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392104,"byte_end":392157,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392158,"byte_end":392217,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392218,"byte_end":392225,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10547},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392579,"byte_end":392583,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":10551}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392500,"byte_end":392567,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392468,"byte_end":392482,"line_start":45,"line_end":45,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10573},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392579,"byte_end":392583,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"__Copy","qualname":"::io::copy::_::__Copy","value":"__Copy {  }","parent":null,"children":[{"krate":0,"index":10578},{"krate":0,"index":10579},{"krate":0,"index":10580}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2957},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393950,"byte_end":393958,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W: ?Sized>(R, &mut W) -> CopyBuf<, R, W> where\nR: AsyncBufRead, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393094,"byte_end":393169,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393170,"byte_end":393173,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393174,"byte_end":393260,"line_start":10,"line_end":10,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393261,"byte_end":393341,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393342,"byte_end":393414,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393415,"byte_end":393428,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393429,"byte_end":393432,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393433,"byte_end":393480,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393481,"byte_end":393484,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393485,"byte_end":393499,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393500,"byte_end":393503,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393504,"byte_end":393511,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393512,"byte_end":393553,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393554,"byte_end":393605,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393606,"byte_end":393609,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393610,"byte_end":393653,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393654,"byte_end":393701,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393702,"byte_end":393705,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393706,"byte_end":393763,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393764,"byte_end":393790,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393791,"byte_end":393794,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393795,"byte_end":393820,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393821,"byte_end":393874,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393875,"byte_end":393934,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":393935,"byte_end":393942,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10611},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":394304,"byte_end":394311,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":10617},{"krate":0,"index":10615},{"krate":0,"index":10616}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":394225,"byte_end":394292,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":394193,"byte_end":394207,"line_start":46,"line_end":46,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10643},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":394304,"byte_end":394311,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"__CopyBuf","qualname":"::io::copy_buf::_::__CopyBuf","value":"__CopyBuf {  }","parent":null,"children":[{"krate":0,"index":10648},{"krate":0,"index":10649},{"krate":0,"index":10650}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10682},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396259,"byte_end":396265,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":10684}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":395484,"byte_end":395547,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":395548,"byte_end":395581,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":395582,"byte_end":395585,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":395586,"byte_end":395654,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":395655,"byte_end":395737,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":395738,"byte_end":395817,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":395818,"byte_end":395843,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":395844,"byte_end":395847,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":395848,"byte_end":395922,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":395923,"byte_end":395990,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":395991,"byte_end":396024,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396025,"byte_end":396028,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396029,"byte_end":396068,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396069,"byte_end":396108,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396109,"byte_end":396150,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396151,"byte_end":396214,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2983},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396845,"byte_end":396848,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396324,"byte_end":396399,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396404,"byte_end":396407,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396412,"byte_end":396486,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396491,"byte_end":396559,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396564,"byte_end":396602,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396607,"byte_end":396610,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396615,"byte_end":396629,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396634,"byte_end":396637,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396642,"byte_end":396649,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396654,"byte_end":396682,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396687,"byte_end":396690,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396695,"byte_end":396734,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396739,"byte_end":396787,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396792,"byte_end":396821,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396826,"byte_end":396833,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397300,"byte_end":397310,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396955,"byte_end":397012,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397017,"byte_end":397020,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397025,"byte_end":397039,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397044,"byte_end":397047,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397052,"byte_end":397059,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397064,"byte_end":397092,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397097,"byte_end":397100,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397105,"byte_end":397144,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397149,"byte_end":397197,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397202,"byte_end":397231,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397236,"byte_end":397239,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397244,"byte_end":397276,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397281,"byte_end":397288,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397718,"byte_end":397725,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397367,"byte_end":397427,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397432,"byte_end":397435,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397440,"byte_end":397454,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397459,"byte_end":397462,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397467,"byte_end":397474,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397479,"byte_end":397507,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397512,"byte_end":397515,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397520,"byte_end":397559,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397564,"byte_end":397612,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397617,"byte_end":397646,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397651,"byte_end":397654,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397659,"byte_end":397694,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397699,"byte_end":397706,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398297,"byte_end":398304,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397781,"byte_end":397849,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397854,"byte_end":397857,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397862,"byte_end":397935,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":397940,"byte_end":398002,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398007,"byte_end":398010,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398015,"byte_end":398029,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398034,"byte_end":398037,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398042,"byte_end":398049,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398054,"byte_end":398082,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398087,"byte_end":398090,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398095,"byte_end":398138,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398143,"byte_end":398191,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398196,"byte_end":398225,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398230,"byte_end":398233,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398238,"byte_end":398273,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398278,"byte_end":398285,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2987},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398962,"byte_end":398970,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398368,"byte_end":398416,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398421,"byte_end":398424,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398429,"byte_end":398443,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398448,"byte_end":398451,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398456,"byte_end":398463,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398468,"byte_end":398509,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398514,"byte_end":398568,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398573,"byte_end":398576,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398581,"byte_end":398633,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398638,"byte_end":398641,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398646,"byte_end":398681,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398686,"byte_end":398689,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398694,"byte_end":398737,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398742,"byte_end":398777,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398782,"byte_end":398785,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398790,"byte_end":398834,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398839,"byte_end":398874,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398879,"byte_end":398938,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":398943,"byte_end":398950,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2988},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399438,"byte_end":399450,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399028,"byte_end":399065,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399070,"byte_end":399073,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399078,"byte_end":399092,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399097,"byte_end":399100,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399105,"byte_end":399112,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399117,"byte_end":399145,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399150,"byte_end":399153,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399158,"byte_end":399210,"line_start":135,"line_end":135,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399215,"byte_end":399218,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399223,"byte_end":399258,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399263,"byte_end":399266,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399271,"byte_end":399296,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399301,"byte_end":399336,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399341,"byte_end":399344,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399349,"byte_end":399374,"line_start":142,"line_end":142,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399379,"byte_end":399414,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399419,"byte_end":399426,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3016},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402231,"byte_end":402236,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3017}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402130,"byte_end":402170,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402171,"byte_end":402219,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3018},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402796,"byte_end":402801,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402257,"byte_end":402304,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402305,"byte_end":402308,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402309,"byte_end":402381,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402382,"byte_end":402385,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402386,"byte_end":402400,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402401,"byte_end":402404,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402405,"byte_end":402470,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402471,"byte_end":402474,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402475,"byte_end":402482,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402483,"byte_end":402524,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402525,"byte_end":402567,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402568,"byte_end":402571,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402572,"byte_end":402607,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402608,"byte_end":402641,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402642,"byte_end":402688,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402689,"byte_end":402720,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402721,"byte_end":402780,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402781,"byte_end":402788,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10710},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":403859,"byte_end":403864,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10713}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":403697,"byte_end":403762,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":403780,"byte_end":403847,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10718},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":404751,"byte_end":404756,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10723},{"krate":0,"index":10720},{"krate":0,"index":10721},{"krate":0,"index":10722}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":404691,"byte_end":404739,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":404659,"byte_end":404673,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10745},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":404751,"byte_end":404756,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"__Lines","qualname":"::io::lines::_::__Lines","value":"__Lines {  }","parent":null,"children":[{"krate":0,"index":10748},{"krate":0,"index":10749}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10769},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":406000,"byte_end":406004,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":10772},{"krate":0,"index":10773}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":405841,"byte_end":405903,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":405921,"byte_end":405988,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10778},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":406896,"byte_end":406908,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":10781},{"krate":0,"index":10782}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":406719,"byte_end":406799,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":406817,"byte_end":406884,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10787},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":407849,"byte_end":407858,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":10790},{"krate":0,"index":10791}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":407678,"byte_end":407752,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":407770,"byte_end":407837,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10796},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":409177,"byte_end":409185,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":10799},{"krate":0,"index":10800},{"krate":0,"index":10801},{"krate":0,"index":10802}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":409005,"byte_end":409080,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":409098,"byte_end":409165,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10807},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":411026,"byte_end":411035,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":10810},{"krate":0,"index":10811},{"krate":0,"index":10812}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":410853,"byte_end":410929,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":410947,"byte_end":411014,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10817},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":413767,"byte_end":413779,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":10820},{"krate":0,"index":10821},{"krate":0,"index":10822},{"krate":0,"index":10823}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":413588,"byte_end":413670,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":413688,"byte_end":413755,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10828},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":415697,"byte_end":415706,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":10831},{"krate":0,"index":10832},{"krate":0,"index":10833},{"krate":0,"index":10834}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":415523,"byte_end":415600,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":415618,"byte_end":415685,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3240},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417460,"byte_end":417466,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3241}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417358,"byte_end":417399,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417400,"byte_end":417448,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3242},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":418023,"byte_end":418029,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417486,"byte_end":417555,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417556,"byte_end":417559,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417560,"byte_end":417640,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417641,"byte_end":417660,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417661,"byte_end":417664,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417665,"byte_end":417679,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417680,"byte_end":417683,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417684,"byte_end":417691,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417692,"byte_end":417733,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417734,"byte_end":417776,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417777,"byte_end":417780,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417781,"byte_end":417809,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417810,"byte_end":417849,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417850,"byte_end":417900,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417901,"byte_end":417947,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":417948,"byte_end":418007,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":418008,"byte_end":418015,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10839},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":419301,"byte_end":419305,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":10842},{"krate":0,"index":10843}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":419138,"byte_end":419204,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":419222,"byte_end":419289,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3282},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420075,"byte_end":420079,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3283}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":419975,"byte_end":420014,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420015,"byte_end":420063,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3284},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420687,"byte_end":420691,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420100,"byte_end":420177,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420178,"byte_end":420181,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420182,"byte_end":420277,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420278,"byte_end":420335,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420336,"byte_end":420339,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420340,"byte_end":420354,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420355,"byte_end":420358,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420359,"byte_end":420370,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420371,"byte_end":420412,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420413,"byte_end":420456,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420457,"byte_end":420460,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420461,"byte_end":420498,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420499,"byte_end":420531,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420532,"byte_end":420581,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420582,"byte_end":420611,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420612,"byte_end":420671,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420672,"byte_end":420679,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10848},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":421853,"byte_end":421861,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":10850}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":421756,"byte_end":421824,"line_start":8,"line_end":8,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":10854},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":421990,"byte_end":421999,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":10856}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":421893,"byte_end":421961,"line_start":14,"line_end":14,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":422745,"byte_end":422752,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":422499,"byte_end":422576,"line_start":37,"line_end":37,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":422581,"byte_end":422652,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":422657,"byte_end":422733,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":423252,"byte_end":423259,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":423006,"byte_end":423083,"line_start":48,"line_end":48,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":423088,"byte_end":423159,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":423164,"byte_end":423240,"line_start":50,"line_end":50,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3339},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":424771,"byte_end":424783,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":424615,"byte_end":424690,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":424691,"byte_end":424759,"line_start":93,"line_end":93,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3342},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":424787,"byte_end":424802,"line_start":94,"line_end":94,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":3339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3343},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":424804,"byte_end":424820,"line_start":94,"line_end":94,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":3339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10860},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":425720,"byte_end":425724,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10863},{"krate":0,"index":10862}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":425641,"byte_end":425708,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":425609,"byte_end":425623,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10881},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":425720,"byte_end":425724,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::io::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":10884},{"krate":0,"index":10885}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426715,"byte_end":426720,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":425962,"byte_end":426015,"line_start":25,"line_end":25,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426020,"byte_end":426066,"line_start":26,"line_end":26,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426071,"byte_end":426074,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426079,"byte_end":426089,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426094,"byte_end":426097,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426102,"byte_end":426179,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426184,"byte_end":426253,"line_start":31,"line_end":31,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426258,"byte_end":426261,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426266,"byte_end":426280,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426285,"byte_end":426288,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426293,"byte_end":426300,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426305,"byte_end":426346,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426351,"byte_end":426395,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426400,"byte_end":426403,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426408,"byte_end":426455,"line_start":39,"line_end":39,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426460,"byte_end":426488,"line_start":40,"line_end":40,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426493,"byte_end":426496,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426501,"byte_end":426535,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426540,"byte_end":426582,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426587,"byte_end":426590,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426595,"byte_end":426627,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426632,"byte_end":426691,"line_start":46,"line_end":46,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426696,"byte_end":426703,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427632,"byte_end":427641,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426768,"byte_end":426839,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426844,"byte_end":426918,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":426923,"byte_end":426998,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427003,"byte_end":427027,"line_start":55,"line_end":55,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427032,"byte_end":427035,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427040,"byte_end":427054,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427059,"byte_end":427062,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427067,"byte_end":427074,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427079,"byte_end":427120,"line_start":60,"line_end":60,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427125,"byte_end":427169,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427174,"byte_end":427177,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427182,"byte_end":427229,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427234,"byte_end":427262,"line_start":64,"line_end":64,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427267,"byte_end":427270,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427275,"byte_end":427309,"line_start":66,"line_end":66,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427314,"byte_end":427356,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427361,"byte_end":427364,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427369,"byte_end":427390,"line_start":69,"line_end":69,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427395,"byte_end":427427,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427432,"byte_end":427435,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427440,"byte_end":427463,"line_start":72,"line_end":72,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427468,"byte_end":427510,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427515,"byte_end":427536,"line_start":74,"line_end":74,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427541,"byte_end":427544,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427549,"byte_end":427608,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427613,"byte_end":427620,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":10911},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430315,"byte_end":430321,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":10913},{"krate":0,"index":10914}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":429360,"byte_end":429407,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":429408,"byte_end":429411,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":429412,"byte_end":429488,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":429489,"byte_end":429567,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":429568,"byte_end":429644,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":429645,"byte_end":429720,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":429721,"byte_end":429794,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":429795,"byte_end":429826,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":429827,"byte_end":429830,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":429831,"byte_end":429902,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":429903,"byte_end":429982,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":429983,"byte_end":430010,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430011,"byte_end":430014,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430015,"byte_end":430089,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430090,"byte_end":430164,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430165,"byte_end":430244,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430245,"byte_end":430286,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430630,"byte_end":430633,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430406,"byte_end":430477,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430482,"byte_end":430492,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430497,"byte_end":430500,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430505,"byte_end":430579,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430584,"byte_end":430618,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430845,"byte_end":430852,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430748,"byte_end":430815,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430820,"byte_end":430833,"line_start":40,"line_end":40,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3389},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430997,"byte_end":431004,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430899,"byte_end":430967,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430972,"byte_end":430985,"line_start":46,"line_end":46,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431135,"byte_end":431145,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431063,"byte_end":431123,"line_start":51,"line_end":51,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431286,"byte_end":431291,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431189,"byte_end":431261,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431266,"byte_end":431274,"line_start":57,"line_end":57,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431438,"byte_end":431441,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431346,"byte_end":431413,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431418,"byte_end":431426,"line_start":63,"line_end":63,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431887,"byte_end":431890,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431494,"byte_end":431554,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431559,"byte_end":431562,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431567,"byte_end":431579,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431584,"byte_end":431587,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431592,"byte_end":431665,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431670,"byte_end":431747,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431752,"byte_end":431755,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431760,"byte_end":431817,"line_start":75,"line_end":75,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":431822,"byte_end":431875,"line_start":76,"line_end":76,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10918},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":433077,"byte_end":433082,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":10921},{"krate":0,"index":10922}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":432915,"byte_end":432980,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":432998,"byte_end":433065,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10927},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":433973,"byte_end":433986,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":10930},{"krate":0,"index":10931}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":433793,"byte_end":433876,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":433894,"byte_end":433961,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10936},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":434920,"byte_end":434928,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":10939},{"krate":0,"index":10940}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":434750,"byte_end":434823,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":434841,"byte_end":434908,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":3462},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346884,"byte_end":346896,"line_start":133,"line_end":133,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":3463},{"krate":0,"index":3465},{"krate":0,"index":3467},{"krate":0,"index":3469},{"krate":0,"index":3471},{"krate":0,"index":3473},{"krate":0,"index":3475},{"krate":0,"index":3476}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346802,"byte_end":346873,"line_start":132,"line_end":132,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347749,"byte_end":347754,"line_start":157,"line_end":157,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346914,"byte_end":346979,"line_start":134,"line_end":134,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346984,"byte_end":346987,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346992,"byte_end":347072,"line_start":136,"line_end":136,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347077,"byte_end":347149,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347154,"byte_end":347175,"line_start":138,"line_end":138,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347180,"byte_end":347183,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347188,"byte_end":347202,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347207,"byte_end":347210,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347215,"byte_end":347222,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347227,"byte_end":347268,"line_start":143,"line_end":143,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347273,"byte_end":347317,"line_start":144,"line_end":144,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347322,"byte_end":347325,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347330,"byte_end":347374,"line_start":146,"line_end":146,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347379,"byte_end":347423,"line_start":147,"line_end":147,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347428,"byte_end":347431,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347436,"byte_end":347480,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347485,"byte_end":347517,"line_start":150,"line_end":150,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347522,"byte_end":347525,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347530,"byte_end":347563,"line_start":152,"line_end":152,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347568,"byte_end":347611,"line_start":153,"line_end":153,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347616,"byte_end":347665,"line_start":154,"line_end":154,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347670,"byte_end":347729,"line_start":155,"line_end":155,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347734,"byte_end":347741,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348794,"byte_end":348798,"line_start":189,"line_end":189,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347892,"byte_end":347966,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":347971,"byte_end":348007,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348012,"byte_end":348015,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348020,"byte_end":348098,"line_start":168,"line_end":168,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348103,"byte_end":348130,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348135,"byte_end":348138,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348143,"byte_end":348157,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348162,"byte_end":348165,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348170,"byte_end":348177,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348182,"byte_end":348223,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348228,"byte_end":348272,"line_start":175,"line_end":175,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348277,"byte_end":348280,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348285,"byte_end":348332,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348337,"byte_end":348367,"line_start":178,"line_end":178,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348372,"byte_end":348375,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348380,"byte_end":348432,"line_start":180,"line_end":180,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348437,"byte_end":348440,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348445,"byte_end":348516,"line_start":182,"line_end":182,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348521,"byte_end":348585,"line_start":183,"line_end":183,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348590,"byte_end":348635,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348640,"byte_end":348665,"line_start":185,"line_end":185,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348670,"byte_end":348710,"line_start":186,"line_end":186,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348715,"byte_end":348774,"line_start":187,"line_end":187,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348779,"byte_end":348786,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349165,"byte_end":349178,"line_start":200,"line_end":200,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":348927,"byte_end":349011,"line_start":195,"line_end":195,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349016,"byte_end":349034,"line_start":196,"line_end":196,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349039,"byte_end":349042,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349047,"byte_end":349125,"line_start":198,"line_end":198,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349130,"byte_end":349157,"line_start":199,"line_end":199,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350550,"byte_end":350560,"line_start":243,"line_end":243,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349337,"byte_end":349409,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349414,"byte_end":349472,"line_start":207,"line_end":207,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349477,"byte_end":349480,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349485,"byte_end":349559,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349564,"byte_end":349567,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349572,"byte_end":349649,"line_start":211,"line_end":211,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349654,"byte_end":349676,"line_start":212,"line_end":212,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349681,"byte_end":349684,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349689,"byte_end":349703,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349708,"byte_end":349711,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349716,"byte_end":349723,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349728,"byte_end":349769,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349774,"byte_end":349818,"line_start":218,"line_end":218,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349823,"byte_end":349826,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349831,"byte_end":349878,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349883,"byte_end":349913,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349918,"byte_end":349921,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349926,"byte_end":349968,"line_start":223,"line_end":223,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349973,"byte_end":349976,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":349981,"byte_end":350018,"line_start":225,"line_end":225,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350023,"byte_end":350082,"line_start":226,"line_end":226,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350087,"byte_end":350094,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350099,"byte_end":350102,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350107,"byte_end":350147,"line_start":229,"line_end":229,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350152,"byte_end":350155,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350160,"byte_end":350167,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350172,"byte_end":350213,"line_start":232,"line_end":232,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350218,"byte_end":350268,"line_start":233,"line_end":233,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350273,"byte_end":350276,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350281,"byte_end":350328,"line_start":235,"line_end":235,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350333,"byte_end":350363,"line_start":236,"line_end":236,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350368,"byte_end":350371,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350376,"byte_end":350430,"line_start":238,"line_end":238,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350435,"byte_end":350438,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350443,"byte_end":350516,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350521,"byte_end":350530,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350535,"byte_end":350542,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351352,"byte_end":351363,"line_start":271,"line_end":271,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350722,"byte_end":350795,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350800,"byte_end":350803,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350808,"byte_end":350866,"line_start":254,"line_end":254,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350871,"byte_end":350874,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350879,"byte_end":350893,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350898,"byte_end":350901,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350906,"byte_end":350913,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350918,"byte_end":350959,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":350964,"byte_end":351008,"line_start":260,"line_end":260,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351013,"byte_end":351016,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351021,"byte_end":351068,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351073,"byte_end":351116,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351121,"byte_end":351124,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351129,"byte_end":351184,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351189,"byte_end":351192,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351197,"byte_end":351222,"line_start":267,"line_end":267,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351227,"byte_end":351268,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351273,"byte_end":351332,"line_start":269,"line_end":269,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351337,"byte_end":351344,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352168,"byte_end":352182,"line_start":299,"line_end":299,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351528,"byte_end":351601,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351606,"byte_end":351609,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351614,"byte_end":351672,"line_start":282,"line_end":282,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351677,"byte_end":351680,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351685,"byte_end":351699,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351704,"byte_end":351707,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351712,"byte_end":351719,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351724,"byte_end":351765,"line_start":287,"line_end":287,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351770,"byte_end":351814,"line_start":288,"line_end":288,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351819,"byte_end":351822,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351827,"byte_end":351874,"line_start":290,"line_end":290,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351879,"byte_end":351925,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351930,"byte_end":351933,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":351938,"byte_end":351996,"line_start":293,"line_end":293,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352001,"byte_end":352004,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352009,"byte_end":352034,"line_start":295,"line_end":295,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352039,"byte_end":352084,"line_start":296,"line_end":296,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352089,"byte_end":352148,"line_start":297,"line_end":297,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352153,"byte_end":352160,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353509,"byte_end":353514,"line_start":337,"line_end":337,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352352,"byte_end":352423,"line_start":308,"line_end":308,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352428,"byte_end":352431,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352436,"byte_end":352506,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352511,"byte_end":352536,"line_start":311,"line_end":311,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352541,"byte_end":352544,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352549,"byte_end":352563,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352568,"byte_end":352571,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352576,"byte_end":352583,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352588,"byte_end":352629,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352634,"byte_end":352684,"line_start":317,"line_end":317,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352689,"byte_end":352692,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352697,"byte_end":352767,"line_start":319,"line_end":319,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352772,"byte_end":352842,"line_start":320,"line_end":320,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352847,"byte_end":352898,"line_start":321,"line_end":321,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352903,"byte_end":352906,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352911,"byte_end":352954,"line_start":323,"line_end":323,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":352959,"byte_end":353022,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353027,"byte_end":353074,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353079,"byte_end":353082,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353087,"byte_end":353092,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353097,"byte_end":353168,"line_start":328,"line_end":328,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353173,"byte_end":353225,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353230,"byte_end":353282,"line_start":330,"line_end":330,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353287,"byte_end":353292,"line_start":331,"line_end":331,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353297,"byte_end":353300,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353305,"byte_end":353367,"line_start":333,"line_end":333,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353372,"byte_end":353425,"line_start":334,"line_end":334,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353430,"byte_end":353489,"line_start":335,"line_end":335,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353494,"byte_end":353501,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":354235,"byte_end":354239,"line_start":362,"line_end":362,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353642,"byte_end":353712,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353717,"byte_end":353748,"line_start":344,"line_end":344,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353753,"byte_end":353756,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353761,"byte_end":353775,"line_start":346,"line_end":346,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353780,"byte_end":353783,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353788,"byte_end":353795,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353800,"byte_end":353841,"line_start":349,"line_end":349,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353846,"byte_end":353890,"line_start":350,"line_end":350,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353895,"byte_end":353898,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353903,"byte_end":353950,"line_start":352,"line_end":352,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353955,"byte_end":353983,"line_start":353,"line_end":353,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353988,"byte_end":353991,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":353996,"byte_end":354030,"line_start":355,"line_end":355,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":354035,"byte_end":354077,"line_start":356,"line_end":356,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":354082,"byte_end":354085,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":354090,"byte_end":354111,"line_start":358,"line_end":358,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":354116,"byte_end":354151,"line_start":359,"line_end":359,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":354156,"byte_end":354215,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":354220,"byte_end":354227,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3479},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":354969,"byte_end":354982,"line_start":385,"line_end":385,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3484},{"krate":0,"index":3486}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":354886,"byte_end":354958,"line_start":384,"line_end":384,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355723,"byte_end":355728,"line_start":408,"line_end":408,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":3479},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355001,"byte_end":355066,"line_start":386,"line_end":386,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355071,"byte_end":355074,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355079,"byte_end":355093,"line_start":388,"line_end":388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355098,"byte_end":355101,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355106,"byte_end":355113,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355118,"byte_end":355159,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355164,"byte_end":355213,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355218,"byte_end":355255,"line_start":393,"line_end":393,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355260,"byte_end":355263,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355268,"byte_end":355302,"line_start":395,"line_end":395,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355307,"byte_end":355310,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355315,"byte_end":355320,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355325,"byte_end":355371,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355376,"byte_end":355443,"line_start":399,"line_end":399,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355448,"byte_end":355491,"line_start":400,"line_end":400,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355496,"byte_end":355539,"line_start":401,"line_end":401,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355544,"byte_end":355576,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355581,"byte_end":355586,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355591,"byte_end":355594,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355599,"byte_end":355639,"line_start":405,"line_end":405,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355644,"byte_end":355703,"line_start":406,"line_end":406,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355708,"byte_end":355715,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355901,"byte_end":355906,"line_start":415,"line_end":415,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":3479},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":355828,"byte_end":355893,"line_start":414,"line_end":414,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356212,"byte_end":356217,"line_start":425,"line_end":425,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":3479},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356006,"byte_end":356077,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356082,"byte_end":356085,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356090,"byte_end":356172,"line_start":423,"line_end":423,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356177,"byte_end":356204,"line_start":424,"line_end":424,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356588,"byte_end":356602,"line_start":436,"line_end":436,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":3479},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356344,"byte_end":356430,"line_start":431,"line_end":431,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356435,"byte_end":356453,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356458,"byte_end":356461,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356466,"byte_end":356548,"line_start":434,"line_end":434,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356553,"byte_end":356580,"line_start":435,"line_end":435,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357409,"byte_end":357418,"line_start":462,"line_end":462,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":3479},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356756,"byte_end":356788,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356793,"byte_end":356796,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356801,"byte_end":356882,"line_start":444,"line_end":444,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356887,"byte_end":356909,"line_start":445,"line_end":445,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356914,"byte_end":356917,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":356922,"byte_end":357000,"line_start":447,"line_end":447,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357005,"byte_end":357008,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357013,"byte_end":357027,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357032,"byte_end":357035,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357040,"byte_end":357047,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357052,"byte_end":357093,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357098,"byte_end":357143,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357148,"byte_end":357151,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357156,"byte_end":357203,"line_start":455,"line_end":455,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357208,"byte_end":357211,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357216,"byte_end":357259,"line_start":457,"line_end":457,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357264,"byte_end":357267,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357272,"byte_end":357325,"line_start":459,"line_end":459,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357330,"byte_end":357389,"line_start":460,"line_end":460,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":357394,"byte_end":357401,"line_start":461,"line_end":461,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3490},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361015,"byte_end":361027,"line_start":569,"line_end":569,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":3491}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":360933,"byte_end":361004,"line_start":568,"line_end":568,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361297,"byte_end":361301,"line_start":575,"line_end":575,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3490},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361045,"byte_end":361114,"line_start":570,"line_end":570,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361119,"byte_end":361172,"line_start":571,"line_end":571,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361177,"byte_end":361180,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361185,"byte_end":361262,"line_start":573,"line_end":573,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361267,"byte_end":361289,"line_start":574,"line_end":574,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3494},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361553,"byte_end":361568,"line_start":585,"line_end":585,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3497},{"krate":0,"index":3499}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361468,"byte_end":361542,"line_start":584,"line_end":584,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363172,"byte_end":363182,"line_start":627,"line_end":627,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361589,"byte_end":361664,"line_start":586,"line_end":586,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361669,"byte_end":361736,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361741,"byte_end":361838,"line_start":588,"line_end":588,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361843,"byte_end":361846,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361851,"byte_end":361921,"line_start":590,"line_end":590,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361926,"byte_end":362000,"line_start":591,"line_end":591,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362005,"byte_end":362060,"line_start":592,"line_end":592,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362065,"byte_end":362068,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362073,"byte_end":362151,"line_start":594,"line_end":594,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362156,"byte_end":362183,"line_start":595,"line_end":595,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362188,"byte_end":362191,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362196,"byte_end":362273,"line_start":597,"line_end":597,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362278,"byte_end":362300,"line_start":598,"line_end":598,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362305,"byte_end":362308,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362313,"byte_end":362327,"line_start":600,"line_end":600,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362332,"byte_end":362335,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362340,"byte_end":362347,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362352,"byte_end":362393,"line_start":603,"line_end":603,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362398,"byte_end":362445,"line_start":604,"line_end":604,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362450,"byte_end":362453,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362458,"byte_end":362507,"line_start":606,"line_end":606,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362512,"byte_end":362537,"line_start":607,"line_end":607,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362542,"byte_end":362545,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362550,"byte_end":362573,"line_start":609,"line_end":609,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362578,"byte_end":362639,"line_start":610,"line_end":610,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362644,"byte_end":362673,"line_start":611,"line_end":611,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362678,"byte_end":362709,"line_start":612,"line_end":612,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362714,"byte_end":362730,"line_start":613,"line_end":613,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362735,"byte_end":362738,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362743,"byte_end":362766,"line_start":615,"line_end":615,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362771,"byte_end":362832,"line_start":616,"line_end":616,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362837,"byte_end":362866,"line_start":617,"line_end":617,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362871,"byte_end":362901,"line_start":618,"line_end":618,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362906,"byte_end":362922,"line_start":619,"line_end":619,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362927,"byte_end":362930,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362935,"byte_end":362958,"line_start":621,"line_end":621,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":362963,"byte_end":363024,"line_start":622,"line_end":622,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363029,"byte_end":363058,"line_start":623,"line_end":623,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363063,"byte_end":363088,"line_start":624,"line_end":624,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363093,"byte_end":363152,"line_start":625,"line_end":625,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363157,"byte_end":363164,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365353,"byte_end":365362,"line_start":688,"line_end":688,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363371,"byte_end":363446,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363451,"byte_end":363522,"line_start":638,"line_end":638,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363527,"byte_end":363622,"line_start":639,"line_end":639,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363627,"byte_end":363630,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363635,"byte_end":363705,"line_start":641,"line_end":641,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363710,"byte_end":363785,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363790,"byte_end":363860,"line_start":643,"line_end":643,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363865,"byte_end":363875,"line_start":644,"line_end":644,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363880,"byte_end":363883,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363888,"byte_end":363966,"line_start":646,"line_end":646,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":363971,"byte_end":363998,"line_start":647,"line_end":647,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364003,"byte_end":364006,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364011,"byte_end":364088,"line_start":649,"line_end":649,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364093,"byte_end":364115,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364120,"byte_end":364123,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364128,"byte_end":364140,"line_start":652,"line_end":652,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364145,"byte_end":364148,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364153,"byte_end":364226,"line_start":654,"line_end":654,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364231,"byte_end":364304,"line_start":655,"line_end":655,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364309,"byte_end":364383,"line_start":656,"line_end":656,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364388,"byte_end":364444,"line_start":657,"line_end":657,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364449,"byte_end":364452,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364457,"byte_end":364504,"line_start":659,"line_end":659,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364509,"byte_end":364512,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364517,"byte_end":364531,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364536,"byte_end":364539,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364544,"byte_end":364551,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364556,"byte_end":364597,"line_start":664,"line_end":664,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364602,"byte_end":364649,"line_start":665,"line_end":665,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364654,"byte_end":364657,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364662,"byte_end":364708,"line_start":667,"line_end":667,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364713,"byte_end":364745,"line_start":668,"line_end":668,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364750,"byte_end":364753,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364758,"byte_end":364781,"line_start":670,"line_end":670,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364786,"byte_end":364840,"line_start":671,"line_end":671,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364845,"byte_end":364874,"line_start":672,"line_end":672,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364879,"byte_end":364908,"line_start":673,"line_end":673,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364913,"byte_end":364929,"line_start":674,"line_end":674,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364934,"byte_end":364937,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364942,"byte_end":364965,"line_start":676,"line_end":676,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":364970,"byte_end":365024,"line_start":677,"line_end":677,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365029,"byte_end":365058,"line_start":678,"line_end":678,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365063,"byte_end":365090,"line_start":679,"line_end":679,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365095,"byte_end":365111,"line_start":680,"line_end":680,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365116,"byte_end":365119,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365124,"byte_end":365147,"line_start":682,"line_end":682,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365152,"byte_end":365206,"line_start":683,"line_end":683,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365211,"byte_end":365240,"line_start":684,"line_end":684,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365245,"byte_end":365269,"line_start":685,"line_end":685,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365274,"byte_end":365333,"line_start":686,"line_end":686,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365338,"byte_end":365345,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366847,"byte_end":366852,"line_start":726,"line_end":726,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365501,"byte_end":365552,"line_start":694,"line_end":694,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365557,"byte_end":365644,"line_start":695,"line_end":695,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365649,"byte_end":365652,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365657,"byte_end":365723,"line_start":697,"line_end":697,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365728,"byte_end":365810,"line_start":698,"line_end":698,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365815,"byte_end":365875,"line_start":699,"line_end":699,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365880,"byte_end":365883,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365888,"byte_end":365923,"line_start":701,"line_end":701,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365928,"byte_end":365950,"line_start":702,"line_end":702,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365955,"byte_end":365958,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365963,"byte_end":365975,"line_start":704,"line_end":704,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365980,"byte_end":365983,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":365988,"byte_end":366079,"line_start":706,"line_end":706,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366084,"byte_end":366087,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366092,"byte_end":366154,"line_start":708,"line_end":708,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366159,"byte_end":366162,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366167,"byte_end":366181,"line_start":710,"line_end":710,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366186,"byte_end":366189,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366194,"byte_end":366201,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366206,"byte_end":366247,"line_start":713,"line_end":713,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366252,"byte_end":366299,"line_start":714,"line_end":714,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366304,"byte_end":366339,"line_start":715,"line_end":715,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366344,"byte_end":366347,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366352,"byte_end":366407,"line_start":717,"line_end":717,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366412,"byte_end":366415,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366420,"byte_end":366482,"line_start":719,"line_end":719,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366487,"byte_end":366558,"line_start":720,"line_end":720,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366563,"byte_end":366634,"line_start":721,"line_end":721,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366639,"byte_end":366710,"line_start":722,"line_end":722,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366715,"byte_end":366763,"line_start":723,"line_end":723,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366768,"byte_end":366827,"line_start":724,"line_end":724,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366832,"byte_end":366839,"line_start":725,"line_end":725,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3512},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":435920,"byte_end":435927,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":3514},{"krate":0,"index":3515}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3514},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":435942,"byte_end":435948,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":435957,"byte_end":435966,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3522},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":436158,"byte_end":436164,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":3524}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":436189,"byte_end":436197,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3539},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":437501,"byte_end":437505,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10963},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":437861,"byte_end":437868,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10984},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":438602,"byte_end":438615,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11000},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":438957,"byte_end":438966,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11015},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":439672,"byte_end":439679,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11030},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":440390,"byte_end":440398,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11045},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":441118,"byte_end":441129,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11057},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":441947,"byte_end":441959,"line_start":272,"line_end":272,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11069},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":443040,"byte_end":443054,"line_start":309,"line_end":309,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3703},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":443813,"byte_end":443819,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":11102},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":11103},{"krate":0,"index":11251},{"krate":0,"index":11252},{"krate":0,"index":11253},{"krate":0,"index":11254},{"krate":0,"index":11255},{"krate":0,"index":11256},{"krate":0,"index":11314}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12305,"byte_end":12330,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"! Futures-powered synchronization primitives.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8485106,"byte_end":8485153,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8485154,"byte_end":8485157,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8485158,"byte_end":8485233,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mod.rs","byte_start":8485234,"byte_end":8485291,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11124},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486411,"byte_end":8486416,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":11126},{"krate":0,"index":11127},{"krate":0,"index":11128}],"decl_id":null,"docs":" A futures-aware mutex.\n \n # Fairness\n \n This mutex provides no fairness guarantees. Tasks may not acquire the mutex\n in the order that they requested the lock, and it's possible for a single task\n which repeatedly takes the lock to starve other tasks, which may be left waiting\n indefinitely.\n","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486082,"byte_end":8486108,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486109,"byte_end":8486113,"line_start":12,"line_end":12,"column_start":1,"column_end":5}},{"value":"/ # Fairness","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486114,"byte_end":8486128,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/ ","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486129,"byte_end":8486133,"line_start":14,"line_end":14,"column_start":1,"column_end":5}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486134,"byte_end":8486213,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486214,"byte_end":8486296,"line_start":16,"line_end":16,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486297,"byte_end":8486381,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486382,"byte_end":8486399,"line_start":18,"line_end":18,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":11151},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8487745,"byte_end":8487748,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8487695,"byte_end":8487733,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":11152},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488180,"byte_end":8488190,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8487934,"byte_end":8487989,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8487994,"byte_end":8487997,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488002,"byte_end":8488016,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488021,"byte_end":8488024,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488029,"byte_end":8488036,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488041,"byte_end":8488070,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488075,"byte_end":8488078,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488083,"byte_end":8488113,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488118,"byte_end":8488156,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488161,"byte_end":8488168,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11155},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488404,"byte_end":8488412,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488276,"byte_end":8488320,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488325,"byte_end":8488328,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488333,"byte_end":8488392,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":11156},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488833,"byte_end":8488837,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488668,"byte_end":8488704,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488709,"byte_end":8488712,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488717,"byte_end":8488790,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488795,"byte_end":8488821,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":11157},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489498,"byte_end":8489505,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488988,"byte_end":8489043,"line_start":121,"line_end":121,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489048,"byte_end":8489051,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489056,"byte_end":8489131,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489136,"byte_end":8489210,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489215,"byte_end":8489218,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489223,"byte_end":8489237,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489242,"byte_end":8489245,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489250,"byte_end":8489257,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489262,"byte_end":8489303,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489308,"byte_end":8489337,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489342,"byte_end":8489345,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489350,"byte_end":8489384,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489389,"byte_end":8489415,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489420,"byte_end":8489460,"line_start":134,"line_end":134,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489465,"byte_end":8489474,"line_start":135,"line_end":135,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8489479,"byte_end":8489486,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11161},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8491228,"byte_end":8491243,"line_start":182,"line_end":182,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":11164},{"krate":0,"index":11165}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8491135,"byte_end":8491216,"line_start":181,"line_end":181,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":11180},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8493857,"byte_end":8493867,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":11183}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8493693,"byte_end":8493757,"line_start":258,"line_end":258,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8493758,"byte_end":8493831,"line_start":259,"line_end":259,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8493832,"byte_end":8493845,"line_start":260,"line_end":260,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11187},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494436,"byte_end":8494439,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8493957,"byte_end":8494017,"line_start":266,"line_end":266,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494022,"byte_end":8494025,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494030,"byte_end":8494043,"line_start":268,"line_end":268,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494048,"byte_end":8494051,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494056,"byte_end":8494063,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494068,"byte_end":8494109,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494114,"byte_end":8494157,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494162,"byte_end":8494165,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494170,"byte_end":8494223,"line_start":274,"line_end":274,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494228,"byte_end":8494233,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494238,"byte_end":8494327,"line_start":276,"line_end":276,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494332,"byte_end":8494374,"line_start":277,"line_end":277,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494379,"byte_end":8494384,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494389,"byte_end":8494398,"line_start":279,"line_end":279,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494403,"byte_end":8494410,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494415,"byte_end":8494424,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":11203},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495748,"byte_end":8495764,"line_start":325,"line_end":325,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":11207},{"krate":0,"index":11208}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495564,"byte_end":8495652,"line_start":323,"line_end":323,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495653,"byte_end":8495736,"line_start":324,"line_end":324,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":11213},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496493,"byte_end":8496496,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495904,"byte_end":8495964,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495969,"byte_end":8495972,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495977,"byte_end":8495990,"line_start":333,"line_end":333,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495995,"byte_end":8495998,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496003,"byte_end":8496010,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496015,"byte_end":8496056,"line_start":336,"line_end":336,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496061,"byte_end":8496122,"line_start":337,"line_end":337,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496127,"byte_end":8496130,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496135,"byte_end":8496188,"line_start":339,"line_end":339,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496193,"byte_end":8496198,"line_start":340,"line_end":340,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496203,"byte_end":8496292,"line_start":341,"line_end":341,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496297,"byte_end":8496387,"line_start":342,"line_end":342,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496392,"byte_end":8496431,"line_start":343,"line_end":343,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496436,"byte_end":8496441,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496446,"byte_end":8496455,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496460,"byte_end":8496467,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496472,"byte_end":8496481,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35079,"byte_end":35086,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35213,"byte_end":35220,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35454,"byte_end":35461,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":3786}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":36266,"byte_end":36273,"line_start":61,"line_end":61,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":36507,"byte_end":36514,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":3787}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39610,"byte_end":39614,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39716,"byte_end":39720,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41444,"byte_end":41448,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41557,"byte_end":41561,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42557,"byte_end":42577,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42709,"byte_end":42712,"line_start":33,"line_end":33,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42887,"byte_end":42890,"line_start":40,"line_end":40,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":43154,"byte_end":43157,"line_start":52,"line_end":52,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":3893}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":45056,"byte_end":45067,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":45221,"byte_end":45232,"line_start":21,"line_end":21,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46412,"byte_end":46418,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46461,"byte_end":46467,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46725,"byte_end":46730,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46957,"byte_end":46962,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47059,"byte_end":47064,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47308,"byte_end":47314,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47780,"byte_end":47786,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":48478,"byte_end":48483,"line_start":112,"line_end":112,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":50180,"byte_end":50186,"line_start":161,"line_end":161,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":50338,"byte_end":50344,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":51882,"byte_end":51887,"line_start":217,"line_end":217,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":53674,"byte_end":53680,"line_start":276,"line_end":276,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":53874,"byte_end":53880,"line_start":288,"line_end":288,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":54308,"byte_end":54316,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18656,"byte_end":18657,"line_start":115,"line_end":115,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76250,"byte_end":76260,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76425,"byte_end":76435,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76541,"byte_end":76551,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77189,"byte_end":77199,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77329,"byte_end":77339,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77592,"byte_end":77602,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":4607}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":78659,"byte_end":78669,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":78922,"byte_end":78932,"line_start":78,"line_end":78,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":4608}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82470,"byte_end":82483,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82616,"byte_end":82629,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82885,"byte_end":82898,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":4680}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59219,"byte_end":59222,"line_start":133,"line_end":133,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84293,"byte_end":84297,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84870,"byte_end":84874,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":85006,"byte_end":85010,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85587,"byte_end":85594,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86145,"byte_end":86152,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86297,"byte_end":86304,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86331,"byte_end":86338,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87624,"byte_end":87633,"line_start":45,"line_end":45,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5668},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":89070,"byte_end":89079,"line_start":84,"line_end":84,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":89295,"byte_end":89304,"line_start":93,"line_end":93,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":5669}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90708,"byte_end":90720,"line_start":30,"line_end":30,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5730},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":92184,"byte_end":92196,"line_start":69,"line_end":69,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":92424,"byte_end":92436,"line_start":78,"line_end":78,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":5731}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":93982,"byte_end":93994,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":94327,"byte_end":94339,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":94522,"byte_end":94534,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":94944,"byte_end":94950,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95620,"byte_end":95626,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95768,"byte_end":95774,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96251,"byte_end":96256,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96435,"byte_end":96440,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96472,"byte_end":96477,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96574,"byte_end":96579,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":103871,"byte_end":103878,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105543,"byte_end":105550,"line_start":89,"line_end":89,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":106247,"byte_end":106254,"line_start":116,"line_end":116,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106724,"byte_end":106730,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":108090,"byte_end":108096,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":108799,"byte_end":108805,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109342,"byte_end":109351,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":110331,"byte_end":110340,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":111046,"byte_end":111055,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119272,"byte_end":119282,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":121044,"byte_end":121054,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":122227,"byte_end":122237,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122719,"byte_end":122728,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124434,"byte_end":124443,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125796,"byte_end":125804,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126774,"byte_end":126782,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":128226,"byte_end":128234,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128881,"byte_end":128887,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129272,"byte_end":129278,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129659,"byte_end":129665,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129906,"byte_end":129912,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":6632}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":130282,"byte_end":130288,"line_start":71,"line_end":71,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":130564,"byte_end":130570,"line_start":84,"line_end":84,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":6633}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":130953,"byte_end":130959,"line_start":101,"line_end":101,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":132841,"byte_end":132847,"line_start":172,"line_end":172,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6634},{"krate":0,"index":6635}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":133986,"byte_end":133992,"line_start":212,"line_end":212,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6636},{"krate":0,"index":6637},{"krate":0,"index":6638},{"krate":0,"index":6639}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":135467,"byte_end":135473,"line_start":262,"line_end":262,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6640}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":135945,"byte_end":135951,"line_start":281,"line_end":281,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6641},{"krate":0,"index":6642}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8347654,"byte_end":8347663,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6658}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348965,"byte_end":8348976,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6660}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8350852,"byte_end":8350859,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6664}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8351042,"byte_end":8351049,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8351075,"byte_end":8351084,"line_start":135,"line_end":135,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6668},{"krate":0,"index":6669}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8352058,"byte_end":8352069,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6671}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":186120,"byte_end":186125,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":186394,"byte_end":186399,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":186604,"byte_end":186609,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":6762},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188207,"byte_end":188214,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188525,"byte_end":188532,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188708,"byte_end":188715,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":6818}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189668,"byte_end":189674,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189949,"byte_end":189955,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":6863}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":190764,"byte_end":190770,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191450,"byte_end":191459,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":6908},{"krate":0,"index":6909},{"krate":0,"index":6910},{"krate":0,"index":6911}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191692,"byte_end":191701,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191819,"byte_end":191828,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":6912},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193265,"byte_end":193271,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193663,"byte_end":193669,"line_start":40,"line_end":40,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":6981},{"krate":0,"index":6982},{"krate":0,"index":6983},{"krate":0,"index":6984}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":194063,"byte_end":194069,"line_start":57,"line_end":57,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":194337,"byte_end":194343,"line_start":67,"line_end":67,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":6985},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196544,"byte_end":196553,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196850,"byte_end":196859,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":7051},{"krate":0,"index":7052},{"krate":0,"index":7053},{"krate":0,"index":7054}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":197160,"byte_end":197169,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":197446,"byte_end":197455,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":7055},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199584,"byte_end":199591,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":7112},{"krate":0,"index":7113},{"krate":0,"index":7114},{"krate":0,"index":7115}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199760,"byte_end":199767,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199959,"byte_end":199966,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":7116}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201457,"byte_end":201461,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201817,"byte_end":201821,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":202154,"byte_end":202158,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":202405,"byte_end":202409,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":7255}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":203978,"byte_end":203985,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":204278,"byte_end":204285,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":204579,"byte_end":204586,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":204837,"byte_end":204844,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":7321}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":205940,"byte_end":205944,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":7366},{"krate":0,"index":7367},{"krate":0,"index":7368},{"krate":0,"index":7369}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":206445,"byte_end":206449,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":206547,"byte_end":206551,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":7370},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":207787,"byte_end":207799,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210313,"byte_end":210325,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210445,"byte_end":210457,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":211316,"byte_end":211319,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":211534,"byte_end":211537,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":7504},{"krate":0,"index":7505},{"krate":0,"index":7506},{"krate":0,"index":7507}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":211711,"byte_end":211714,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":211888,"byte_end":211891,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":7508},{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":213062,"byte_end":213066,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":213117,"byte_end":213121,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":213272,"byte_end":213276,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":213415,"byte_end":213419,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":214068,"byte_end":214082,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":214243,"byte_end":214257,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":214401,"byte_end":214415,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":215601,"byte_end":215609,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":7662},{"krate":0,"index":7663},{"krate":0,"index":7664},{"krate":0,"index":7665},{"krate":0,"index":1427},{"krate":0,"index":7666}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":216835,"byte_end":216843,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":216985,"byte_end":216993,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":7667},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218198,"byte_end":218202,"line_start":114,"line_end":114,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218473,"byte_end":218477,"line_start":126,"line_end":126,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218588,"byte_end":218592,"line_start":132,"line_end":132,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":219449,"byte_end":219453,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":7760},{"krate":0,"index":7761},{"krate":0,"index":7762},{"krate":0,"index":7763}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":219681,"byte_end":219685,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":219803,"byte_end":219807,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":7764},{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":221480,"byte_end":221489,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":221941,"byte_end":221950,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":7836},{"krate":0,"index":7837},{"krate":0,"index":7838},{"krate":0,"index":7839}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":222379,"byte_end":222388,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":222648,"byte_end":222657,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":7840},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":224998,"byte_end":225002,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1520},{"krate":0,"index":7885},{"krate":0,"index":7886},{"krate":0,"index":7887},{"krate":0,"index":7888}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":225212,"byte_end":225216,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":7889},{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":226255,"byte_end":226259,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":227217,"byte_end":227226,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":227674,"byte_end":227683,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":7961},{"krate":0,"index":7962},{"krate":0,"index":7963},{"krate":0,"index":7964}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":228105,"byte_end":228114,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":7965},{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":229723,"byte_end":229732,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":231055,"byte_end":231064,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":231391,"byte_end":231400,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":8024},{"krate":0,"index":8025},{"krate":0,"index":8026},{"krate":0,"index":8027},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233593,"byte_end":233602,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":8028},{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234672,"byte_end":234681,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":235566,"byte_end":235570,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":235860,"byte_end":235864,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":8094},{"krate":0,"index":8095},{"krate":0,"index":8096},{"krate":0,"index":8097}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":236173,"byte_end":236177,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":236415,"byte_end":236419,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":8098},{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238330,"byte_end":238333,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":240084,"byte_end":240087,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":240278,"byte_end":240281,"line_start":75,"line_end":75,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":8161},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":242952,"byte_end":242958,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":8209},{"krate":0,"index":8210},{"krate":0,"index":8211},{"krate":0,"index":8212}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":243469,"byte_end":243475,"line_start":41,"line_end":41,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":8213},{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":245142,"byte_end":245148,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":246088,"byte_end":246099,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1708},{"krate":0,"index":8261},{"krate":0,"index":8262},{"krate":0,"index":8263},{"krate":0,"index":8264}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":246464,"byte_end":246475,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":8265},{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":248592,"byte_end":248603,"line_start":97,"line_end":97,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":249544,"byte_end":249548,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":250034,"byte_end":250038,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":250202,"byte_end":250206,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":8341},{"krate":0,"index":8342},{"krate":0,"index":8343},{"krate":0,"index":8344}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":250673,"byte_end":250677,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":8345},{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":251940,"byte_end":251944,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8382943,"byte_end":8382958,"line_start":25,"line_end":25,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8365}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8383290,"byte_end":8383305,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8368},{"krate":0,"index":8441},{"krate":0,"index":8442},{"krate":0,"index":8443},{"krate":0,"index":8444}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8383718,"byte_end":8383733,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8371},{"krate":0,"index":11611},{"krate":0,"index":8372}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8385260,"byte_end":8385275,"line_start":108,"line_end":108,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8375}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8386316,"byte_end":8386324,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8394}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8386671,"byte_end":8386679,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8397},{"krate":0,"index":8445},{"krate":0,"index":8446},{"krate":0,"index":8447},{"krate":0,"index":8448}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8387016,"byte_end":8387024,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8400},{"krate":0,"index":11566},{"krate":0,"index":8401}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8389390,"byte_end":8389407,"line_start":22,"line_end":22,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8424}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8389753,"byte_end":8389770,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8429}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8390241,"byte_end":8390258,"line_start":52,"line_end":52,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8434}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8390500,"byte_end":8390517,"line_start":62,"line_end":62,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8439},{"krate":0,"index":11497}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":252937,"byte_end":252948,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1789},{"krate":0,"index":8493},{"krate":0,"index":8494},{"krate":0,"index":8495},{"krate":0,"index":8496}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":253158,"byte_end":253169,"line_start":26,"line_end":26,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":8497},{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":254116,"byte_end":254127,"line_start":63,"line_end":63,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145315,"byte_end":145316,"line_start":194,"line_end":194,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":285331,"byte_end":285338,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":285631,"byte_end":285638,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":8565},{"krate":0,"index":8566},{"krate":0,"index":8567},{"krate":0,"index":8568}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":285931,"byte_end":285938,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":8569},{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":287152,"byte_end":287159,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":288054,"byte_end":288064,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1981},{"krate":0,"index":8839},{"krate":0,"index":8840},{"krate":0,"index":8841},{"krate":0,"index":8842}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":288263,"byte_end":288273,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":288394,"byte_end":288404,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":289469,"byte_end":289475,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":289767,"byte_end":289773,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":9060},{"krate":0,"index":9061},{"krate":0,"index":9062},{"krate":0,"index":9063}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":290063,"byte_end":290069,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2019},{"krate":0,"index":9064},{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":291417,"byte_end":291423,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":292339,"byte_end":292346,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":292400,"byte_end":292407,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":292573,"byte_end":292580,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2047}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":292722,"byte_end":292729,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":293471,"byte_end":293481,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":293777,"byte_end":293787,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":294101,"byte_end":294111,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":9138}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":295488,"byte_end":295497,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":295893,"byte_end":295902,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":9207},{"krate":0,"index":9208},{"krate":0,"index":9209},{"krate":0,"index":9210}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":296206,"byte_end":296215,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":296484,"byte_end":296493,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2115},{"krate":0,"index":9211},{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":298666,"byte_end":298678,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2137}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":298978,"byte_end":298990,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2142},{"krate":0,"index":9277},{"krate":0,"index":9278},{"krate":0,"index":9279},{"krate":0,"index":9280}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":299195,"byte_end":299207,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":299497,"byte_end":299509,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2154},{"krate":0,"index":9281},{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":301679,"byte_end":301689,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2171},{"krate":0,"index":9327},{"krate":0,"index":9328},{"krate":0,"index":9329},{"krate":0,"index":9330}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":301954,"byte_end":301964,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":302210,"byte_end":302220,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2177},{"krate":0,"index":9331}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":303816,"byte_end":303826,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2197}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":304018,"byte_end":304028,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":304216,"byte_end":304226,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":9387}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":305237,"byte_end":305246,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":305512,"byte_end":305521,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":9432}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":306759,"byte_end":306766,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":307125,"byte_end":307132,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":307490,"byte_end":307497,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":307763,"byte_end":307770,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2261},{"krate":0,"index":9511}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311576,"byte_end":311585,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311886,"byte_end":311895,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":9576}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":313633,"byte_end":313645,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":314101,"byte_end":314113,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2316},{"krate":0,"index":9648},{"krate":0,"index":9649},{"krate":0,"index":9650},{"krate":0,"index":9651}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":314562,"byte_end":314574,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":9652},{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":316127,"byte_end":316139,"line_start":106,"line_end":106,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8412221,"byte_end":8412239,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9675},{"krate":0,"index":9719},{"krate":0,"index":9720},{"krate":0,"index":9721},{"krate":0,"index":9722}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8412598,"byte_end":8412616,"line_start":40,"line_end":40,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9678},{"krate":0,"index":11449}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8414829,"byte_end":8414849,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":9702}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8415214,"byte_end":8415234,"line_start":38,"line_end":38,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9707}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8415485,"byte_end":8415505,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9712}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8415997,"byte_end":8416017,"line_start":64,"line_end":64,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9717},{"krate":0,"index":11380}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":317204,"byte_end":317217,"line_start":21,"line_end":21,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":317433,"byte_end":317446,"line_start":35,"line_end":35,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2348}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":317700,"byte_end":317713,"line_start":48,"line_end":48,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":319581,"byte_end":319594,"line_start":103,"line_end":103,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":320256,"byte_end":320269,"line_start":131,"line_end":131,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258690,"byte_end":258691,"line_start":128,"line_end":128,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322379,"byte_end":322383,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322989,"byte_end":322993,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":324127,"byte_end":324133,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":324160,"byte_end":324166,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":324473,"byte_end":324479,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":325091,"byte_end":325096,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":325128,"byte_end":325133,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":325218,"byte_end":325223,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":326282,"byte_end":326286,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":326415,"byte_end":326419,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":9801},{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":327059,"byte_end":327063,"line_start":64,"line_end":64,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327673,"byte_end":327680,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327712,"byte_end":327719,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327804,"byte_end":327811,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328336,"byte_end":328342,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328373,"byte_end":328379,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":329121,"byte_end":329127,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2575},{"krate":0,"index":2576}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330493,"byte_end":330499,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":9867},{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":331973,"byte_end":331979,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332197,"byte_end":332203,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2610},{"krate":0,"index":9868}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":335516,"byte_end":335522,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2639}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":335825,"byte_end":335831,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336057,"byte_end":336063,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2651},{"krate":0,"index":9933}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8422567,"byte_end":8422579,"line_start":21,"line_end":21,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":9955}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8422684,"byte_end":8422696,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8422727,"byte_end":8422739,"line_start":29,"line_end":29,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9960}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8422862,"byte_end":8422874,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9963}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423055,"byte_end":8423067,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":9966},{"krate":0,"index":9967}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425684,"byte_end":8425698,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425724,"byte_end":8425738,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9979},{"krate":0,"index":9980},{"krate":0,"index":9981},{"krate":0,"index":9982}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8427362,"byte_end":8427376,"line_start":146,"line_end":146,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9985}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8427494,"byte_end":8427508,"line_start":152,"line_end":152,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9988},{"krate":0,"index":9989},{"krate":0,"index":9990}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8428692,"byte_end":8428706,"line_start":190,"line_end":190,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":9993}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8428872,"byte_end":8428886,"line_start":196,"line_end":196,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":9996}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8429144,"byte_end":8429158,"line_start":206,"line_end":206,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10001}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/abort.rs","byte_start":8455354,"byte_end":8455365,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10045}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8456537,"byte_end":8456547,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10055},{"krate":0,"index":10056},{"krate":0,"index":10057}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8457404,"byte_end":8457414,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8457462,"byte_end":8457469,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10063},{"krate":0,"index":10064},{"krate":0,"index":10065}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8457733,"byte_end":8457740,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8457781,"byte_end":8457791,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10071},{"krate":0,"index":10072},{"krate":0,"index":10073}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8458708,"byte_end":8458718,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8458766,"byte_end":8458770,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10079},{"krate":0,"index":10080},{"krate":0,"index":10081}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8459026,"byte_end":8459030,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8460519,"byte_end":8460523,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8460558,"byte_end":8460562,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8460594,"byte_end":8460598,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10121}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8461675,"byte_end":8461679,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10124},{"krate":0,"index":10126}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8462691,"byte_end":8462695,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10129}],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8464145,"byte_end":8464160,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10161},{"krate":0,"index":10162},{"krate":0,"index":10163}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8466010,"byte_end":8466025,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10166}],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432404,"byte_end":8432420,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432461,"byte_end":8432477,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432506,"byte_end":8432522,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432547,"byte_end":8432563,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10183}],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432760,"byte_end":8432776,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10185}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8434495,"byte_end":8434511,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10188}],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8434614,"byte_end":8434630,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10191},{"krate":0,"index":10192},{"krate":0,"index":10193},{"krate":0,"index":10194},{"krate":0,"index":10195},{"krate":0,"index":10196},{"krate":0,"index":10197},{"krate":0,"index":10198},{"krate":0,"index":10199},{"krate":0,"index":10200},{"krate":0,"index":10201},{"krate":0,"index":10202},{"krate":0,"index":10203}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8446290,"byte_end":8446306,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10206},{"krate":0,"index":10207},{"krate":0,"index":10216}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8450703,"byte_end":8450707,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10215}],"docs":"","sig":null,"attributes":[]},{"id":795,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8453045,"byte_end":8453061,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10219}],"docs":"","sig":null,"attributes":[]},{"id":796,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8453208,"byte_end":8453224,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10222}],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8454664,"byte_end":8454680,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10225}],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8454936,"byte_end":8454952,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10230}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8455074,"byte_end":8455090,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10233}],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467842,"byte_end":8467851,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10257}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467996,"byte_end":8468005,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10260},{"krate":0,"index":10261},{"krate":0,"index":10262},{"krate":0,"index":10263}],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8469055,"byte_end":8469064,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10266}],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8469177,"byte_end":8469186,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10269},{"krate":0,"index":10270}],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8469993,"byte_end":8470002,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10273}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470978,"byte_end":8470987,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":10278}],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8471132,"byte_end":8471141,"line_start":135,"line_end":135,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":10282}],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":337928,"byte_end":337930,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":337985,"byte_end":337987,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367928,"byte_end":367938,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":368375,"byte_end":368385,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":368902,"byte_end":368912,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":369452,"byte_end":369462,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":370211,"byte_end":370221,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":370941,"byte_end":370951,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2763}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":371539,"byte_end":371549,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":371688,"byte_end":371698,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":371936,"byte_end":371946,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2772},{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":372157,"byte_end":372167,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2776},{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":373888,"byte_end":373897,"line_start":39,"line_end":39,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":10416},{"krate":0,"index":10417},{"krate":0,"index":10418},{"krate":0,"index":10419},{"krate":0,"index":2805},{"krate":0,"index":10420}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":375165,"byte_end":375174,"line_start":81,"line_end":81,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2808},{"krate":0,"index":2809}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":376786,"byte_end":376795,"line_start":125,"line_end":125,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10421},{"krate":0,"index":2813}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":377660,"byte_end":377669,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10422},{"krate":0,"index":10423},{"krate":0,"index":10424},{"krate":0,"index":10425}],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":377747,"byte_end":377756,"line_start":155,"line_end":155,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":829,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":378072,"byte_end":378081,"line_start":164,"line_end":164,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":381900,"byte_end":381909,"line_start":38,"line_end":38,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":10470},{"krate":0,"index":10471},{"krate":0,"index":10472},{"krate":0,"index":10473},{"krate":0,"index":10474},{"krate":0,"index":2847}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":383496,"byte_end":383505,"line_start":92,"line_end":92,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2854}],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":384928,"byte_end":384937,"line_start":135,"line_end":135,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10475},{"krate":0,"index":10476}],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":385018,"byte_end":385027,"line_start":139,"line_end":139,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10477},{"krate":0,"index":10478}],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":385108,"byte_end":385117,"line_start":143,"line_end":143,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":385476,"byte_end":385485,"line_start":153,"line_end":153,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386365,"byte_end":386370,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":2887}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":387768,"byte_end":387773,"line_start":66,"line_end":66,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":388103,"byte_end":388108,"line_start":80,"line_end":80,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":10534},{"krate":0,"index":10535}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":389551,"byte_end":389556,"line_start":134,"line_end":134,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":10537},{"krate":0,"index":10538}],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":390762,"byte_end":390767,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":390820,"byte_end":390825,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2912}],"docs":"","sig":null,"attributes":[]},{"id":852,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":390968,"byte_end":390973,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2915},{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392721,"byte_end":392725,"line_start":53,"line_end":53,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2939},{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":864,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":394420,"byte_end":394427,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2963},{"krate":0,"index":10681}],"docs":"","sig":null,"attributes":[]},{"id":865,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396308,"byte_end":396314,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988}],"docs":"","sig":null,"attributes":[]},{"id":866,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399542,"byte_end":399548,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":867,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399835,"byte_end":399841,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":868,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":400473,"byte_end":400479,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2998},{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":869,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":401628,"byte_end":401634,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10694},{"krate":0,"index":10695},{"krate":0,"index":10696},{"krate":0,"index":10697}],"docs":"","sig":null,"attributes":[]},{"id":870,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":401709,"byte_end":401715,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10698},{"krate":0,"index":10699},{"krate":0,"index":10700},{"krate":0,"index":10701}],"docs":"","sig":null,"attributes":[]},{"id":871,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":401793,"byte_end":401799,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10702},{"krate":0,"index":10703},{"krate":0,"index":10704},{"krate":0,"index":10705}],"docs":"","sig":null,"attributes":[]},{"id":872,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":401872,"byte_end":401878,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10706},{"krate":0,"index":10707},{"krate":0,"index":10708},{"krate":0,"index":10709}],"docs":"","sig":null,"attributes":[]},{"id":873,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402861,"byte_end":402866,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3020}],"docs":"","sig":null,"attributes":[]},{"id":874,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":403214,"byte_end":403219,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3022},{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":875,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":403451,"byte_end":403456,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3025}],"docs":"","sig":null,"attributes":[]},{"id":876,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":403942,"byte_end":403947,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":877,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":404000,"byte_end":404005,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3042}],"docs":"","sig":null,"attributes":[]},{"id":878,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":404119,"byte_end":404124,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3045},{"krate":0,"index":3046}],"docs":"","sig":null,"attributes":[]},{"id":884,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":404867,"byte_end":404872,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3063}],"docs":"","sig":null,"attributes":[]},{"id":885,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":405092,"byte_end":405097,"line_start":34,"line_end":34,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3066},{"krate":0,"index":10768}],"docs":"","sig":null,"attributes":[]},{"id":886,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":406105,"byte_end":406109,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":887,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":406161,"byte_end":406165,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3081}],"docs":"","sig":null,"attributes":[]},{"id":888,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":406330,"byte_end":406334,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3084},{"krate":0,"index":3085}],"docs":"","sig":null,"attributes":[]},{"id":889,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":407022,"byte_end":407034,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":890,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":407086,"byte_end":407098,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3102}],"docs":"","sig":null,"attributes":[]},{"id":891,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":407277,"byte_end":407289,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3105},{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":892,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":407959,"byte_end":407968,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":893,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":408020,"byte_end":408029,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":894,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":408199,"byte_end":408208,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":895,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":409325,"byte_end":409333,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":896,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":409388,"byte_end":409396,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3144}],"docs":"","sig":null,"attributes":[]},{"id":897,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":410423,"byte_end":410431,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3150},{"krate":0,"index":3151}],"docs":"","sig":null,"attributes":[]},{"id":898,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":411161,"byte_end":411170,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":899,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":411222,"byte_end":411231,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3167}],"docs":"","sig":null,"attributes":[]},{"id":900,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":411512,"byte_end":411517,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3173}],"docs":"","sig":null,"attributes":[]},{"id":901,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":413067,"byte_end":413076,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3178},{"krate":0,"index":3179}],"docs":"","sig":null,"attributes":[]},{"id":902,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":413924,"byte_end":413936,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":903,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":413988,"byte_end":414000,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":904,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":415034,"byte_end":415046,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3205},{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":905,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":415841,"byte_end":415850,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":906,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":415905,"byte_end":415914,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3222}],"docs":"","sig":null,"attributes":[]},{"id":907,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":416886,"byte_end":416895,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3227},{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":908,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":418094,"byte_end":418100,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3244},{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":909,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":418880,"byte_end":418886,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3247}],"docs":"","sig":null,"attributes":[]},{"id":910,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":419400,"byte_end":419404,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":911,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":419456,"byte_end":419460,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3266}],"docs":"","sig":null,"attributes":[]},{"id":912,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":419617,"byte_end":419621,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3269},{"krate":0,"index":3270}],"docs":"","sig":null,"attributes":[]},{"id":913,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420750,"byte_end":420754,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3289},{"krate":0,"index":3290}],"docs":"","sig":null,"attributes":[]},{"id":914,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":421472,"byte_end":421476,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3292}],"docs":"","sig":null,"attributes":[]},{"id":915,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":422481,"byte_end":422489,"line_start":36,"line_end":36,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3318}],"docs":"","sig":null,"attributes":[]},{"id":916,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":422987,"byte_end":422996,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3322}],"docs":"","sig":null,"attributes":[]},{"id":917,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":423388,"byte_end":423396,"line_start":56,"line_end":56,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3325},{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":918,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":423861,"byte_end":423870,"line_start":70,"line_end":70,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3331},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":919,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":424847,"byte_end":424859,"line_start":96,"line_end":96,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3346}],"docs":"","sig":null,"attributes":[]},{"id":920,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":425049,"byte_end":425061,"line_start":104,"line_end":104,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":921,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":425295,"byte_end":425307,"line_start":111,"line_end":111,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":927,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":425849,"byte_end":425853,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":10904},{"krate":0,"index":10905},{"krate":0,"index":10906},{"krate":0,"index":10907}],"docs":"","sig":null,"attributes":[]},{"id":928,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427780,"byte_end":427784,"line_start":85,"line_end":85,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10908}],"docs":"","sig":null,"attributes":[]},{"id":929,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":428465,"byte_end":428469,"line_start":111,"line_end":111,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":10909},{"krate":0,"index":10910}],"docs":"","sig":null,"attributes":[]},{"id":930,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430390,"byte_end":430396,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393}],"docs":"","sig":null,"attributes":[]},{"id":931,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":432499,"byte_end":432505,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3397}],"docs":"","sig":null,"attributes":[]},{"id":932,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":432652,"byte_end":432658,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3400}],"docs":"","sig":null,"attributes":[]},{"id":933,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":433179,"byte_end":433184,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":934,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":433237,"byte_end":433242,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3415}],"docs":"","sig":null,"attributes":[]},{"id":935,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":433404,"byte_end":433409,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3418},{"krate":0,"index":3419}],"docs":"","sig":null,"attributes":[]},{"id":936,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":434093,"byte_end":434106,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":937,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":434159,"byte_end":434172,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3436}],"docs":"","sig":null,"attributes":[]},{"id":938,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":434345,"byte_end":434358,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3439},{"krate":0,"index":3440}],"docs":"","sig":null,"attributes":[]},{"id":939,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":435025,"byte_end":435033,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":940,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":435086,"byte_end":435094,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3456}],"docs":"","sig":null,"attributes":[]},{"id":941,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":435260,"byte_end":435268,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3459},{"krate":0,"index":3460}],"docs":"","sig":null,"attributes":[]},{"id":942,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":354880,"byte_end":354881,"line_start":382,"line_end":382,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":943,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":360927,"byte_end":360928,"line_start":566,"line_end":566,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":944,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361462,"byte_end":361463,"line_start":582,"line_end":582,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":945,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366992,"byte_end":366993,"line_start":733,"line_end":733,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":946,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":436030,"byte_end":436031,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3520},{"krate":0,"index":3521}],"docs":"","sig":null,"attributes":[]},{"id":947,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":436265,"byte_end":436266,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3529}],"docs":"","sig":null,"attributes":[]},{"id":948,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":436535,"byte_end":436536,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3537}],"docs":"","sig":null,"attributes":[]},{"id":949,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":437551,"byte_end":437555,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3545}],"docs":"","sig":null,"attributes":[]},{"id":950,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":437649,"byte_end":437653,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3549},{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":956,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":437912,"byte_end":437919,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3555},{"krate":0,"index":3556}],"docs":"","sig":null,"attributes":[]},{"id":957,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":438142,"byte_end":438149,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3561}],"docs":"","sig":null,"attributes":[]},{"id":958,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":438340,"byte_end":438347,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3566}],"docs":"","sig":null,"attributes":[]},{"id":959,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":438652,"byte_end":438665,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3572},{"krate":0,"index":3573}],"docs":"","sig":null,"attributes":[]},{"id":965,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":439001,"byte_end":439010,"line_start":143,"line_end":143,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3579}],"docs":"","sig":null,"attributes":[]},{"id":966,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":439211,"byte_end":439220,"line_start":153,"line_end":153,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":967,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":439399,"byte_end":439408,"line_start":162,"line_end":162,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3589}],"docs":"","sig":null,"attributes":[]},{"id":968,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":439728,"byte_end":439735,"line_start":178,"line_end":178,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3596},{"krate":0,"index":3597}],"docs":"","sig":null,"attributes":[]},{"id":969,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":439954,"byte_end":439961,"line_start":187,"line_end":187,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3603}],"docs":"","sig":null,"attributes":[]},{"id":970,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":440139,"byte_end":440146,"line_start":195,"line_end":195,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3609}],"docs":"","sig":null,"attributes":[]},{"id":971,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":440447,"byte_end":440455,"line_start":210,"line_end":210,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3617},{"krate":0,"index":3618}],"docs":"","sig":null,"attributes":[]},{"id":972,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":440678,"byte_end":440686,"line_start":219,"line_end":219,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3624}],"docs":"","sig":null,"attributes":[]},{"id":973,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":440868,"byte_end":440876,"line_start":227,"line_end":227,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3630}],"docs":"","sig":null,"attributes":[]},{"id":974,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":441186,"byte_end":441197,"line_start":242,"line_end":242,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3639},{"krate":0,"index":3640}],"docs":"","sig":null,"attributes":[]},{"id":975,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":441434,"byte_end":441445,"line_start":251,"line_end":251,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3646}],"docs":"","sig":null,"attributes":[]},{"id":976,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":441660,"byte_end":441671,"line_start":259,"line_end":259,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3652}],"docs":"","sig":null,"attributes":[]},{"id":977,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":442016,"byte_end":442028,"line_start":274,"line_end":274,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3660},{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":978,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":442266,"byte_end":442278,"line_start":283,"line_end":283,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3667}],"docs":"","sig":null,"attributes":[]},{"id":979,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":442494,"byte_end":442506,"line_start":291,"line_end":291,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3673}],"docs":"","sig":null,"attributes":[]},{"id":980,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":443103,"byte_end":443117,"line_start":311,"line_end":311,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3686},{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":981,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":443338,"byte_end":443352,"line_start":320,"line_end":320,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3693}],"docs":"","sig":null,"attributes":[]},{"id":982,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":443551,"byte_end":443565,"line_start":328,"line_end":328,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3699}],"docs":"","sig":null,"attributes":[]},{"id":983,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":443869,"byte_end":443875,"line_start":342,"line_end":342,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3709}],"docs":"","sig":null,"attributes":[]},{"id":984,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":443970,"byte_end":443976,"line_start":347,"line_end":347,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3714}],"docs":"","sig":null,"attributes":[]},{"id":990,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486551,"byte_end":8486556,"line_start":25,"line_end":25,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11131}],"docs":"","sig":null,"attributes":[]},{"id":991,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486889,"byte_end":8486894,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":11134}],"docs":"","sig":null,"attributes":[]},{"id":992,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486987,"byte_end":8486992,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11137}],"docs":"","sig":null,"attributes":[]},{"id":993,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8487130,"byte_end":8487136,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":11145},{"krate":0,"index":11146}],"docs":"","sig":null,"attributes":[]},{"id":994,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8487680,"byte_end":8487685,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":11151},{"krate":0,"index":11152}],"docs":"","sig":null,"attributes":[]},{"id":995,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488261,"byte_end":8488266,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":11155},{"krate":0,"index":11156},{"krate":0,"index":11157},{"krate":0,"index":11158},{"krate":0,"index":11159}],"docs":"","sig":null,"attributes":[]},{"id":996,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8491415,"byte_end":8491430,"line_start":188,"line_end":188,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11168}],"docs":"","sig":null,"attributes":[]},{"id":997,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8491940,"byte_end":8491955,"line_start":204,"line_end":204,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11171}],"docs":"","sig":null,"attributes":[]},{"id":998,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8492072,"byte_end":8492087,"line_start":210,"line_end":210,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11175},{"krate":0,"index":11176}],"docs":"","sig":null,"attributes":[]},{"id":999,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8493316,"byte_end":8493331,"line_start":246,"line_end":246,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11179}],"docs":"","sig":null,"attributes":[]},{"id":1000,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8493933,"byte_end":8493943,"line_start":265,"line_end":265,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":11187}],"docs":"","sig":null,"attributes":[]},{"id":1001,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494933,"byte_end":8494943,"line_start":295,"line_end":295,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":11192}],"docs":"","sig":null,"attributes":[]},{"id":1002,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495188,"byte_end":8495198,"line_start":304,"line_end":304,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11195}],"docs":"","sig":null,"attributes":[]},{"id":1003,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495296,"byte_end":8495306,"line_start":310,"line_end":310,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11198},{"krate":0,"index":11199}],"docs":"","sig":null,"attributes":[]},{"id":1004,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495447,"byte_end":8495457,"line_start":317,"line_end":317,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11202}],"docs":"","sig":null,"attributes":[]},{"id":1005,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495871,"byte_end":8495887,"line_start":330,"line_end":330,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11213}],"docs":"","sig":null,"attributes":[]},{"id":1006,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496995,"byte_end":8497011,"line_start":361,"line_end":361,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":11219}],"docs":"","sig":null,"attributes":[]},{"id":1007,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8497276,"byte_end":8497292,"line_start":370,"line_end":370,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":11223}],"docs":"","sig":null,"attributes":[]},{"id":1008,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8497404,"byte_end":8497420,"line_start":376,"line_end":376,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":11227},{"krate":0,"index":11228}],"docs":"","sig":null,"attributes":[]},{"id":1009,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8497563,"byte_end":8497579,"line_start":383,"line_end":383,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":11232}],"docs":"","sig":null,"attributes":[]},{"id":1010,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8497856,"byte_end":8497861,"line_start":391,"line_end":391,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1011,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8497907,"byte_end":8497912,"line_start":392,"line_end":392,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1012,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8498079,"byte_end":8498094,"line_start":396,"line_end":396,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1013,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8498198,"byte_end":8498213,"line_start":398,"line_end":398,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1014,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8498417,"byte_end":8498427,"line_start":402,"line_end":402,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1015,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8498477,"byte_end":8498487,"line_start":403,"line_end":403,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1016,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8498548,"byte_end":8498564,"line_start":404,"line_end":404,"column_start":51,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1017,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8498628,"byte_end":8498644,"line_start":405,"line_end":405,"column_start":51,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1018,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8500598,"byte_end":8500603,"line_start":47,"line_end":47,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1019,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8500640,"byte_end":8500645,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1020,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8500661,"byte_end":8500667,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11277},{"krate":0,"index":11278},{"krate":0,"index":11280},{"krate":0,"index":11281}],"docs":"","sig":null,"attributes":[]},{"id":1021,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8506298,"byte_end":8506303,"line_start":187,"line_end":187,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":11284}],"docs":"","sig":null,"attributes":[]},{"id":1022,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8506425,"byte_end":8506430,"line_start":193,"line_end":193,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":11287}],"docs":"","sig":null,"attributes":[]},{"id":1023,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8506708,"byte_end":8506720,"line_start":203,"line_end":203,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11295}],"docs":"","sig":null,"attributes":[]},{"id":1024,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8506910,"byte_end":8506922,"line_start":211,"line_end":211,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11298}],"docs":"","sig":null,"attributes":[]},{"id":1025,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8507143,"byte_end":8507155,"line_start":218,"line_end":218,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1026,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8507487,"byte_end":8507498,"line_start":230,"line_end":230,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11303},{"krate":0,"index":11304}],"docs":"","sig":null,"attributes":[]},{"id":1027,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8507661,"byte_end":8507672,"line_start":237,"line_end":237,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11307}],"docs":"","sig":null,"attributes":[]},{"id":1028,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8507810,"byte_end":8507821,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":11310}],"docs":"","sig":null,"attributes":[]},{"id":1029,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8508173,"byte_end":8508184,"line_start":252,"line_end":252,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":11313}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11721,"byte_end":11727,"line_start":304,"line_end":304,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11803,"byte_end":11809,"line_start":307,"line_end":307,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":982}},{"kind":"Mod","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":139127,"byte_end":139144,"line_start":90,"line_end":90,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":10004}},{"kind":"Mod","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11995,"byte_end":11999,"line_start":315,"line_end":315,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2658}},{"kind":"Mod","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12010,"byte_end":12015,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2697}},{"kind":"Mod","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12117,"byte_end":12119,"line_start":324,"line_end":324,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":2699}},{"kind":"Mod","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12343,"byte_end":12347,"line_start":334,"line_end":334,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":11102}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35079,"byte_end":35086,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35213,"byte_end":35220,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3715},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35454,"byte_end":35461,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3715},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":36266,"byte_end":36273,"line_start":61,"line_end":61,"column_start":27,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3715},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":36507,"byte_end":36514,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3715},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39610,"byte_end":39614,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39716,"byte_end":39720,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41444,"byte_end":41448,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3788},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41557,"byte_end":41561,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3788},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42557,"byte_end":42577,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42709,"byte_end":42712,"line_start":33,"line_end":33,"column_start":14,"column_end":17},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42887,"byte_end":42890,"line_start":40,"line_end":40,"column_start":33,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3832},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":43154,"byte_end":43157,"line_start":52,"line_end":52,"column_start":28,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3832},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":45056,"byte_end":45067,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/catch_unwind.rs","byte_start":45221,"byte_end":45232,"line_start":21,"line_end":21,"column_start":22,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4448},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46412,"byte_end":46418,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46461,"byte_end":46467,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46725,"byte_end":46730,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":187},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":46957,"byte_end":46962,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":187},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47059,"byte_end":47064,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":187},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47308,"byte_end":47314,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":47780,"byte_end":47786,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":48478,"byte_end":48483,"line_start":112,"line_end":112,"column_start":11,"column_end":16},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":50180,"byte_end":50186,"line_start":161,"line_end":161,"column_start":27,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":183},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":50338,"byte_end":50344,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":51882,"byte_end":51887,"line_start":217,"line_end":217,"column_start":23,"column_end":28},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":237},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":53674,"byte_end":53680,"line_start":276,"line_end":276,"column_start":21,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":53874,"byte_end":53880,"line_start":288,"line_end":288,"column_start":20,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/shared.rs","byte_start":54308,"byte_end":54316,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":191},"to":{"krate":17,"index":260}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18656,"byte_end":18657,"line_start":115,"line_end":115,"column_start":31,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":254},"to":{"krate":0,"index":255}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18788,"byte_end":18794,"line_start":119,"line_end":119,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":8329},"to":{"krate":0,"index":255}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76250,"byte_end":76260,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76425,"byte_end":76435,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4492},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":76541,"byte_end":76551,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4492},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77189,"byte_end":77199,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77329,"byte_end":77339,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4536},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":77592,"byte_end":77602,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4536},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":78659,"byte_end":78669,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4536},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":78922,"byte_end":78932,"line_start":78,"line_end":78,"column_start":22,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4536},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82470,"byte_end":82483,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82616,"byte_end":82629,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4609},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":82885,"byte_end":82898,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4609},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59219,"byte_end":59222,"line_start":133,"line_end":133,"column_start":48,"column_end":51},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":402}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59305,"byte_end":59314,"line_start":136,"line_end":136,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":15,"index":32},"to":{"krate":0,"index":402}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84293,"byte_end":84297,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5596},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":84870,"byte_end":84874,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5596},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":85006,"byte_end":85010,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5596},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":85587,"byte_end":85594,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5602},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86145,"byte_end":86152,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5602},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86297,"byte_end":86304,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5602},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":86331,"byte_end":86338,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5602},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":87624,"byte_end":87633,"line_start":45,"line_end":45,"column_start":19,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":89070,"byte_end":89079,"line_start":84,"line_end":84,"column_start":35,"column_end":44},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5608},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":89295,"byte_end":89304,"line_start":93,"line_end":93,"column_start":30,"column_end":39},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5608},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":90708,"byte_end":90720,"line_start":30,"line_end":30,"column_start":22,"column_end":34},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":92184,"byte_end":92196,"line_start":69,"line_end":69,"column_start":38,"column_end":50},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5670},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":92424,"byte_end":92436,"line_start":78,"line_end":78,"column_start":33,"column_end":45},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5670},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":93982,"byte_end":93994,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5732},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":94327,"byte_end":94339,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5732},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":94522,"byte_end":94534,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5732},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":94944,"byte_end":94950,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95620,"byte_end":95626,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":95768,"byte_end":95774,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96251,"byte_end":96256,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96435,"byte_end":96440,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5779},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96472,"byte_end":96477,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5779},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":96574,"byte_end":96579,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5779},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":103871,"byte_end":103878,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":689},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":105543,"byte_end":105550,"line_start":89,"line_end":89,"column_start":20,"column_end":27},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":689},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs","byte_start":106247,"byte_end":106254,"line_start":116,"line_end":116,"column_start":37,"column_end":44},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":689},"to":{"krate":2,"index":4895}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":106724,"byte_end":106730,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":6173},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":108090,"byte_end":108096,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":6173},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":108799,"byte_end":108805,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":6173},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":109342,"byte_end":109351,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":6181},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":110331,"byte_end":110340,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":6181},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_all.rs","byte_start":111046,"byte_end":111055,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":6181},"to":{"krate":2,"index":4895}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":119272,"byte_end":119282,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":832},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":121044,"byte_end":121054,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":832},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join_all.rs","byte_start":122227,"byte_end":122237,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":832},"to":{"krate":2,"index":4895}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":122719,"byte_end":122728,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":6549},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":124434,"byte_end":124443,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6549},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":125796,"byte_end":125804,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":6557},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":126774,"byte_end":126782,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":6557},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select_ok.rs","byte_start":128226,"byte_end":128234,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":6557},"to":{"krate":2,"index":4895}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":128881,"byte_end":128887,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129272,"byte_end":129278,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129659,"byte_end":129665,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":129906,"byte_end":129912,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6563},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":130282,"byte_end":130288,"line_start":71,"line_end":71,"column_start":28,"column_end":34},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6563},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":130564,"byte_end":130570,"line_start":84,"line_end":84,"column_start":23,"column_end":29},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6563},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":130953,"byte_end":130959,"line_start":101,"line_end":101,"column_start":28,"column_end":34},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6563},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":132841,"byte_end":132847,"line_start":172,"line_end":172,"column_start":30,"column_end":36},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6563},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":133986,"byte_end":133992,"line_start":212,"line_end":212,"column_start":31,"column_end":37},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6563},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":135467,"byte_end":135473,"line_start":262,"line_end":262,"column_start":30,"column_end":36},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6563},"to":{"krate":22,"index":25}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":135945,"byte_end":135951,"line_start":281,"line_end":281,"column_start":33,"column_end":39},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":6563},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8347654,"byte_end":8347663,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":11656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8348965,"byte_end":8348976,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8350852,"byte_end":8350859,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6693},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8351042,"byte_end":8351049,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6693},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8351075,"byte_end":8351084,"line_start":135,"line_end":135,"column_start":22,"column_end":31},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":11656},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/abortable.rs","byte_start":8352058,"byte_end":8352069,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":186120,"byte_end":186125,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":186394,"byte_end":186399,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6706},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":186604,"byte_end":186609,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6706},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188207,"byte_end":188214,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188525,"byte_end":188532,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6763},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":188708,"byte_end":188715,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6763},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189668,"byte_end":189674,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":189949,"byte_end":189955,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6819},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":190764,"byte_end":190770,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6819},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191450,"byte_end":191459,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191692,"byte_end":191701,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6864},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":191819,"byte_end":191828,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6864},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193265,"byte_end":193271,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":6913},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":193663,"byte_end":193669,"line_start":40,"line_end":40,"column_start":18,"column_end":24},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":6913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":194063,"byte_end":194069,"line_start":57,"line_end":57,"column_start":34,"column_end":40},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":6913},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":194337,"byte_end":194343,"line_start":67,"line_end":67,"column_start":29,"column_end":35},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":6913},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196544,"byte_end":196553,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6986},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":196850,"byte_end":196859,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":197160,"byte_end":197169,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6986},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":197446,"byte_end":197455,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6986},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199584,"byte_end":199591,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":7056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199760,"byte_end":199767,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7056},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":199959,"byte_end":199966,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7056},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201457,"byte_end":201461,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7177},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":201817,"byte_end":201821,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":7177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":202154,"byte_end":202158,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":7177},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":202405,"byte_end":202409,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7177},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":203978,"byte_end":203985,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":7256},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":204278,"byte_end":204285,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":204579,"byte_end":204586,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":7256},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":204837,"byte_end":204844,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":7256},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":205940,"byte_end":205944,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":7322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":206445,"byte_end":206449,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":7322},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":206547,"byte_end":206551,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":7322},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":207787,"byte_end":207799,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":7371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210313,"byte_end":210325,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":7371},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":210445,"byte_end":210457,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":7371},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":211316,"byte_end":211319,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":7453},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":211534,"byte_end":211537,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":7453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":211711,"byte_end":211714,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":7453},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":211888,"byte_end":211891,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":7453},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":213062,"byte_end":213066,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":7602},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":213117,"byte_end":213121,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":7602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":213272,"byte_end":213276,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":7602},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":213415,"byte_end":213419,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":7602},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":214068,"byte_end":214082,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":7610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":214243,"byte_end":214257,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":7610},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":214401,"byte_end":214415,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":7610},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":215601,"byte_end":215609,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":7618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":216835,"byte_end":216843,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":7618},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":216985,"byte_end":216993,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":7618},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218198,"byte_end":218202,"line_start":114,"line_end":114,"column_start":25,"column_end":29},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":7668},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218473,"byte_end":218477,"line_start":126,"line_end":126,"column_start":34,"column_end":38},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":7668},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":218588,"byte_end":218592,"line_start":132,"line_end":132,"column_start":25,"column_end":29},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":7668},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":219449,"byte_end":219453,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":7716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":219681,"byte_end":219685,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":7716},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":219803,"byte_end":219807,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":7716},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":221480,"byte_end":221489,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":7765},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":221941,"byte_end":221950,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":7765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":222379,"byte_end":222388,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":7765},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":222648,"byte_end":222657,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":7765},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":224998,"byte_end":225002,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":7841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":225212,"byte_end":225216,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":7841},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":226255,"byte_end":226259,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":7841},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":227217,"byte_end":227226,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":7890},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":227674,"byte_end":227683,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":7890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":228105,"byte_end":228114,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":7890},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":229723,"byte_end":229732,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":7890},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":231055,"byte_end":231064,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":7966},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":231391,"byte_end":231400,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":7966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":233593,"byte_end":233602,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":7966},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":234672,"byte_end":234681,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":7966},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":235566,"byte_end":235570,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":8029},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":235860,"byte_end":235864,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":8029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":236173,"byte_end":236177,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":8029},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":236415,"byte_end":236419,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":8029},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":238330,"byte_end":238333,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":8099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":240084,"byte_end":240087,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":8099},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":240278,"byte_end":240281,"line_start":75,"line_end":75,"column_start":27,"column_end":30},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":8099},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":242952,"byte_end":242958,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":8162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":243469,"byte_end":243475,"line_start":41,"line_end":41,"column_start":29,"column_end":35},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":8162},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chunks.rs","byte_start":245142,"byte_end":245148,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":8162},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":246088,"byte_end":246099,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":8214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":246464,"byte_end":246475,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":8214},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/ready_chunks.rs","byte_start":248592,"byte_end":248603,"line_start":97,"line_end":97,"column_start":39,"column_end":50},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":8214},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":249544,"byte_end":249548,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":8266},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":250034,"byte_end":250038,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":8266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":250202,"byte_end":250206,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":8266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":250673,"byte_end":250677,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":8266},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":251940,"byte_end":251944,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":8266},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8382943,"byte_end":8382958,"line_start":25,"line_end":25,"column_start":25,"column_end":40},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":11612},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8383290,"byte_end":8383305,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":11612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8383718,"byte_end":8383733,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":11612},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffer_unordered.rs","byte_start":8385260,"byte_end":8385275,"line_start":108,"line_end":108,"column_start":26,"column_end":41},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":11612},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8386316,"byte_end":8386324,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":11567},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8386671,"byte_end":8386679,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":11567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/buffered.rs","byte_start":8387016,"byte_end":8387024,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":11567},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8389390,"byte_end":8389407,"line_start":22,"line_end":22,"column_start":33,"column_end":50},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":11499},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8389753,"byte_end":8389770,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":11499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8390241,"byte_end":8390258,"line_start":52,"line_end":52,"column_start":34,"column_end":51},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":11499},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each_concurrent.rs","byte_start":8390500,"byte_end":8390517,"line_start":62,"line_end":62,"column_start":29,"column_end":46},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":11499},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":252937,"byte_end":252948,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":8449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":253158,"byte_end":253169,"line_start":26,"line_end":26,"column_start":42,"column_end":53},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":8449},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/catch_unwind.rs","byte_start":254116,"byte_end":254127,"line_start":63,"line_end":63,"column_start":52,"column_end":63},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":8449},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145315,"byte_end":145316,"line_start":194,"line_end":194,"column_start":31,"column_end":32},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":1799},"to":{"krate":0,"index":1800}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145459,"byte_end":145465,"line_start":198,"line_end":198,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":15,"index":68},"to":{"krate":0,"index":1800}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":285331,"byte_end":285338,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":8500},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":285631,"byte_end":285638,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":8500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":285931,"byte_end":285938,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":8500},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":287152,"byte_end":287159,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":8500},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":288054,"byte_end":288064,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":8798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":288263,"byte_end":288273,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":8798},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":288394,"byte_end":288404,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":8798},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":289469,"byte_end":289475,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":8995},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":289767,"byte_end":289773,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":8995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":290063,"byte_end":290069,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":8995},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":291417,"byte_end":291423,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":8995},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":292339,"byte_end":292346,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":9065},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":292400,"byte_end":292407,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":9065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":292573,"byte_end":292580,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":9065},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":292722,"byte_end":292729,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":9065},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":293471,"byte_end":293481,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":9073},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":293777,"byte_end":293787,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":9073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":294101,"byte_end":294111,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":9073},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":295488,"byte_end":295497,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":9139},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":295893,"byte_end":295902,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":9139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":296206,"byte_end":296215,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":9139},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":296484,"byte_end":296493,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":9139},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":298666,"byte_end":298678,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":9212},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":298978,"byte_end":298990,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":9212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":299195,"byte_end":299207,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":9212},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":299497,"byte_end":299509,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":9212},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":301679,"byte_end":301689,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":9282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":301954,"byte_end":301964,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":9282},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":302210,"byte_end":302220,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":9282},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":303816,"byte_end":303826,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":9332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":304018,"byte_end":304028,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":9332},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":304216,"byte_end":304226,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":9332},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":305237,"byte_end":305246,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":9388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":305512,"byte_end":305521,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":9388},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":306759,"byte_end":306766,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":9433},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":307125,"byte_end":307132,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":9433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":307490,"byte_end":307497,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":9433},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":307763,"byte_end":307770,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":9433},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311576,"byte_end":311585,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":9512},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":311886,"byte_end":311895,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":9512},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":313633,"byte_end":313645,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":9577},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":314101,"byte_end":314113,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":9577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":314562,"byte_end":314574,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":9577},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":316127,"byte_end":316139,"line_start":106,"line_end":106,"column_start":34,"column_end":46},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":9577},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8412221,"byte_end":8412239,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":11450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8412598,"byte_end":8412616,"line_start":40,"line_end":40,"column_start":21,"column_end":39},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":11450},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8414829,"byte_end":8414849,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":11382},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8415214,"byte_end":8415234,"line_start":38,"line_end":38,"column_start":34,"column_end":54},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":11382},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8415485,"byte_end":8415505,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":11382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8415997,"byte_end":8416017,"line_start":64,"line_end":64,"column_start":29,"column_end":49},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":11382},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":317204,"byte_end":317217,"line_start":21,"line_end":21,"column_start":20,"column_end":33},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":9723},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":317433,"byte_end":317446,"line_start":35,"line_end":35,"column_start":10,"column_end":23},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":9723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":317700,"byte_end":317713,"line_start":48,"line_end":48,"column_start":24,"column_end":37},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":9723},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":319581,"byte_end":319594,"line_start":103,"line_end":103,"column_start":25,"column_end":38},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":9723},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_async_read.rs","byte_start":320256,"byte_end":320269,"line_start":131,"line_end":131,"column_start":27,"column_end":40},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":9723},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258690,"byte_end":258691,"line_start":128,"line_end":128,"column_start":46,"column_end":47},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":2363},"to":{"krate":0,"index":2364}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":258772,"byte_end":258781,"line_start":131,"line_end":131,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":15,"index":97},"to":{"krate":0,"index":2364}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322379,"byte_end":322383,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":9742},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":322989,"byte_end":322993,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":9742},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":324127,"byte_end":324133,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":9748},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":324160,"byte_end":324166,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":9748},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":324473,"byte_end":324479,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":9748},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":325091,"byte_end":325096,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":9754},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":325128,"byte_end":325133,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":9754},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":325218,"byte_end":325223,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":9754},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":326282,"byte_end":326286,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":9760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":326415,"byte_end":326419,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":9760},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":327059,"byte_end":327063,"line_start":64,"line_end":64,"column_start":35,"column_end":39},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":9760},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327673,"byte_end":327680,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":9802},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327712,"byte_end":327719,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":9802},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":327804,"byte_end":327811,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":9802},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328336,"byte_end":328342,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":2561},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":328373,"byte_end":328379,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":2561},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":329121,"byte_end":329127,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":2561},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":330493,"byte_end":330499,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":9808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":331973,"byte_end":331979,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":9808},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":332197,"byte_end":332203,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":9808},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":335516,"byte_end":335522,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":9869},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":335825,"byte_end":335831,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":9869},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":336057,"byte_end":336063,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":9869},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8422567,"byte_end":8422579,"line_start":21,"line_end":21,"column_start":23,"column_end":35},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":11336},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8422684,"byte_end":8422696,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":11336},"to":{"krate":2,"index":1658}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8422727,"byte_end":8422739,"line_start":29,"line_end":29,"column_start":24,"column_end":36},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":11336},"to":{"krate":2,"index":1690}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8422862,"byte_end":8422874,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":11336},"to":{"krate":2,"index":1679}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8423055,"byte_end":8423067,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":11336},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425684,"byte_end":8425698,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":9969},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8425724,"byte_end":8425738,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":9969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8427362,"byte_end":8427376,"line_start":146,"line_end":146,"column_start":31,"column_end":45},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":9969},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8427494,"byte_end":8427508,"line_start":152,"line_end":152,"column_start":30,"column_end":44},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":9969},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8428692,"byte_end":8428706,"line_start":190,"line_end":190,"column_start":29,"column_end":43},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":9969},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8428872,"byte_end":8428886,"line_start":196,"line_end":196,"column_start":41,"column_end":55},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":9969},"to":{"krate":2,"index":4895}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_ordered.rs","byte_start":8429144,"byte_end":8429158,"line_start":206,"line_end":206,"column_start":35,"column_end":49},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":9969},"to":{"krate":2,"index":4908}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/abort.rs","byte_start":8455354,"byte_end":8455365,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":10042},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8456537,"byte_end":8456547,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":10287},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8457404,"byte_end":8457414,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":10287},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8457462,"byte_end":8457469,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":10297},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8457733,"byte_end":8457740,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":10297},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8457781,"byte_end":8457791,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":10306},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8458708,"byte_end":8458718,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":10306},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8458766,"byte_end":8458770,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":10317},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/iter.rs","byte_start":8459026,"byte_end":8459030,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":10317},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8460519,"byte_end":8460523,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":10106},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8460558,"byte_end":8460562,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":10106},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8460594,"byte_end":8460598,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":781}},"from":{"krate":0,"index":10106},"to":{"krate":17,"index":260}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8461675,"byte_end":8461679,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":10106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/task.rs","byte_start":8462691,"byte_end":8462695,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":10106},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8464145,"byte_end":8464160,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":10153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8466010,"byte_end":8466025,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":10153},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432404,"byte_end":8432420,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":10171},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432461,"byte_end":8432477,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":10171},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432506,"byte_end":8432522,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":10171},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432547,"byte_end":8432563,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":10171},"to":{"krate":17,"index":10}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8432760,"byte_end":8432776,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":10171},"to":{"krate":17,"index":13}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8434495,"byte_end":8434511,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":10171},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8434614,"byte_end":8434630,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":10171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8446290,"byte_end":8446306,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":10171},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8450703,"byte_end":8450707,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":10208},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8453045,"byte_end":8453061,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"kind":{"Impl":{"id":795}},"from":{"krate":0,"index":10171},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8453208,"byte_end":8453224,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"kind":{"Impl":{"id":796}},"from":{"krate":0,"index":10171},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8454664,"byte_end":8454680,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":10171},"to":{"krate":2,"index":4895}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8454936,"byte_end":8454952,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":10171},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/futures_unordered/mod.rs","byte_start":8455074,"byte_end":8455090,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":10171},"to":{"krate":2,"index":4908}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467842,"byte_end":8467851,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":10252},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8467996,"byte_end":8468005,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":10252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8469055,"byte_end":8469064,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":10252},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8469177,"byte_end":8469186,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"kind":{"Impl":{"id":803}},"from":{"krate":0,"index":10252},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8469993,"byte_end":8470002,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":10252},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8470978,"byte_end":8470987,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":10252},"to":{"krate":2,"index":4895}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select_all.rs","byte_start":8471132,"byte_end":8471141,"line_start":135,"line_end":135,"column_start":41,"column_end":50},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":10252},"to":{"krate":2,"index":4908}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":337928,"byte_end":337930,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":2670},"to":{"krate":0,"index":2673}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":337985,"byte_end":337987,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":2672},"to":{"krate":0,"index":2676}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":338066,"byte_end":338071,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":17,"index":10},"to":{"krate":0,"index":2673}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":340726,"byte_end":340736,"line_start":95,"line_end":95,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":17,"index":13},"to":{"krate":0,"index":2676}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":367928,"byte_end":367938,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":10332},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":368375,"byte_end":368385,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":10332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":368902,"byte_end":368912,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":10332},"to":{"krate":1,"index":3020}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":369452,"byte_end":369462,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":10332},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":370211,"byte_end":370221,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":10332},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":370941,"byte_end":370951,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":10332},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":371539,"byte_end":371549,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":10332},"to":{"krate":1,"index":3038}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":371688,"byte_end":371698,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":10332},"to":{"krate":22,"index":25}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":371936,"byte_end":371946,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":10332},"to":{"krate":1,"index":3044}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/allow_std.rs","byte_start":372157,"byte_end":372167,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":10332},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":373888,"byte_end":373897,"line_start":39,"line_end":39,"column_start":20,"column_end":29},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":10369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":375165,"byte_end":375174,"line_start":81,"line_end":81,"column_start":34,"column_end":43},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":10369},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":376786,"byte_end":376795,"line_start":125,"line_end":125,"column_start":37,"column_end":46},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":10369},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":377660,"byte_end":377669,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":10369},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":377747,"byte_end":377756,"line_start":155,"line_end":155,"column_start":36,"column_end":45},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":10369},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_reader.rs","byte_start":378072,"byte_end":378081,"line_start":164,"line_end":164,"column_start":46,"column_end":55},"kind":{"Impl":{"id":829}},"from":{"krate":0,"index":10369},"to":{"krate":22,"index":25}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":381900,"byte_end":381909,"line_start":38,"line_end":38,"column_start":21,"column_end":30},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":10426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":383496,"byte_end":383505,"line_start":92,"line_end":92,"column_start":36,"column_end":45},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":10426},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":384928,"byte_end":384937,"line_start":135,"line_end":135,"column_start":34,"column_end":43},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":10426},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":385018,"byte_end":385027,"line_start":139,"line_end":139,"column_start":40,"column_end":49},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":10426},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":385108,"byte_end":385117,"line_start":143,"line_end":143,"column_start":36,"column_end":45},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":10426},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/buf_writer.rs","byte_start":385476,"byte_end":385485,"line_start":153,"line_end":153,"column_start":47,"column_end":56},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":10426},"to":{"krate":22,"index":25}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":386365,"byte_end":386370,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":10479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":387768,"byte_end":387773,"line_start":66,"line_end":66,"column_start":27,"column_end":32},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":10479},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":388103,"byte_end":388108,"line_start":80,"line_end":80,"column_start":26,"column_end":31},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":10479},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/chain.rs","byte_start":389551,"byte_end":389556,"line_start":134,"line_end":134,"column_start":29,"column_end":34},"kind":{"Impl":{"id":849}},"from":{"krate":0,"index":10479},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":390762,"byte_end":390767,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":10539},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":390820,"byte_end":390825,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":10539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/close.rs","byte_start":390968,"byte_end":390973,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":852}},"from":{"krate":0,"index":10539},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy.rs","byte_start":392721,"byte_end":392725,"line_start":53,"line_end":53,"column_start":63,"column_end":67},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":10547},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/copy_buf.rs","byte_start":394420,"byte_end":394427,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"kind":{"Impl":{"id":864}},"from":{"krate":0,"index":10611},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":396308,"byte_end":396314,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":865}},"from":{"krate":0,"index":10682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399542,"byte_end":399548,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"kind":{"Impl":{"id":866}},"from":{"krate":0,"index":10682},"to":{"krate":22,"index":25}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":399835,"byte_end":399841,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"kind":{"Impl":{"id":867}},"from":{"krate":0,"index":10682},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":400473,"byte_end":400479,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"kind":{"Impl":{"id":868}},"from":{"krate":0,"index":10682},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":401628,"byte_end":401634,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"kind":{"Impl":{"id":869}},"from":{"krate":0,"index":10682},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":401709,"byte_end":401715,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"kind":{"Impl":{"id":870}},"from":{"krate":0,"index":10682},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":401793,"byte_end":401799,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"kind":{"Impl":{"id":871}},"from":{"krate":0,"index":10682},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/cursor.rs","byte_start":401872,"byte_end":401878,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"kind":{"Impl":{"id":872}},"from":{"krate":0,"index":10682},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":402861,"byte_end":402866,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":873}},"from":{"krate":0,"index":3016},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":403214,"byte_end":403219,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":874}},"from":{"krate":0,"index":3016},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/empty.rs","byte_start":403451,"byte_end":403456,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":875}},"from":{"krate":0,"index":3016},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":403942,"byte_end":403947,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":876}},"from":{"krate":0,"index":10710},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":404000,"byte_end":404005,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":877}},"from":{"krate":0,"index":10710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/flush.rs","byte_start":404119,"byte_end":404124,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":878}},"from":{"krate":0,"index":10710},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":404867,"byte_end":404872,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"kind":{"Impl":{"id":884}},"from":{"krate":0,"index":10718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/lines.rs","byte_start":405092,"byte_end":405097,"line_start":34,"line_end":34,"column_start":34,"column_end":39},"kind":{"Impl":{"id":885}},"from":{"krate":0,"index":10718},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":406105,"byte_end":406109,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":886}},"from":{"krate":0,"index":10769},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":406161,"byte_end":406165,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":887}},"from":{"krate":0,"index":10769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read.rs","byte_start":406330,"byte_end":406334,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":888}},"from":{"krate":0,"index":10769},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":407022,"byte_end":407034,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":889}},"from":{"krate":0,"index":10778},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":407086,"byte_end":407098,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":890}},"from":{"krate":0,"index":10778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_vectored.rs","byte_start":407277,"byte_end":407289,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":891}},"from":{"krate":0,"index":10778},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":407959,"byte_end":407968,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"kind":{"Impl":{"id":892}},"from":{"krate":0,"index":10787},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":408020,"byte_end":408029,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"kind":{"Impl":{"id":893}},"from":{"krate":0,"index":10787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_exact.rs","byte_start":408199,"byte_end":408208,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"kind":{"Impl":{"id":894}},"from":{"krate":0,"index":10787},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":409325,"byte_end":409333,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"kind":{"Impl":{"id":895}},"from":{"krate":0,"index":10796},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":409388,"byte_end":409396,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"kind":{"Impl":{"id":896}},"from":{"krate":0,"index":10796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_line.rs","byte_start":410423,"byte_end":410431,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"kind":{"Impl":{"id":897}},"from":{"krate":0,"index":10796},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":411161,"byte_end":411170,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":898}},"from":{"krate":0,"index":10807},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":411222,"byte_end":411231,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":899}},"from":{"krate":0,"index":10807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":411512,"byte_end":411517,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":900}},"from":{"krate":0,"index":3168},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_end.rs","byte_start":413067,"byte_end":413076,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":901}},"from":{"krate":0,"index":10807},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":413924,"byte_end":413936,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"kind":{"Impl":{"id":902}},"from":{"krate":0,"index":10817},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":413988,"byte_end":414000,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"kind":{"Impl":{"id":903}},"from":{"krate":0,"index":10817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_to_string.rs","byte_start":415034,"byte_end":415046,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"kind":{"Impl":{"id":904}},"from":{"krate":0,"index":10817},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":415841,"byte_end":415850,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":905}},"from":{"krate":0,"index":10828},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":415905,"byte_end":415914,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"kind":{"Impl":{"id":906}},"from":{"krate":0,"index":10828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/read_until.rs","byte_start":416886,"byte_end":416895,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"kind":{"Impl":{"id":907}},"from":{"krate":0,"index":10828},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":418094,"byte_end":418100,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":908}},"from":{"krate":0,"index":3240},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/repeat.rs","byte_start":418880,"byte_end":418886,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"kind":{"Impl":{"id":909}},"from":{"krate":0,"index":3240},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":419400,"byte_end":419404,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":910}},"from":{"krate":0,"index":10839},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":419456,"byte_end":419460,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":911}},"from":{"krate":0,"index":10839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/seek.rs","byte_start":419617,"byte_end":419621,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":912}},"from":{"krate":0,"index":10839},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":420750,"byte_end":420754,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":913}},"from":{"krate":0,"index":3282},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/sink.rs","byte_start":421472,"byte_end":421476,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":914}},"from":{"krate":0,"index":3282},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":422481,"byte_end":422489,"line_start":36,"line_end":36,"column_start":16,"column_end":24},"kind":{"Impl":{"id":915}},"from":{"krate":0,"index":10848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":422987,"byte_end":422996,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"kind":{"Impl":{"id":916}},"from":{"krate":0,"index":10854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":423388,"byte_end":423396,"line_start":56,"line_end":56,"column_start":34,"column_end":42},"kind":{"Impl":{"id":917}},"from":{"krate":0,"index":10848},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":423861,"byte_end":423870,"line_start":70,"line_end":70,"column_start":36,"column_end":45},"kind":{"Impl":{"id":918}},"from":{"krate":0,"index":10854},"to":{"krate":22,"index":20}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":424847,"byte_end":424859,"line_start":96,"line_end":96,"column_start":24,"column_end":36},"kind":{"Impl":{"id":919}},"from":{"krate":0,"index":3339},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":425049,"byte_end":425061,"line_start":104,"line_end":104,"column_start":26,"column_end":38},"kind":{"Impl":{"id":920}},"from":{"krate":0,"index":3339},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/split.rs","byte_start":425295,"byte_end":425307,"line_start":111,"line_end":111,"column_start":47,"column_end":59},"kind":{"Impl":{"id":921}},"from":{"krate":0,"index":3339},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":425849,"byte_end":425853,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"kind":{"Impl":{"id":927}},"from":{"krate":0,"index":10860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":427780,"byte_end":427784,"line_start":85,"line_end":85,"column_start":34,"column_end":38},"kind":{"Impl":{"id":928}},"from":{"krate":0,"index":10860},"to":{"krate":22,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/take.rs","byte_start":428465,"byte_end":428469,"line_start":111,"line_end":111,"column_start":40,"column_end":44},"kind":{"Impl":{"id":929}},"from":{"krate":0,"index":10860},"to":{"krate":22,"index":27}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":430390,"byte_end":430396,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":930}},"from":{"krate":0,"index":10911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":432499,"byte_end":432505,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"kind":{"Impl":{"id":931}},"from":{"krate":0,"index":10911},"to":{"krate":2,"index":1836}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/window.rs","byte_start":432652,"byte_end":432658,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"kind":{"Impl":{"id":932}},"from":{"krate":0,"index":10911},"to":{"krate":2,"index":1839}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":433179,"byte_end":433184,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":933}},"from":{"krate":0,"index":10918},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":433237,"byte_end":433242,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":934}},"from":{"krate":0,"index":10918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write.rs","byte_start":433404,"byte_end":433409,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":935}},"from":{"krate":0,"index":10918},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":434093,"byte_end":434106,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":936}},"from":{"krate":0,"index":10927},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":434159,"byte_end":434172,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":937}},"from":{"krate":0,"index":10927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_vectored.rs","byte_start":434345,"byte_end":434358,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":938}},"from":{"krate":0,"index":10927},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":435025,"byte_end":435033,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"kind":{"Impl":{"id":939}},"from":{"krate":0,"index":10936},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":435086,"byte_end":435094,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"kind":{"Impl":{"id":940}},"from":{"krate":0,"index":10936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/write_all.rs","byte_start":435260,"byte_end":435268,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"kind":{"Impl":{"id":941}},"from":{"krate":0,"index":10936},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":346898,"byte_end":346907,"line_start":133,"line_end":133,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":22,"index":17},"to":{"krate":0,"index":3462}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":354880,"byte_end":354881,"line_start":382,"line_end":382,"column_start":46,"column_end":47},"kind":{"Impl":{"id":942}},"from":{"krate":0,"index":3478},"to":{"krate":0,"index":3462}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":354984,"byte_end":354994,"line_start":385,"line_end":385,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":22,"index":20},"to":{"krate":0,"index":3479}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":360927,"byte_end":360928,"line_start":566,"line_end":566,"column_start":48,"column_end":49},"kind":{"Impl":{"id":943}},"from":{"krate":0,"index":3489},"to":{"krate":0,"index":3479}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361029,"byte_end":361038,"line_start":569,"line_end":569,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":22,"index":25},"to":{"krate":0,"index":3490}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361462,"byte_end":361463,"line_start":582,"line_end":582,"column_start":46,"column_end":47},"kind":{"Impl":{"id":944}},"from":{"krate":0,"index":3493},"to":{"krate":0,"index":3490}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":361570,"byte_end":361582,"line_start":585,"line_end":585,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":22,"index":27},"to":{"krate":0,"index":3494}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/io/mod.rs","byte_start":366992,"byte_end":366993,"line_start":733,"line_end":733,"column_start":52,"column_end":53},"kind":{"Impl":{"id":945}},"from":{"krate":0,"index":3501},"to":{"krate":0,"index":3494}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":436030,"byte_end":436031,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":946}},"from":{"krate":0,"index":3517},"to":{"krate":0,"index":3512}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":436169,"byte_end":436176,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":3512},"to":{"krate":0,"index":3522}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":436265,"byte_end":436266,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":947}},"from":{"krate":0,"index":3526},"to":{"krate":0,"index":3522}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":436451,"byte_end":436457,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":3522},"to":{"krate":0,"index":3530}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":436535,"byte_end":436536,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":948}},"from":{"krate":0,"index":3534},"to":{"krate":0,"index":3530}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":437551,"byte_end":437555,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":949}},"from":{"krate":0,"index":3539},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":437649,"byte_end":437653,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":950}},"from":{"krate":0,"index":3539},"to":{"krate":0,"index":3512}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":437912,"byte_end":437919,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":956}},"from":{"krate":0,"index":10963},"to":{"krate":0,"index":3512}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":438142,"byte_end":438149,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":957}},"from":{"krate":0,"index":10963},"to":{"krate":0,"index":3522}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":438340,"byte_end":438347,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":958}},"from":{"krate":0,"index":10963},"to":{"krate":0,"index":3530}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":438652,"byte_end":438665,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":959}},"from":{"krate":0,"index":10984},"to":{"krate":0,"index":3512}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":439001,"byte_end":439010,"line_start":143,"line_end":143,"column_start":27,"column_end":36},"kind":{"Impl":{"id":965}},"from":{"krate":0,"index":11000},"to":{"krate":0,"index":3512}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":439211,"byte_end":439220,"line_start":153,"line_end":153,"column_start":26,"column_end":35},"kind":{"Impl":{"id":966}},"from":{"krate":0,"index":11000},"to":{"krate":0,"index":3522}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":439399,"byte_end":439408,"line_start":162,"line_end":162,"column_start":23,"column_end":32},"kind":{"Impl":{"id":967}},"from":{"krate":0,"index":11000},"to":{"krate":0,"index":3530}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":439728,"byte_end":439735,"line_start":178,"line_end":178,"column_start":41,"column_end":48},"kind":{"Impl":{"id":968}},"from":{"krate":0,"index":11015},"to":{"krate":0,"index":3512}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":439954,"byte_end":439961,"line_start":187,"line_end":187,"column_start":40,"column_end":47},"kind":{"Impl":{"id":969}},"from":{"krate":0,"index":11015},"to":{"krate":0,"index":3522}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":440139,"byte_end":440146,"line_start":195,"line_end":195,"column_start":37,"column_end":44},"kind":{"Impl":{"id":970}},"from":{"krate":0,"index":11015},"to":{"krate":0,"index":3530}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":440447,"byte_end":440455,"line_start":210,"line_end":210,"column_start":41,"column_end":49},"kind":{"Impl":{"id":971}},"from":{"krate":0,"index":11030},"to":{"krate":0,"index":3512}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":440678,"byte_end":440686,"line_start":219,"line_end":219,"column_start":40,"column_end":48},"kind":{"Impl":{"id":972}},"from":{"krate":0,"index":11030},"to":{"krate":0,"index":3522}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":440868,"byte_end":440876,"line_start":227,"line_end":227,"column_start":37,"column_end":45},"kind":{"Impl":{"id":973}},"from":{"krate":0,"index":11030},"to":{"krate":0,"index":3530}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":441186,"byte_end":441197,"line_start":242,"line_end":242,"column_start":49,"column_end":60},"kind":{"Impl":{"id":974}},"from":{"krate":0,"index":11045},"to":{"krate":0,"index":3512}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":441434,"byte_end":441445,"line_start":251,"line_end":251,"column_start":48,"column_end":59},"kind":{"Impl":{"id":975}},"from":{"krate":0,"index":11045},"to":{"krate":0,"index":3522}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":441660,"byte_end":441671,"line_start":259,"line_end":259,"column_start":45,"column_end":56},"kind":{"Impl":{"id":976}},"from":{"krate":0,"index":11045},"to":{"krate":0,"index":3530}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":442016,"byte_end":442028,"line_start":274,"line_end":274,"column_start":49,"column_end":61},"kind":{"Impl":{"id":977}},"from":{"krate":0,"index":11057},"to":{"krate":0,"index":3512}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":442266,"byte_end":442278,"line_start":283,"line_end":283,"column_start":48,"column_end":60},"kind":{"Impl":{"id":978}},"from":{"krate":0,"index":11057},"to":{"krate":0,"index":3522}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":442494,"byte_end":442506,"line_start":291,"line_end":291,"column_start":45,"column_end":57},"kind":{"Impl":{"id":979}},"from":{"krate":0,"index":11057},"to":{"krate":0,"index":3530}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":443103,"byte_end":443117,"line_start":311,"line_end":311,"column_start":41,"column_end":55},"kind":{"Impl":{"id":980}},"from":{"krate":0,"index":11069},"to":{"krate":0,"index":3512}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":443338,"byte_end":443352,"line_start":320,"line_end":320,"column_start":40,"column_end":54},"kind":{"Impl":{"id":981}},"from":{"krate":0,"index":11069},"to":{"krate":0,"index":3522}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":443551,"byte_end":443565,"line_start":328,"line_end":328,"column_start":37,"column_end":51},"kind":{"Impl":{"id":982}},"from":{"krate":0,"index":11069},"to":{"krate":0,"index":3530}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":443869,"byte_end":443875,"line_start":342,"line_end":342,"column_start":21,"column_end":27},"kind":{"Impl":{"id":983}},"from":{"krate":0,"index":3703},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":443970,"byte_end":443976,"line_start":347,"line_end":347,"column_start":27,"column_end":33},"kind":{"Impl":{"id":984}},"from":{"krate":0,"index":3703},"to":{"krate":0,"index":3512}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486551,"byte_end":8486556,"line_start":25,"line_end":25,"column_start":32,"column_end":37},"kind":{"Impl":{"id":990}},"from":{"krate":0,"index":11124},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486889,"byte_end":8486894,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"kind":{"Impl":{"id":991}},"from":{"krate":0,"index":11124},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8486987,"byte_end":8486992,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"kind":{"Impl":{"id":992}},"from":{"krate":0,"index":11124},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8487130,"byte_end":8487136,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"kind":{"Impl":{"id":993}},"from":{"krate":0,"index":11138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8487680,"byte_end":8487685,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"kind":{"Impl":{"id":994}},"from":{"krate":0,"index":11124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8488261,"byte_end":8488266,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"kind":{"Impl":{"id":995}},"from":{"krate":0,"index":11124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8491415,"byte_end":8491430,"line_start":188,"line_end":188,"column_start":32,"column_end":47},"kind":{"Impl":{"id":996}},"from":{"krate":0,"index":11161},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8491940,"byte_end":8491955,"line_start":204,"line_end":204,"column_start":33,"column_end":48},"kind":{"Impl":{"id":997}},"from":{"krate":0,"index":11161},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8492072,"byte_end":8492087,"line_start":210,"line_end":210,"column_start":32,"column_end":47},"kind":{"Impl":{"id":998}},"from":{"krate":0,"index":11161},"to":{"krate":2,"index":8329}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8493316,"byte_end":8493331,"line_start":246,"line_end":246,"column_start":26,"column_end":41},"kind":{"Impl":{"id":999}},"from":{"krate":0,"index":11161},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8493933,"byte_end":8493943,"line_start":265,"line_end":265,"column_start":21,"column_end":31},"kind":{"Impl":{"id":1000}},"from":{"krate":0,"index":11180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8494933,"byte_end":8494943,"line_start":295,"line_end":295,"column_start":45,"column_end":55},"kind":{"Impl":{"id":1001}},"from":{"krate":0,"index":11180},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495188,"byte_end":8495198,"line_start":304,"line_end":304,"column_start":26,"column_end":36},"kind":{"Impl":{"id":1002}},"from":{"krate":0,"index":11180},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495296,"byte_end":8495306,"line_start":310,"line_end":310,"column_start":27,"column_end":37},"kind":{"Impl":{"id":1003}},"from":{"krate":0,"index":11180},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495447,"byte_end":8495457,"line_start":317,"line_end":317,"column_start":30,"column_end":40},"kind":{"Impl":{"id":1004}},"from":{"krate":0,"index":11180},"to":{"krate":2,"index":2111}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8495871,"byte_end":8495887,"line_start":330,"line_end":330,"column_start":32,"column_end":48},"kind":{"Impl":{"id":1005}},"from":{"krate":0,"index":11203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8496995,"byte_end":8497011,"line_start":361,"line_end":361,"column_start":56,"column_end":72},"kind":{"Impl":{"id":1006}},"from":{"krate":0,"index":11203},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8497276,"byte_end":8497292,"line_start":370,"line_end":370,"column_start":37,"column_end":53},"kind":{"Impl":{"id":1007}},"from":{"krate":0,"index":11203},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8497404,"byte_end":8497420,"line_start":376,"line_end":376,"column_start":38,"column_end":54},"kind":{"Impl":{"id":1008}},"from":{"krate":0,"index":11203},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8497563,"byte_end":8497579,"line_start":383,"line_end":383,"column_start":41,"column_end":57},"kind":{"Impl":{"id":1009}},"from":{"krate":0,"index":11203},"to":{"krate":2,"index":2111}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8497856,"byte_end":8497861,"line_start":391,"line_end":391,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1010}},"from":{"krate":0,"index":11124},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8497907,"byte_end":8497912,"line_start":392,"line_end":392,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1011}},"from":{"krate":0,"index":11124},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8498079,"byte_end":8498094,"line_start":396,"line_end":396,"column_start":40,"column_end":55},"kind":{"Impl":{"id":1012}},"from":{"krate":0,"index":11161},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8498198,"byte_end":8498213,"line_start":398,"line_end":398,"column_start":33,"column_end":48},"kind":{"Impl":{"id":1013}},"from":{"krate":0,"index":11161},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8498417,"byte_end":8498427,"line_start":402,"line_end":402,"column_start":40,"column_end":50},"kind":{"Impl":{"id":1014}},"from":{"krate":0,"index":11180},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8498477,"byte_end":8498487,"line_start":403,"line_end":403,"column_start":40,"column_end":50},"kind":{"Impl":{"id":1015}},"from":{"krate":0,"index":11180},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8498548,"byte_end":8498564,"line_start":404,"line_end":404,"column_start":51,"column_end":67},"kind":{"Impl":{"id":1016}},"from":{"krate":0,"index":11203},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/mutex.rs","byte_start":8498628,"byte_end":8498644,"line_start":405,"line_end":405,"column_start":51,"column_end":67},"kind":{"Impl":{"id":1017}},"from":{"krate":0,"index":11203},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8500598,"byte_end":8500603,"line_start":47,"line_end":47,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1018}},"from":{"krate":0,"index":11321},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8500640,"byte_end":8500645,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1019}},"from":{"krate":0,"index":11321},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8500661,"byte_end":8500667,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"kind":{"Impl":{"id":1020}},"from":{"krate":0,"index":11315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8506298,"byte_end":8506303,"line_start":187,"line_end":187,"column_start":16,"column_end":21},"kind":{"Impl":{"id":1021}},"from":{"krate":0,"index":11321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8506425,"byte_end":8506430,"line_start":193,"line_end":193,"column_start":18,"column_end":23},"kind":{"Impl":{"id":1022}},"from":{"krate":0,"index":11321},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8506708,"byte_end":8506720,"line_start":203,"line_end":203,"column_start":24,"column_end":36},"kind":{"Impl":{"id":1023}},"from":{"krate":0,"index":11288},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8506910,"byte_end":8506922,"line_start":211,"line_end":211,"column_start":26,"column_end":38},"kind":{"Impl":{"id":1024}},"from":{"krate":0,"index":11288},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8507143,"byte_end":8507155,"line_start":218,"line_end":218,"column_start":47,"column_end":59},"kind":{"Impl":{"id":1025}},"from":{"krate":0,"index":11288},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8507487,"byte_end":8507498,"line_start":230,"line_end":230,"column_start":19,"column_end":30},"kind":{"Impl":{"id":1026}},"from":{"krate":0,"index":11328},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8507661,"byte_end":8507672,"line_start":237,"line_end":237,"column_start":29,"column_end":40},"kind":{"Impl":{"id":1027}},"from":{"krate":0,"index":11328},"to":{"krate":2,"index":2111}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8507810,"byte_end":8507821,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"kind":{"Impl":{"id":1028}},"from":{"krate":0,"index":11328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lock/bilock.rs","byte_start":8508173,"byte_end":8508184,"line_start":252,"line_end":252,"column_start":18,"column_end":29},"kind":{"Impl":{"id":1029}},"from":{"krate":0,"index":11328},"to":{"krate":2,"index":2122}}]}