{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15","program":"/home/catry/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","json","/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=6c94ae6f3c41e6fe","-C","extra-filename=-6c94ae6f3c41e6fe","--out-dir","/home/catry/project/TriImage-Downloader/target/rls/debug/deps","-L","dependency=/home/catry/project/TriImage-Downloader/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/catry/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/catry/project/TriImage-Downloader/target/rls/debug/deps/libjson-6c94ae6f3c41e6fe.rmeta"},"prelude":{"crate_id":{"name":"json","disambiguator":[14183449460240479069,16552435710740438979]},"crate_root":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src","external_crates":[{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}}],"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":0,"byte_end":8231,"line_start":1,"line_end":337,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":816},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4972,"byte_end":4977,"line_start":211,"line_end":211,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":791},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4994,"byte_end":5003,"line_start":212,"line_end":212,"column_start":16,"column_end":25},"alias_span":null,"name":"JsonValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":792},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5031,"byte_end":5035,"line_start":213,"line_end":213,"column_start":27,"column_end":31},"alias_span":null,"name":"Null","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":793},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5031,"byte_end":5035,"line_start":213,"line_end":213,"column_start":27,"column_end":31},"alias_span":null,"name":"Null","value":"","parent":{"krate":0,"index":613}},{"kind":"Use","ref_id":{"krate":0,"index":816},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5831,"byte_end":5836,"line_start":237,"line_end":237,"column_start":9,"column_end":14},"alias_span":null,"name":"JsonError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":614},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5924,"byte_end":5930,"line_start":240,"line_end":240,"column_start":9,"column_end":15},"alias_span":null,"name":"JsonResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5963,"byte_end":5968,"line_start":242,"line_end":242,"column_start":17,"column_end":22},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":0,"byte_end":8231,"line_start":1,"line_end":337,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":98},{"krate":0,"index":155},{"krate":0,"index":332},{"krate":0,"index":345},{"krate":0,"index":399},{"krate":0,"index":430},{"krate":0,"index":553},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":1141},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":633}],"decl_id":null,"docs":" ![](http://terhix.com/doc/json-rust-logo-small.png)","sig":null,"attributes":[{"value":"! ![](http://terhix.com/doc/json-rust-logo-small.png)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":0,"byte_end":55,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":56,"byte_end":59,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # json-rust","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":60,"byte_end":75,"line_start":3,"line_end":3,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":76,"byte_end":79,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Parse and serialize [JSON](http://json.org/) with ease.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":80,"byte_end":139,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":140,"byte_end":143,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! **[Changelog](https://github.com/maciejhirsz/json-rust/releases) -**","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":144,"byte_end":216,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"! **[Complete Documentation](http://terhix.com/doc/json/) -**","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":217,"byte_end":280,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"! **[Cargo](https://crates.io/crates/json) -**","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":281,"byte_end":329,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"! **[Repository](https://github.com/maciejhirsz/json-rust)**","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":330,"byte_end":392,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":393,"byte_end":396,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! ## Why?","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":397,"byte_end":408,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":409,"byte_end":412,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! JSON is a very loose format where anything goes - arrays can hold mixed","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":413,"byte_end":488,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"! types, object keys can change types between API calls or not include","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":489,"byte_end":561,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"! some keys under some conditions. Mapping that to idiomatic Rust structs","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":562,"byte_end":637,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"! introduces friction.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":638,"byte_end":662,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":663,"byte_end":666,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! This crate intends to avoid that friction.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":667,"byte_end":713,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":714,"byte_end":717,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":718,"byte_end":729,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"! # #[macro_use] extern crate json;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":730,"byte_end":767,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"! # fn main() {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":768,"byte_end":785,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"! let parsed = json::parse(r#\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":786,"byte_end":818,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":819,"byte_end":822,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":823,"byte_end":828,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"!     \"code\": 200,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":829,"byte_end":849,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"!     \"success\": true,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":850,"byte_end":874,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"!     \"payload\": {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":875,"byte_end":895,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"!         \"features\": [","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":896,"byte_end":921,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"!             \"awesome\",","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":922,"byte_end":948,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"!             \"easyAPI\",","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":949,"byte_end":975,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"!             \"lowLearningCurve\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":976,"byte_end":1010,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"!         ]","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1011,"byte_end":1024,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1025,"byte_end":1034,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1035,"byte_end":1040,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1041,"byte_end":1044,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! \"#).unwrap();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1045,"byte_end":1062,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1063,"byte_end":1066,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! let instantiated = object!{","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1067,"byte_end":1098,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"!     \"code\" => 200,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1099,"byte_end":1121,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"!     \"success\" => true,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1122,"byte_end":1148,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"!     \"payload\" => object!{","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1149,"byte_end":1178,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"!         \"features\" => array![","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1179,"byte_end":1212,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"!             \"awesome\",","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1213,"byte_end":1239,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"!             \"easyAPI\",","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1240,"byte_end":1266,"line_start":46,"line_end":46,"column_start":1,"column_end":27}},{"value":"!             \"lowLearningCurve\"","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1267,"byte_end":1301,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"!         ]","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1302,"byte_end":1315,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1316,"byte_end":1325,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"! };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1326,"byte_end":1332,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1333,"byte_end":1336,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! assert_eq!(parsed, instantiated);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1337,"byte_end":1374,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"! # }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1375,"byte_end":1382,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1383,"byte_end":1390,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1391,"byte_end":1394,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ## First class citizen","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1395,"byte_end":1421,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1422,"byte_end":1425,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! Using macros and indexing, it's easy to work with the data.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1426,"byte_end":1489,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1490,"byte_end":1493,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1494,"byte_end":1505,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"! # #[macro_use] extern crate json;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1506,"byte_end":1543,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"! # fn main() {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1544,"byte_end":1561,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"! let mut data = object!{","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1562,"byte_end":1589,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"!     \"foo\" => false,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1590,"byte_end":1613,"line_start":64,"line_end":64,"column_start":1,"column_end":24}},{"value":"!     \"bar\" => json::Null,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1614,"byte_end":1642,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"!     \"answer\" => 42,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1643,"byte_end":1666,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"!     \"list\" => array![json::Null, \"world\", true]","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1667,"byte_end":1718,"line_start":67,"line_end":67,"column_start":1,"column_end":52}},{"value":"! };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1719,"byte_end":1725,"line_start":68,"line_end":68,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1726,"byte_end":1729,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! // Partial equality is implemented for most raw types:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1730,"byte_end":1788,"line_start":70,"line_end":70,"column_start":1,"column_end":59}},{"value":"! assert!(data[\"foo\"] == false);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1789,"byte_end":1823,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1824,"byte_end":1827,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! // And it's type aware, `null` and `false` are different values:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1828,"byte_end":1896,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"! assert!(data[\"bar\"] != false);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1897,"byte_end":1931,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1932,"byte_end":1935,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! // But you can use any Rust number types:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1936,"byte_end":1981,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"! assert!(data[\"answer\"] == 42);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":1982,"byte_end":2016,"line_start":77,"line_end":77,"column_start":1,"column_end":35}},{"value":"! assert!(data[\"answer\"] == 42.0);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2017,"byte_end":2053,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"! assert!(data[\"answer\"] == 42isize);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2054,"byte_end":2093,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2094,"byte_end":2097,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! // Access nested structures, arrays and objects:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2098,"byte_end":2150,"line_start":81,"line_end":81,"column_start":1,"column_end":53}},{"value":"! assert!(data[\"list\"][0].is_null());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2151,"byte_end":2190,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"! assert!(data[\"list\"][1] == \"world\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2191,"byte_end":2231,"line_start":83,"line_end":83,"column_start":1,"column_end":41}},{"value":"! assert!(data[\"list\"][2] == true);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2232,"byte_end":2269,"line_start":84,"line_end":84,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2270,"byte_end":2273,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! // Error resilient - accessing properties that don't exist yield null:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2274,"byte_end":2348,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"! assert!(data[\"this\"][\"does\"][\"not\"][\"exist\"].is_null());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2349,"byte_end":2409,"line_start":87,"line_end":87,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2410,"byte_end":2413,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! // Mutate by assigning:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2414,"byte_end":2441,"line_start":89,"line_end":89,"column_start":1,"column_end":28}},{"value":"! data[\"list\"][0] = \"Hello\".into();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2442,"byte_end":2479,"line_start":90,"line_end":90,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2480,"byte_end":2483,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! // Use the `dump` method to serialize the data:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2484,"byte_end":2535,"line_start":92,"line_end":92,"column_start":1,"column_end":52}},{"value":"! assert_eq!(data.dump(), r#\"{\"foo\":false,\"bar\":null,\"answer\":42,\"list\":[\"Hello\",\"world\",true]}\"#);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2536,"byte_end":2637,"line_start":93,"line_end":93,"column_start":1,"column_end":102}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2638,"byte_end":2641,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! // Or pretty print it out:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2642,"byte_end":2672,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"! println!(\"{:#}\", data);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2673,"byte_end":2700,"line_start":96,"line_end":96,"column_start":1,"column_end":28}},{"value":"! # }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2701,"byte_end":2708,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2709,"byte_end":2716,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2717,"byte_end":2720,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! ## Serialize with `json::stringify(value)`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2721,"byte_end":2767,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2768,"byte_end":2771,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! Primitives:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2772,"byte_end":2787,"line_start":102,"line_end":102,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2788,"byte_end":2791,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2792,"byte_end":2799,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"! // str slices","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2800,"byte_end":2817,"line_start":105,"line_end":105,"column_start":1,"column_end":18}},{"value":"! assert_eq!(json::stringify(\"foobar\"), \"\\\"foobar\\\"\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2818,"byte_end":2874,"line_start":106,"line_end":106,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2875,"byte_end":2878,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! // Owned strings","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2879,"byte_end":2899,"line_start":108,"line_end":108,"column_start":1,"column_end":21}},{"value":"! assert_eq!(json::stringify(\"foobar\".to_string()), \"\\\"foobar\\\"\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2900,"byte_end":2968,"line_start":109,"line_end":109,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2969,"byte_end":2972,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! // Any number types","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2973,"byte_end":2996,"line_start":111,"line_end":111,"column_start":1,"column_end":24}},{"value":"! assert_eq!(json::stringify(42), \"42\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":2997,"byte_end":3039,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3040,"byte_end":3043,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! // Booleans","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3044,"byte_end":3059,"line_start":114,"line_end":114,"column_start":1,"column_end":16}},{"value":"! assert_eq!(json::stringify(true), \"true\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3060,"byte_end":3106,"line_start":115,"line_end":115,"column_start":1,"column_end":47}},{"value":"! assert_eq!(json::stringify(false), \"false\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3107,"byte_end":3155,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3156,"byte_end":3163,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3164,"byte_end":3167,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! Explicit `null` type `json::Null`:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3168,"byte_end":3206,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3207,"byte_end":3210,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3211,"byte_end":3218,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"! assert_eq!(json::stringify(json::Null), \"null\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3219,"byte_end":3271,"line_start":122,"line_end":122,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3272,"byte_end":3279,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3280,"byte_end":3283,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! Optional types:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3284,"byte_end":3303,"line_start":125,"line_end":125,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3304,"byte_end":3307,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3308,"byte_end":3315,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"! let value: Option<String> = Some(\"foo\".to_string());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3316,"byte_end":3372,"line_start":128,"line_end":128,"column_start":1,"column_end":57}},{"value":"! assert_eq!(json::stringify(value), \"\\\"foo\\\"\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3373,"byte_end":3423,"line_start":129,"line_end":129,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3424,"byte_end":3427,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! let no_value: Option<String> = None;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3428,"byte_end":3468,"line_start":131,"line_end":131,"column_start":1,"column_end":41}},{"value":"! assert_eq!(json::stringify(no_value), \"null\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3469,"byte_end":3519,"line_start":132,"line_end":132,"column_start":1,"column_end":51}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3520,"byte_end":3527,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3528,"byte_end":3531,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! Vector:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3532,"byte_end":3543,"line_start":135,"line_end":135,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3544,"byte_end":3547,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3548,"byte_end":3555,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"! let data = vec![1,2,3];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3556,"byte_end":3583,"line_start":138,"line_end":138,"column_start":1,"column_end":28}},{"value":"! assert_eq!(json::stringify(data), \"[1,2,3]\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3584,"byte_end":3633,"line_start":139,"line_end":139,"column_start":1,"column_end":50}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3634,"byte_end":3641,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3642,"byte_end":3645,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! Vector with optional values:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3646,"byte_end":3678,"line_start":142,"line_end":142,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3679,"byte_end":3682,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3683,"byte_end":3690,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"! let data = vec![Some(1), None, Some(2), None, Some(3)];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3691,"byte_end":3750,"line_start":145,"line_end":145,"column_start":1,"column_end":60}},{"value":"! assert_eq!(json::stringify(data), \"[1,null,2,null,3]\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3751,"byte_end":3810,"line_start":146,"line_end":146,"column_start":1,"column_end":60}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3811,"byte_end":3818,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3819,"byte_end":3822,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! Pushing to arrays:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3823,"byte_end":3845,"line_start":149,"line_end":149,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3846,"byte_end":3849,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3850,"byte_end":3857,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"! let mut data = json::JsonValue::new_array();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3858,"byte_end":3906,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3907,"byte_end":3910,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! data.push(10);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3911,"byte_end":3929,"line_start":154,"line_end":154,"column_start":1,"column_end":19}},{"value":"! data.push(\"foo\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3930,"byte_end":3951,"line_start":155,"line_end":155,"column_start":1,"column_end":22}},{"value":"! data.push(false);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3952,"byte_end":3973,"line_start":156,"line_end":156,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3974,"byte_end":3977,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! assert_eq!(data.dump(), r#\"[10,\"foo\",false]\"#);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":3978,"byte_end":4029,"line_start":158,"line_end":158,"column_start":1,"column_end":52}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4030,"byte_end":4037,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4038,"byte_end":4041,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! Putting fields on objects:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4042,"byte_end":4072,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4073,"byte_end":4076,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4077,"byte_end":4084,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"! let mut data = json::JsonValue::new_object();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4085,"byte_end":4134,"line_start":164,"line_end":164,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4135,"byte_end":4138,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! data[\"answer\"] = 42.into();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4139,"byte_end":4170,"line_start":166,"line_end":166,"column_start":1,"column_end":32}},{"value":"! data[\"foo\"] = \"bar\".into();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4171,"byte_end":4202,"line_start":167,"line_end":167,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4203,"byte_end":4206,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! assert_eq!(data.dump(), r#\"{\"answer\":42,\"foo\":\"bar\"}\"#);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4207,"byte_end":4267,"line_start":169,"line_end":169,"column_start":1,"column_end":61}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4268,"byte_end":4275,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4276,"byte_end":4279,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! `array!` macro:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4280,"byte_end":4299,"line_start":172,"line_end":172,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4300,"byte_end":4303,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4304,"byte_end":4311,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"! # #[macro_use] extern crate json;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4312,"byte_end":4349,"line_start":175,"line_end":175,"column_start":1,"column_end":38}},{"value":"! # fn main() {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4350,"byte_end":4367,"line_start":176,"line_end":176,"column_start":1,"column_end":18}},{"value":"! let data = array![\"foo\", \"bar\", 100, true, json::Null];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4368,"byte_end":4427,"line_start":177,"line_end":177,"column_start":1,"column_end":60}},{"value":"! assert_eq!(data.dump(), r#\"[\"foo\",\"bar\",100,true,null]\"#);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4428,"byte_end":4490,"line_start":178,"line_end":178,"column_start":1,"column_end":63}},{"value":"! # }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4491,"byte_end":4498,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4499,"byte_end":4506,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4507,"byte_end":4510,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"! `object!` macro:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4511,"byte_end":4531,"line_start":182,"line_end":182,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4532,"byte_end":4535,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4536,"byte_end":4543,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"! # #[macro_use] extern crate json;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4544,"byte_end":4581,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"! # fn main() {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4582,"byte_end":4599,"line_start":186,"line_end":186,"column_start":1,"column_end":18}},{"value":"! let data = object!{","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4600,"byte_end":4623,"line_start":187,"line_end":187,"column_start":1,"column_end":24}},{"value":"!     \"name\"    => \"John Doe\",","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4624,"byte_end":4656,"line_start":188,"line_end":188,"column_start":1,"column_end":33}},{"value":"!     \"age\"     => 30,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4657,"byte_end":4681,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"!     \"canJSON\" => true","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4682,"byte_end":4707,"line_start":190,"line_end":190,"column_start":1,"column_end":26}},{"value":"! };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4708,"byte_end":4714,"line_start":191,"line_end":191,"column_start":1,"column_end":7}},{"value":"! assert_eq!(","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4715,"byte_end":4730,"line_start":192,"line_end":192,"column_start":1,"column_end":16}},{"value":"!     data.dump(),","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4731,"byte_end":4751,"line_start":193,"line_end":193,"column_start":1,"column_end":21}},{"value":"!     r#\"{\"name\":\"John Doe\",\"age\":30,\"canJSON\":true}\"#","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4752,"byte_end":4808,"line_start":194,"line_end":194,"column_start":1,"column_end":57}},{"value":"! );","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4809,"byte_end":4815,"line_start":195,"line_end":195,"column_start":1,"column_end":7}},{"value":"! # }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4816,"byte_end":4823,"line_start":196,"line_end":196,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4824,"byte_end":4831,"line_start":197,"line_end":197,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":9884,"byte_end":9885,"line_start":42,"line_end":42,"column_start":10,"column_end":11},"name":"T","qualname":"::codegen::Generator::T","value":"type T: Write;","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/parser.rs","byte_start":44990,"byte_end":44995,"line_start":772,"line_end":772,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::parse","value":"pub fn parse(&str) -> Result<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/parser.rs","byte_start":44973,"byte_end":44982,"line_start":771,"line_end":771,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":792},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":46149,"byte_end":46153,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Null","qualname":"::value::JsonValue::Null","value":"JsonValue::Null","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":794},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":46159,"byte_end":46164,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"Short","qualname":"::value::JsonValue::Short","value":"JsonValue::Short(Short)","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":797},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":46177,"byte_end":46183,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"String","qualname":"::value::JsonValue::String","value":"JsonValue::String(String)","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":800},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":46197,"byte_end":46203,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Number","qualname":"::value::JsonValue::Number","value":"JsonValue::Number(Number)","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":803},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":46217,"byte_end":46224,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::value::JsonValue::Boolean","value":"JsonValue::Boolean(bool)","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":806},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":46236,"byte_end":46242,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Object","qualname":"::value::JsonValue::Object","value":"JsonValue::Object(Object)","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":809},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":46256,"byte_end":46261,"line_start":45,"line_end":45,"column_start":5,"column_end":10},"name":"Array","qualname":"::value::JsonValue::Array","value":"JsonValue::Array(Vec<JsonValue>)","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":791},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":46133,"byte_end":46142,"line_start":38,"line_end":38,"column_start":10,"column_end":19},"name":"JsonValue","qualname":"::value::JsonValue","value":"pub enum JsonValue {\n    Null,\n    Short(Short),\n    String(String),\n    Number(Number),\n    Boolean(bool),\n    Object(Object),\n    Array(Vec<JsonValue>),\n}","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48002,"byte_end":48012,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"new_object","qualname":"<JsonValue>::new_object","value":"pub fn new_object() -> JsonValue","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `JsonValue::Object` instance.\n When creating an object with data, consider using the `object!` macro.\n","sig":null,"attributes":[{"value":"/ Create an empty `JsonValue::Object` instance.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":47862,"byte_end":47911,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/ When creating an object with data, consider using the `object!` macro.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":47916,"byte_end":47990,"line_start":98,"line_end":98,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48216,"byte_end":48225,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"new_array","qualname":"<JsonValue>::new_array","value":"pub fn new_array() -> JsonValue","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `JsonValue::Array` instance.\n When creating array with data, consider using the `array!` macro.\n","sig":null,"attributes":[{"value":"/ Create an empty `JsonValue::Array` instance.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48082,"byte_end":48130,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/ When creating array with data, consider using the `array!` macro.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48135,"byte_end":48204,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48343,"byte_end":48347,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"dump","qualname":"<JsonValue>::dump","value":"pub fn dump(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Prints out the value as JSON string.\n","sig":null,"attributes":[{"value":"/ Prints out the value as JSON string.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48291,"byte_end":48331,"line_start":109,"line_end":109,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48631,"byte_end":48637,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"pretty","qualname":"<JsonValue>::pretty","value":"pub fn pretty(&Self, u16) -> String","parent":null,"children":[],"decl_id":null,"docs":" Pretty prints out the value as JSON string. Takes an argument that's\n number of spaces to indent new blocks with.\n","sig":null,"attributes":[{"value":"/ Pretty prints out the value as JSON string. Takes an argument that's","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48495,"byte_end":48567,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ number of spaces to indent new blocks with.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48572,"byte_end":48619,"line_start":117,"line_end":117,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":49060,"byte_end":49069,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"to_writer","qualname":"<JsonValue>::to_writer","value":"pub fn to_writer<W: Write>(&Self, &mut W)","parent":null,"children":[],"decl_id":null,"docs":" Writes the JSON as byte stream into an implementor of `std::io::Write`.","sig":null,"attributes":[{"value":"/ Writes the JSON as byte stream into an implementor of `std::io::Write`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48806,"byte_end":48881,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48886,"byte_end":48889,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This method is deprecated as it will panic on io errors, use `write` instead.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48894,"byte_end":48975,"line_start":126,"line_end":126,"column_start":5,"column_end":86}},{"value":"deprecated(since = \"0.10.2\", note = \"use `JsonValue::write` instead\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":48980,"byte_end":49048,"line_start":127,"line_end":127,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":49306,"byte_end":49311,"line_start":134,"line_end":134,"column_start":12,"column_end":17},"name":"write","qualname":"<JsonValue>::write","value":"pub fn write<W: Write>(&Self, &mut W) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the JSON as byte stream into an implementor of `std::io::Write`.\n","sig":null,"attributes":[{"value":"/ Writes the JSON as byte stream into an implementor of `std::io::Write`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":49219,"byte_end":49294,"line_start":133,"line_end":133,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":49544,"byte_end":49556,"line_start":140,"line_end":140,"column_start":12,"column_end":24},"name":"write_pretty","qualname":"<JsonValue>::write_pretty","value":"pub fn write_pretty<W: Write>(&Self, &mut W, u16) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the JSON as byte stream into an implementor of `std::io::Write`.\n","sig":null,"attributes":[{"value":"/ Writes the JSON as byte stream into an implementor of `std::io::Write`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":49457,"byte_end":49532,"line_start":139,"line_end":139,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":49736,"byte_end":49745,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"is_string","qualname":"<JsonValue>::is_string","value":"pub fn is_string(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":49940,"byte_end":49949,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"is_number","qualname":"<JsonValue>::is_number","value":"pub fn is_number(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50102,"byte_end":50112,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"is_boolean","qualname":"<JsonValue>::is_boolean","value":"pub fn is_boolean(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50266,"byte_end":50273,"line_start":167,"line_end":167,"column_start":12,"column_end":19},"name":"is_null","qualname":"<JsonValue>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50416,"byte_end":50425,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"is_object","qualname":"<JsonValue>::is_object","value":"pub fn is_object(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50578,"byte_end":50586,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"is_array","qualname":"<JsonValue>::is_array","value":"pub fn is_array(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50970,"byte_end":50978,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<JsonValue>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the value is empty. Returns true for:","sig":null,"attributes":[{"value":"/ Checks whether the value is empty. Returns true for:","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50730,"byte_end":50786,"line_start":188,"line_end":188,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50791,"byte_end":50794,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ - empty string (`\"\"`)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50799,"byte_end":50824,"line_start":190,"line_end":190,"column_start":5,"column_end":30}},{"value":"/ - number `0`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50829,"byte_end":50845,"line_start":191,"line_end":191,"column_start":5,"column_end":21}},{"value":"/ - boolean `false`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50850,"byte_end":50871,"line_start":192,"line_end":192,"column_start":5,"column_end":26}},{"value":"/ - null","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50876,"byte_end":50886,"line_start":193,"line_end":193,"column_start":5,"column_end":15}},{"value":"/ - empty array (`array![]`)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50891,"byte_end":50921,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/ - empty object (`object!{}`)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":50926,"byte_end":50958,"line_start":195,"line_end":195,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":51465,"byte_end":51471,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"as_str","qualname":"<JsonValue>::as_str","value":"pub fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":51710,"byte_end":51719,"line_start":216,"line_end":216,"column_start":12,"column_end":21},"name":"as_number","qualname":"<JsonValue>::as_number","value":"pub fn as_number(&Self) -> Option<Number>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":51895,"byte_end":51901,"line_start":223,"line_end":223,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<JsonValue>::as_f64","value":"pub fn as_f64(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":51995,"byte_end":52001,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"as_f32","qualname":"<JsonValue>::as_f32","value":"pub fn as_f32(&Self) -> Option<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":52095,"byte_end":52101,"line_start":231,"line_end":231,"column_start":12,"column_end":18},"name":"as_u64","qualname":"<JsonValue>::as_u64","value":"pub fn as_u64(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":52332,"byte_end":52338,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"as_u32","qualname":"<JsonValue>::as_u32","value":"pub fn as_u32(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":52458,"byte_end":52464,"line_start":245,"line_end":245,"column_start":12,"column_end":18},"name":"as_u16","qualname":"<JsonValue>::as_u16","value":"pub fn as_u16(&Self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":52584,"byte_end":52589,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"as_u8","qualname":"<JsonValue>::as_u8","value":"pub fn as_u8(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":52707,"byte_end":52715,"line_start":253,"line_end":253,"column_start":12,"column_end":20},"name":"as_usize","qualname":"<JsonValue>::as_usize","value":"pub fn as_usize(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":52839,"byte_end":52845,"line_start":257,"line_end":257,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<JsonValue>::as_i64","value":"pub fn as_i64(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":52939,"byte_end":52945,"line_start":261,"line_end":261,"column_start":12,"column_end":18},"name":"as_i32","qualname":"<JsonValue>::as_i32","value":"pub fn as_i32(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53063,"byte_end":53069,"line_start":265,"line_end":265,"column_start":12,"column_end":18},"name":"as_i16","qualname":"<JsonValue>::as_i16","value":"pub fn as_i16(&Self) -> Option<i16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53187,"byte_end":53192,"line_start":269,"line_end":269,"column_start":12,"column_end":17},"name":"as_i8","qualname":"<JsonValue>::as_i8","value":"pub fn as_i8(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53308,"byte_end":53316,"line_start":273,"line_end":273,"column_start":12,"column_end":20},"name":"as_isize","qualname":"<JsonValue>::as_isize","value":"pub fn as_isize(&Self) -> Option<isize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53438,"byte_end":53445,"line_start":277,"line_end":277,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<JsonValue>::as_bool","value":"pub fn as_bool(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54361,"byte_end":54379,"line_start":301,"line_end":301,"column_start":12,"column_end":30},"name":"as_fixed_point_u64","qualname":"<JsonValue>::as_fixed_point_u64","value":"pub fn as_fixed_point_u64(&Self, u16) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Obtain an integer at a fixed decimal point. This is useful for\n converting monetary values and doing arithmetic on them without\n rounding errors introduced by floating point operations.","sig":null,"attributes":[{"value":"/ Obtain an integer at a fixed decimal point. This is useful for","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53623,"byte_end":53689,"line_start":284,"line_end":284,"column_start":5,"column_end":71}},{"value":"/ converting monetary values and doing arithmetic on them without","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53694,"byte_end":53761,"line_start":285,"line_end":285,"column_start":5,"column_end":72}},{"value":"/ rounding errors introduced by floating point operations.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53766,"byte_end":53826,"line_start":286,"line_end":286,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53831,"byte_end":53834,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Will return `None` if `Number` called on a value that's not a number,","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53839,"byte_end":53912,"line_start":288,"line_end":288,"column_start":5,"column_end":78}},{"value":"/ or if the number is negative or a NaN.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53917,"byte_end":53959,"line_start":289,"line_end":289,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53964,"byte_end":53967,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53972,"byte_end":53979,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ # use json::JsonValue;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":53984,"byte_end":54010,"line_start":292,"line_end":292,"column_start":5,"column_end":31}},{"value":"/ let price_a = JsonValue::from(5.99);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54015,"byte_end":54055,"line_start":293,"line_end":293,"column_start":5,"column_end":45}},{"value":"/ let price_b = JsonValue::from(7);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54060,"byte_end":54097,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/ let price_c = JsonValue::from(10.2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54102,"byte_end":54142,"line_start":295,"line_end":295,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54147,"byte_end":54150,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(price_a.as_fixed_point_u64(2), Some(599));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54155,"byte_end":54212,"line_start":297,"line_end":297,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(price_b.as_fixed_point_u64(2), Some(700));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54217,"byte_end":54274,"line_start":298,"line_end":298,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(price_c.as_fixed_point_u64(2), Some(1020));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54279,"byte_end":54337,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54342,"byte_end":54349,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55003,"byte_end":55021,"line_start":319,"line_end":319,"column_start":12,"column_end":30},"name":"as_fixed_point_i64","qualname":"<JsonValue>::as_fixed_point_i64","value":"pub fn as_fixed_point_i64(&Self, u16) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Analog to `as_fixed_point_u64`, except returning a signed\n `i64`, properly handling negative numbers.","sig":null,"attributes":[{"value":"/ Analog to `as_fixed_point_u64`, except returning a signed","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54585,"byte_end":54646,"line_start":308,"line_end":308,"column_start":5,"column_end":66}},{"value":"/ `i64`, properly handling negative numbers.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54651,"byte_end":54697,"line_start":309,"line_end":309,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54702,"byte_end":54705,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54710,"byte_end":54717,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ # use json::JsonValue;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54722,"byte_end":54748,"line_start":312,"line_end":312,"column_start":5,"column_end":31}},{"value":"/ let balance_a = JsonValue::from(-1.49);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54753,"byte_end":54796,"line_start":313,"line_end":313,"column_start":5,"column_end":48}},{"value":"/ let balance_b = JsonValue::from(42);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54801,"byte_end":54841,"line_start":314,"line_end":314,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54846,"byte_end":54849,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(balance_a.as_fixed_point_i64(2), Some(-149));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54854,"byte_end":54914,"line_start":316,"line_end":316,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(balance_b.as_fixed_point_i64(2), Some(4200));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54919,"byte_end":54979,"line_start":317,"line_end":317,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":54984,"byte_end":54991,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55720,"byte_end":55724,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"take","qualname":"<JsonValue>::take","value":"pub fn take(&mut Self) -> JsonValue","parent":null,"children":[],"decl_id":null,"docs":" Take over the ownership of the value, leaving `Null` in it's place.","sig":null,"attributes":[{"value":"/ Take over the ownership of the value, leaving `Null` in it's place.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55227,"byte_end":55298,"line_start":326,"line_end":326,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55303,"byte_end":55306,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55311,"byte_end":55325,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55330,"byte_end":55333,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55338,"byte_end":55345,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate json;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55350,"byte_end":55387,"line_start":331,"line_end":331,"column_start":5,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55392,"byte_end":55409,"line_start":332,"line_end":332,"column_start":5,"column_end":22}},{"value":"/ let mut data = array![\"Foo\", 42];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55414,"byte_end":55451,"line_start":333,"line_end":333,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55456,"byte_end":55459,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ let first = data[0].take();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55464,"byte_end":55495,"line_start":335,"line_end":335,"column_start":5,"column_end":36}},{"value":"/ let second = data[1].take();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55500,"byte_end":55532,"line_start":336,"line_end":336,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55537,"byte_end":55540,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ assert!(first == \"Foo\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55545,"byte_end":55573,"line_start":338,"line_end":338,"column_start":5,"column_end":33}},{"value":"/ assert!(second == 42);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55578,"byte_end":55604,"line_start":339,"line_end":339,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55609,"byte_end":55612,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert!(data[0].is_null());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55617,"byte_end":55648,"line_start":341,"line_end":341,"column_start":5,"column_end":36}},{"value":"/ assert!(data[1].is_null());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55653,"byte_end":55684,"line_start":342,"line_end":342,"column_start":5,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55689,"byte_end":55696,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55701,"byte_end":55708,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56540,"byte_end":56551,"line_start":371,"line_end":371,"column_start":12,"column_end":23},"name":"take_string","qualname":"<JsonValue>::take_string","value":"pub fn take_string(&mut Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Checks that self is a string, returns an owned Rust `String`, leaving\n `Null` in it's place.","sig":null,"attributes":[{"value":"/ Checks that self is a string, returns an owned Rust `String`, leaving","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55806,"byte_end":55879,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ `Null` in it's place.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55884,"byte_end":55909,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55914,"byte_end":55917,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ - If the contained string is already a heap allocated `String`, then","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55922,"byte_end":55994,"line_start":352,"line_end":352,"column_start":5,"column_end":77}},{"value":"/ the ownership is moved without any heap allocation.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":55999,"byte_end":56054,"line_start":353,"line_end":353,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56059,"byte_end":56062,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ - If the contained string is a `Short`, this will perform a heap","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56067,"byte_end":56135,"line_start":355,"line_end":355,"column_start":5,"column_end":73}},{"value":"/ allocation to convert the types for you.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56140,"byte_end":56184,"line_start":356,"line_end":356,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56189,"byte_end":56192,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56197,"byte_end":56211,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56216,"byte_end":56219,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56224,"byte_end":56231,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate json;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56236,"byte_end":56273,"line_start":361,"line_end":361,"column_start":5,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56278,"byte_end":56295,"line_start":362,"line_end":362,"column_start":5,"column_end":22}},{"value":"/ let mut data = array![\"Hello\", \"World\"];","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56300,"byte_end":56344,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56349,"byte_end":56352,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let owned = data[0].take_string().expect(\"Should be a string\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56357,"byte_end":56424,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56429,"byte_end":56432,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(owned, \"Hello\");","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56437,"byte_end":56468,"line_start":367,"line_end":367,"column_start":5,"column_end":36}},{"value":"/ assert!(data[0].is_null());","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56473,"byte_end":56504,"line_start":368,"line_end":368,"column_start":5,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56509,"byte_end":56516,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56521,"byte_end":56528,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":57066,"byte_end":57070,"line_start":388,"line_end":388,"column_start":12,"column_end":16},"name":"push","qualname":"<JsonValue>::push","value":"pub fn push<T>(&mut Self, T) -> Result<()> where T: Into<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Array` - pushes a new value to the array.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Array` - pushes a new value to the array.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":56988,"byte_end":57054,"line_start":387,"line_end":387,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":57483,"byte_end":57486,"line_start":401,"line_end":401,"column_start":12,"column_end":15},"name":"pop","qualname":"<JsonValue>::pop","value":"pub fn pop(&mut Self) -> JsonValue","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Array` - remove and return last element from\n an array. On failure returns a null.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Array` - remove and return last element from","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":57357,"byte_end":57426,"line_start":399,"line_end":399,"column_start":5,"column_end":74}},{"value":"/ an array. On failure returns a null.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":57431,"byte_end":57471,"line_start":400,"line_end":400,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":57786,"byte_end":57794,"line_start":411,"line_end":411,"column_start":12,"column_end":20},"name":"contains","qualname":"<JsonValue>::contains","value":"pub fn contains<T>(&Self, T) -> bool where T: PartialEq<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Array` - checks if the array contains a value\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Array` - checks if the array contains a value","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":57704,"byte_end":57774,"line_start":410,"line_end":410,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":58104,"byte_end":58111,"line_start":419,"line_end":419,"column_start":12,"column_end":19},"name":"has_key","qualname":"<JsonValue>::has_key","value":"pub fn has_key(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Object` - checks if the object has a key\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Object` - checks if the object has a key","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":58027,"byte_end":58092,"line_start":418,"line_end":418,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":58414,"byte_end":58417,"line_start":428,"line_end":428,"column_start":12,"column_end":15},"name":"len","qualname":"<JsonValue>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns length of array or object (number of keys), defaults to `0` for\n other types.\n","sig":null,"attributes":[{"value":"/ Returns length of array or object (number of keys), defaults to `0` for","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":58306,"byte_end":58381,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ other types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":58386,"byte_end":58402,"line_start":427,"line_end":427,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":58820,"byte_end":58827,"line_start":442,"line_end":442,"column_start":12,"column_end":19},"name":"members","qualname":"<JsonValue>::members","value":"pub fn members(&Self) -> Members","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Array` - returns an iterator over members.\n Will return an empty iterator if called on non-array types.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Array` - returns an iterator over members.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":58673,"byte_end":58740,"line_start":440,"line_end":440,"column_start":5,"column_end":72}},{"value":"/ Will return an empty iterator if called on non-array types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":58745,"byte_end":58808,"line_start":441,"line_end":441,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":59157,"byte_end":59168,"line_start":453,"line_end":453,"column_start":12,"column_end":23},"name":"members_mut","qualname":"<JsonValue>::members_mut","value":"pub fn members_mut(&mut Self) -> MembersMut","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Array` - returns a mutable iterator over members.\n Will return an empty iterator if called on non-array types.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Array` - returns a mutable iterator over members.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":59003,"byte_end":59077,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ Will return an empty iterator if called on non-array types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":59082,"byte_end":59145,"line_start":452,"line_end":452,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":59520,"byte_end":59527,"line_start":464,"line_end":464,"column_start":12,"column_end":19},"name":"entries","qualname":"<JsonValue>::entries","value":"pub fn entries(&Self) -> Entries","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Object` - returns an iterator over key value pairs.\n Will return an empty iterator if called on non-object types.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Object` - returns an iterator over key value pairs.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":59363,"byte_end":59439,"line_start":462,"line_end":462,"column_start":5,"column_end":81}},{"value":"/ Will return an empty iterator if called on non-object types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":59444,"byte_end":59508,"line_start":463,"line_end":463,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":59889,"byte_end":59900,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"entries_mut","qualname":"<JsonValue>::entries_mut","value":"pub fn entries_mut(&mut Self) -> EntriesMut","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Object` - returns a mutable iterator over\n key value pairs.\n Will return an empty iterator if called on non-object types.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Object` - returns a mutable iterator over","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":59717,"byte_end":59783,"line_start":473,"line_end":473,"column_start":5,"column_end":71}},{"value":"/ key value pairs.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":59788,"byte_end":59808,"line_start":474,"line_end":474,"column_start":5,"column_end":25}},{"value":"/ Will return an empty iterator if called on non-object types.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":59813,"byte_end":59877,"line_start":475,"line_end":475,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":60417,"byte_end":60423,"line_start":489,"line_end":489,"column_start":12,"column_end":18},"name":"insert","qualname":"<JsonValue>::insert","value":"pub fn insert<T>(&mut Self, &str, T) -> Result<()> where T: Into<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Object` - inserts a new entry, or override an existing\n one into the object. Note that `key` has to be a `&str` slice and not an owned \n `String`. The internals of `Object` will handle the heap allocation of the key \n if needed for better performance.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Object` - inserts a new entry, or override an existing","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":60108,"byte_end":60187,"line_start":485,"line_end":485,"column_start":5,"column_end":84}},{"value":"/ one into the object. Note that `key` has to be a `&str` slice and not an owned ","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":60192,"byte_end":60275,"line_start":486,"line_end":486,"column_start":5,"column_end":88}},{"value":"/ `String`. The internals of `Object` will handle the heap allocation of the key ","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":60280,"byte_end":60363,"line_start":487,"line_end":487,"column_start":5,"column_end":88}},{"value":"/ if needed for better performance.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":60368,"byte_end":60405,"line_start":488,"line_end":488,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":60940,"byte_end":60946,"line_start":503,"line_end":503,"column_start":12,"column_end":18},"name":"remove","qualname":"<JsonValue>::remove","value":"pub fn remove(&mut Self, &str) -> JsonValue","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Object` - remove a key and return the value it held.\n If the key was not present, the method is called on anything but an\n object, it will return a null.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Object` - remove a key and return the value it held.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":60736,"byte_end":60813,"line_start":500,"line_end":500,"column_start":5,"column_end":82}},{"value":"/ If the key was not present, the method is called on anything but an","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":60818,"byte_end":60889,"line_start":501,"line_end":501,"column_start":5,"column_end":76}},{"value":"/ object, it will return a null.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":60894,"byte_end":60928,"line_start":502,"line_end":502,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":61413,"byte_end":61425,"line_start":515,"line_end":515,"column_start":12,"column_end":24},"name":"array_remove","qualname":"<JsonValue>::array_remove","value":"pub fn array_remove(&mut Self, usize) -> JsonValue","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Array` - remove an entry and return the value it held.\n If the method is called on anything but an object or if the index is out of bounds, it\n will return `JsonValue::Null`.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Array` - remove an entry and return the value it held.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":61188,"byte_end":61267,"line_start":512,"line_end":512,"column_start":5,"column_end":84}},{"value":"/ If the method is called on anything but an object or if the index is out of bounds, it","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":61272,"byte_end":61362,"line_start":513,"line_end":513,"column_start":5,"column_end":95}},{"value":"/ will return `JsonValue::Null`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":61367,"byte_end":61401,"line_start":514,"line_end":514,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":61924,"byte_end":61929,"line_start":530,"line_end":530,"column_start":12,"column_end":17},"name":"clear","qualname":"<JsonValue>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" When called on an array or an object, will wipe them clean. When called\n on a string will clear the string. Numbers and booleans become null.\n","sig":null,"attributes":[{"value":"/ When called on an array or an object, will wipe them clean. When called","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":61760,"byte_end":61835,"line_start":528,"line_end":528,"column_start":5,"column_end":80}},{"value":"/ on a string will clear the string. Numbers and booleans become null.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":61840,"byte_end":61912,"line_start":529,"line_end":529,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":817},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70584,"byte_end":70603,"line_start":10,"line_end":10,"column_start":5,"column_end":24},"name":"UnexpectedCharacter","qualname":"::error::Error::UnexpectedCharacter","value":"Error::UnexpectedCharacter { ch, line, column }","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":821},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70679,"byte_end":70698,"line_start":15,"line_end":15,"column_start":5,"column_end":24},"name":"UnexpectedEndOfJson","qualname":"::error::Error::UnexpectedEndOfJson","value":"Error::UnexpectedEndOfJson","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":823},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70704,"byte_end":70722,"line_start":16,"line_end":16,"column_start":5,"column_end":23},"name":"ExceededDepthLimit","qualname":"::error::Error::ExceededDepthLimit","value":"Error::ExceededDepthLimit","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":825},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70728,"byte_end":70745,"line_start":17,"line_end":17,"column_start":5,"column_end":22},"name":"FailedUtf8Parsing","qualname":"::error::Error::FailedUtf8Parsing","value":"Error::FailedUtf8Parsing","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":827},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70751,"byte_end":70760,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"name":"WrongType","qualname":"::error::Error::WrongType","value":"Error::WrongType(String)","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":816},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70572,"byte_end":70577,"line_start":9,"line_end":9,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    UnexpectedCharacter {\n        ch: char,\n        line: usize,\n        column: usize,\n    },\n    UnexpectedEndOfJson,\n    ExceededDepthLimit,\n    FailedUtf8Parsing,\n    WrongType(String),\n}","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":827}],"decl_id":null,"docs":" Error type of this crate.","sig":null,"attributes":[{"value":"/ Error type of this crate.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70396,"byte_end":70425,"line_start":3,"line_end":3,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70426,"byte_end":70429,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70430,"byte_end":70433,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ *Note:* Since `0.9.0` using `JsonError` is deprecated. Always use","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70434,"byte_end":70503,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ `json::Error` instead!","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70504,"byte_end":70530,"line_start":7,"line_end":7,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70797,"byte_end":70807,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"wrong_type","qualname":"<Error>::wrong_type","value":"pub fn wrong_type(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":399},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"short","qualname":"::short","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":847},{"krate":0,"index":852},{"krate":0,"index":851},{"krate":0,"index":407},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":406},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":91902,"byte_end":91909,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"MAX_LEN","qualname":"::short::MAX_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":847},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":91958,"byte_end":91963,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"name":"Short","qualname":"::short::Short","value":"Short {  }","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92674,"byte_end":92684,"line_start":24,"line_end":24,"column_start":19,"column_end":29},"name":"from_slice","qualname":"<Short>::from_slice","value":"pub unsafe fn from_slice(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Short` from a `&str` slice. This method can cause buffer\n overflow if the length of the slice is larger than `MAX_LEN`, which is why\n it is marked as `unsafe`.","sig":null,"attributes":[{"value":"/ Creates a `Short` from a `&str` slice. This method can cause buffer","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92184,"byte_end":92255,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"/ overflow if the length of the slice is larger than `MAX_LEN`, which is why","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92260,"byte_end":92338,"line_start":16,"line_end":16,"column_start":5,"column_end":83}},{"value":"/ it is marked as `unsafe`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92343,"byte_end":92372,"line_start":17,"line_end":17,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92377,"byte_end":92380,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92385,"byte_end":92388,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Typically you should avoid creating your own `Short`s, instead create a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92393,"byte_end":92468,"line_start":20,"line_end":20,"column_start":5,"column_end":80}},{"value":"/ `JsonValue` (either using `\"foo\".into()` or `JsonValue::from(\"foo\")`) out","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92473,"byte_end":92550,"line_start":21,"line_end":21,"column_start":5,"column_end":82}},{"value":"/ of a slice. This will automatically decide on `String` or `Short` for you.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92555,"byte_end":92633,"line_start":22,"line_end":22,"column_start":5,"column_end":83}},{"value":"inline(always)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92638,"byte_end":92655,"line_start":23,"line_end":23,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":93015,"byte_end":93021,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Short>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Cheaply obtain a `&str` slice out of the `Short`.\n","sig":null,"attributes":[{"value":"/ Cheaply obtain a `&str` slice out of the `Short`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92936,"byte_end":92989,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92994,"byte_end":93003,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":430},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"object","qualname":"::object","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":455},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":855},{"krate":0,"index":860},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":475},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":509},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":527},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":550}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":862},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101359,"byte_end":101365,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"Object","qualname":"::object::Object","value":"Object {  }","parent":null,"children":[{"krate":0,"index":863}],"decl_id":null,"docs":" A binary tree implementation of a string -> `JsonValue` map. You normally don't\n have to interact with instances of `Object`, much more likely you will be\n using the `JsonValue::Object` variant, which wraps around this struct.\n","sig":null,"attributes":[{"value":"/ A binary tree implementation of a string -> `JsonValue` map. You normally don't","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101094,"byte_end":101177,"line_start":223,"line_end":223,"column_start":1,"column_end":84}},{"value":"/ have to interact with instances of `Object`, much more likely you will be","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101178,"byte_end":101255,"line_start":224,"line_end":224,"column_start":1,"column_end":78}},{"value":"/ using the `JsonValue::Object` variant, which wraps around this struct.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101256,"byte_end":101330,"line_start":225,"line_end":225,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101570,"byte_end":101573,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"new","qualname":"<Object>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty instance of `Object`. Empty `Object` performs no\n allocation until a value is inserted into it.\n","sig":null,"attributes":[{"value":"/ Create a new, empty instance of `Object`. Empty `Object` performs no","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101410,"byte_end":101482,"line_start":232,"line_end":232,"column_start":5,"column_end":77}},{"value":"/ allocation until a value is inserted into it.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101487,"byte_end":101536,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"inline(always)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101541,"byte_end":101558,"line_start":234,"line_end":234,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101780,"byte_end":101793,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Object>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Object` with memory preallocated for `capacity` number\n of entries.\n","sig":null,"attributes":[{"value":"/ Create a new `Object` with memory preallocated for `capacity` number","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101654,"byte_end":101726,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ of entries.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101731,"byte_end":101746,"line_start":242,"line_end":242,"column_start":5,"column_end":20}},{"value":"inline(always)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101751,"byte_end":101768,"line_start":243,"line_end":243,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":103944,"byte_end":103950,"line_start":302,"line_end":302,"column_start":12,"column_end":18},"name":"insert","qualname":"<Object>::insert","value":"pub fn insert(&mut Self, &str, JsonValue)","parent":null,"children":[],"decl_id":null,"docs":" Insert a new entry, or override an existing one. Note that `key` has\n to be a `&str` slice and not an owned `String`. The internals of\n `Object` will handle the heap allocation of the key if needed for\n better performance.\n","sig":null,"attributes":[{"value":"/ Insert a new entry, or override an existing one. Note that `key` has","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":103671,"byte_end":103743,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ to be a `&str` slice and not an owned `String`. The internals of","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":103748,"byte_end":103816,"line_start":298,"line_end":298,"column_start":5,"column_end":73}},{"value":"/ `Object` will handle the heap allocation of the key if needed for","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":103821,"byte_end":103890,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/ better performance.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":103895,"byte_end":103918,"line_start":300,"line_end":300,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":103923,"byte_end":103932,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":105638,"byte_end":105651,"line_start":354,"line_end":354,"column_start":12,"column_end":25},"name":"override_last","qualname":"<Object>::override_last","value":"pub fn override_last(&mut Self, JsonValue)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":105542,"byte_end":105551,"line_start":352,"line_end":352,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.11.11\", note = \"Was only meant for internal use\")","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":105556,"byte_end":105626,"line_start":353,"line_end":353,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":105795,"byte_end":105798,"line_start":360,"line_end":360,"column_start":12,"column_end":15},"name":"get","qualname":"<Object>::get","value":"pub fn get(&Self, &str) -> Option<&JsonValue>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":106597,"byte_end":106604,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Object>::get_mut","value":"pub fn get_mut(&mut Self, &str) -> Option<&mut JsonValue>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":107807,"byte_end":107813,"line_start":425,"line_end":425,"column_start":12,"column_end":18},"name":"remove","qualname":"<Object>::remove","value":"pub fn remove(&mut Self, &str) -> Option<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to remove the value behind `key`, if successful\n will return the `JsonValue` stored behind the `key`.\n","sig":null,"attributes":[{"value":"/ Attempts to remove the value behind `key`, if successful","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":107674,"byte_end":107734,"line_start":423,"line_end":423,"column_start":5,"column_end":65}},{"value":"/ will return the `JsonValue` stored behind the `key`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":107739,"byte_end":107795,"line_start":424,"line_end":424,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":109754,"byte_end":109757,"line_start":482,"line_end":482,"column_start":12,"column_end":15},"name":"len","qualname":"<Object>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":109725,"byte_end":109742,"line_start":481,"line_end":481,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":109841,"byte_end":109849,"line_start":487,"line_end":487,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Object>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":109812,"byte_end":109829,"line_start":486,"line_end":486,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":109984,"byte_end":109989,"line_start":492,"line_end":492,"column_start":12,"column_end":17},"name":"clear","qualname":"<Object>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Wipe the `Object` clear. The capacity will remain untouched.\n","sig":null,"attributes":[{"value":"/ Wipe the `Object` clear. The capacity will remain untouched.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":109908,"byte_end":109972,"line_start":491,"line_end":491,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":110071,"byte_end":110075,"line_start":497,"line_end":497,"column_start":12,"column_end":16},"name":"iter","qualname":"<Object>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":110042,"byte_end":110059,"line_start":496,"line_end":496,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":110195,"byte_end":110203,"line_start":504,"line_end":504,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Object>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":110166,"byte_end":110183,"line_start":503,"line_end":503,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":110360,"byte_end":110364,"line_start":511,"line_end":511,"column_start":12,"column_end":16},"name":"dump","qualname":"<Object>::dump","value":"pub fn dump(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Prints out the value as JSON string.\n","sig":null,"attributes":[{"value":"/ Prints out the value as JSON string.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":110308,"byte_end":110348,"line_start":510,"line_end":510,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":110650,"byte_end":110656,"line_start":519,"line_end":519,"column_start":12,"column_end":18},"name":"pretty","qualname":"<Object>::pretty","value":"pub fn pretty(&Self, u16) -> String","parent":null,"children":[],"decl_id":null,"docs":" Pretty prints out the value as JSON string. Takes an argument that's\n number of spaces to indent new blocks with.\n","sig":null,"attributes":[{"value":"/ Pretty prints out the value as JSON string. Takes an argument that's","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":110514,"byte_end":110586,"line_start":517,"line_end":517,"column_start":5,"column_end":77}},{"value":"/ number of spaces to indent new blocks with.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":110591,"byte_end":110638,"line_start":518,"line_end":518,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":111749,"byte_end":111753,"line_start":562,"line_end":562,"column_start":12,"column_end":16},"name":"Iter","qualname":"::object::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":500}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":111887,"byte_end":111892,"line_start":568,"line_end":568,"column_start":12,"column_end":17},"name":"empty","qualname":"<Iter>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty iterator that always returns `None`\n","sig":null,"attributes":[{"value":"/ Create an empty iterator that always returns `None`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":111820,"byte_end":111875,"line_start":567,"line_end":567,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":516},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":112512,"byte_end":112519,"line_start":597,"line_end":597,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::object::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":518}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":112659,"byte_end":112664,"line_start":603,"line_end":603,"column_start":12,"column_end":17},"name":"empty","qualname":"<IterMut>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty iterator that always returns `None`\n","sig":null,"attributes":[{"value":"/ Create an empty iterator that always returns `None`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":112592,"byte_end":112647,"line_start":602,"line_end":602,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":553},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"number","qualname":"::number","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":866},{"krate":0,"index":874},{"krate":0,"index":872},{"krate":0,"index":870},{"krate":0,"index":566},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":875},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":877},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":879},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":881},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":883},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":917},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":919},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":921},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":923},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":605},{"krate":0,"index":608}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":562},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115318,"byte_end":115321,"line_start":7,"line_end":7,"column_start":11,"column_end":14},"name":"NAN","qualname":"::number::NAN","value":"Number","parent":null,"children":[],"decl_id":null,"docs":" NaN value represented in `Number` type. NaN is equal to itself.\n","sig":null,"attributes":[{"value":"/ NaN value represented in `Number` type. NaN is equal to itself.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115240,"byte_end":115307,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":866},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116040,"byte_end":116046,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"Number","qualname":"::number::Number","value":"Number {  }","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"decl_id":null,"docs":" Number representation used inside `JsonValue`. You can easily convert\n the `Number` type into native Rust number types and back, or use the\n equality operator with another number type.","sig":null,"attributes":[{"value":"/ Number representation used inside `JsonValue`. You can easily convert","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115476,"byte_end":115549,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ the `Number` type into native Rust number types and back, or use the","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115550,"byte_end":115622,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ equality operator with another number type.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115623,"byte_end":115670,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115671,"byte_end":115674,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115675,"byte_end":115682,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use json::number::Number;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115683,"byte_end":115714,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ let foo: Number = 3.14.into();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115715,"byte_end":115749,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ let bar: f64 = foo.into();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115750,"byte_end":115780,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115781,"byte_end":115784,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(foo, 3.14);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115785,"byte_end":115811,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(bar, 3.14);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115812,"byte_end":115838,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115839,"byte_end":115846,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115847,"byte_end":115850,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ More often than not you will deal with `JsonValue::Number` variant that","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115851,"byte_end":115926,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ wraps around this type, instead of using the methods here directly.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":115927,"byte_end":115998,"line_start":31,"line_end":31,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117110,"byte_end":117130,"line_start":62,"line_end":62,"column_start":19,"column_end":39},"name":"from_parts_unchecked","qualname":"<Number>::from_parts_unchecked","value":"pub unsafe fn from_parts_unchecked(bool, u64, i16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Number` from parts. This can't create a NaN value.","sig":null,"attributes":[{"value":"/ Construct a new `Number` from parts. This can't create a NaN value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116503,"byte_end":116574,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116579,"byte_end":116582,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116587,"byte_end":116594,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/ # use json::number::Number;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116599,"byte_end":116630,"line_start":52,"line_end":52,"column_start":5,"column_end":36}},{"value":"/ let pi = unsafe { Number::from_parts_unchecked(true, 3141592653589793, -15) };","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116635,"byte_end":116717,"line_start":53,"line_end":53,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116722,"byte_end":116725,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pi, 3.141592653589793);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116730,"byte_end":116768,"line_start":55,"line_end":55,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116773,"byte_end":116780,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116785,"byte_end":116788,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ While this method is marked unsafe, it doesn't actually perform any unsafe operations.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116793,"byte_end":116883,"line_start":58,"line_end":58,"column_start":5,"column_end":95}},{"value":"/ THe goal of the 'unsafe' is to deter from using this method in favor of its safe equivalent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116888,"byte_end":116983,"line_start":59,"line_end":59,"column_start":5,"column_end":100}},{"value":"/ `from_parts`, at least in context when the associated performance cost is negligible.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116988,"byte_end":117077,"line_start":60,"line_end":60,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117082,"byte_end":117091,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117764,"byte_end":117774,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Number>::from_parts","value":"pub fn from_parts(bool, u64, i16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Number` from parts, stripping unnecessary trailing zeroes.\n This can't create a NaN value.","sig":null,"attributes":[{"value":"/ Construct a new `Number` from parts, stripping unnecessary trailing zeroes.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117327,"byte_end":117406,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ This can't create a NaN value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117411,"byte_end":117445,"line_start":71,"line_end":71,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117450,"byte_end":117453,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117458,"byte_end":117465,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ # use json::number::Number;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117470,"byte_end":117501,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"/ let one = Number::from_parts(true, 1000, -3);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117506,"byte_end":117555,"line_start":75,"line_end":75,"column_start":5,"column_end":54}},{"value":"/ let (positive, mantissa, exponent) = one.as_parts();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117560,"byte_end":117616,"line_start":76,"line_end":76,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117621,"byte_end":117624,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(true, positive);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117629,"byte_end":117660,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(1, mantissa);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117665,"byte_end":117693,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(0, exponent);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117698,"byte_end":117726,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117731,"byte_end":117738,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":117743,"byte_end":117752,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118444,"byte_end":118452,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"as_parts","qualname":"<Number>::as_parts","value":"pub fn as_parts(&Self) -> (bool, u64, i16)","parent":null,"children":[],"decl_id":null,"docs":" Reverse to `from_parts` - obtain parts from an existing `Number`.","sig":null,"attributes":[{"value":"/ Reverse to `from_parts` - obtain parts from an existing `Number`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118044,"byte_end":118113,"line_start":91,"line_end":91,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118118,"byte_end":118121,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118126,"byte_end":118133,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ # use json::number::Number;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118138,"byte_end":118169,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/ let pi = Number::from(3.141592653589793);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118174,"byte_end":118219,"line_start":95,"line_end":95,"column_start":5,"column_end":50}},{"value":"/ let (positive, mantissa, exponent) = pi.as_parts();","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118224,"byte_end":118279,"line_start":96,"line_end":96,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118284,"byte_end":118287,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(positive, true);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118292,"byte_end":118323,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(mantissa, 3141592653589793);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118328,"byte_end":118371,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(exponent, -15);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118376,"byte_end":118406,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118411,"byte_end":118418,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118423,"byte_end":118432,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118580,"byte_end":118596,"line_start":108,"line_end":108,"column_start":12,"column_end":28},"name":"is_sign_positive","qualname":"<Number>::is_sign_positive","value":"pub fn is_sign_positive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118559,"byte_end":118568,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118680,"byte_end":118687,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Number>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118659,"byte_end":118668,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118782,"byte_end":118788,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"is_nan","qualname":"<Number>::is_nan","value":"pub fn is_nan(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118761,"byte_end":118770,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118931,"byte_end":118939,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Number>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if the number is NaN or has a zero value.\n","sig":null,"attributes":[{"value":"/ Test if the number is NaN or has a zero value.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118855,"byte_end":118905,"line_start":122,"line_end":122,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":118910,"byte_end":118919,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119682,"byte_end":119700,"line_start":144,"line_end":144,"column_start":12,"column_end":30},"name":"as_fixed_point_u64","qualname":"<Number>::as_fixed_point_u64","value":"pub fn as_fixed_point_u64(&Self, u16) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Obtain an integer at a fixed decimal point. This is useful for\n converting monetary values and doing arithmetic on them without\n rounding errors introduced by floating point operations.","sig":null,"attributes":[{"value":"/ Obtain an integer at a fixed decimal point. This is useful for","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119012,"byte_end":119078,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/ converting monetary values and doing arithmetic on them without","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119083,"byte_end":119150,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ rounding errors introduced by floating point operations.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119155,"byte_end":119215,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119220,"byte_end":119223,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Will return `None` if `Number` is negative or a NaN.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119228,"byte_end":119284,"line_start":132,"line_end":132,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119289,"byte_end":119292,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119297,"byte_end":119304,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ # use json::number::Number;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119309,"byte_end":119340,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/ let price_a = Number::from(5.99);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119345,"byte_end":119382,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/ let price_b = Number::from(7);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119387,"byte_end":119421,"line_start":137,"line_end":137,"column_start":5,"column_end":39}},{"value":"/ let price_c = Number::from(10.2);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119426,"byte_end":119463,"line_start":138,"line_end":138,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119468,"byte_end":119471,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(price_a.as_fixed_point_u64(2), Some(599));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119476,"byte_end":119533,"line_start":140,"line_end":140,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(price_b.as_fixed_point_u64(2), Some(700));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119538,"byte_end":119595,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(price_c.as_fixed_point_u64(2), Some(1020));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119600,"byte_end":119658,"line_start":142,"line_end":142,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":119663,"byte_end":119670,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":120546,"byte_end":120564,"line_start":171,"line_end":171,"column_start":12,"column_end":30},"name":"as_fixed_point_i64","qualname":"<Number>::as_fixed_point_i64","value":"pub fn as_fixed_point_i64(&Self, u16) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Analog to `as_fixed_point_u64`, except returning a signed\n `i64`, properly handling negative numbers.","sig":null,"attributes":[{"value":"/ Analog to `as_fixed_point_u64`, except returning a signed","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":120129,"byte_end":120190,"line_start":160,"line_end":160,"column_start":5,"column_end":66}},{"value":"/ `i64`, properly handling negative numbers.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":120195,"byte_end":120241,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":120246,"byte_end":120249,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":120254,"byte_end":120261,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # use json::number::Number;","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":120266,"byte_end":120297,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"/ let balance_a = Number::from(-1.49);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":120302,"byte_end":120342,"line_start":165,"line_end":165,"column_start":5,"column_end":45}},{"value":"/ let balance_b = Number::from(42);","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":120347,"byte_end":120384,"line_start":166,"line_end":166,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":120389,"byte_end":120392,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(balance_a.as_fixed_point_i64(2), Some(-149));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":120397,"byte_end":120457,"line_start":168,"line_end":168,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(balance_b.as_fixed_point_i64(2), Some(4200));","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":120462,"byte_end":120522,"line_start":169,"line_end":169,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":120527,"byte_end":120534,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":614},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5195,"byte_end":5201,"line_start":220,"line_end":220,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type used by this crate.","sig":null,"attributes":[{"value":"/ Result type used by this crate.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5038,"byte_end":5073,"line_start":215,"line_end":215,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5074,"byte_end":5077,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5078,"byte_end":5081,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ *Note:* Since 0.9.0 the old `JsonResult` type is deprecated. Always use","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5082,"byte_end":5157,"line_start":218,"line_end":218,"column_start":1,"column_end":76}},{"value":"/ `json::Result` instead.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5158,"byte_end":5185,"line_start":219,"line_end":219,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":616},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5242,"byte_end":5251,"line_start":222,"line_end":222,"column_start":9,"column_end":18},"name":"iterators","qualname":"::iterators","value":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":617},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5320,"byte_end":5327,"line_start":224,"line_end":224,"column_start":14,"column_end":21},"name":"Members","qualname":"::iterators::Members","value":"::std::slice::Iter","parent":null,"children":[],"decl_id":null,"docs":" Iterator over members of `JsonValue::Array`.\n","sig":null,"attributes":[{"value":"/ Iterator over members of `JsonValue::Array`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5258,"byte_end":5306,"line_start":223,"line_end":223,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":619},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5451,"byte_end":5461,"line_start":227,"line_end":227,"column_start":14,"column_end":24},"name":"MembersMut","qualname":"::iterators::MembersMut","value":"::std::slice::IterMut","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over members of `JsonValue::Array`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over members of `JsonValue::Array`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5381,"byte_end":5437,"line_start":226,"line_end":226,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":621},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5589,"byte_end":5596,"line_start":230,"line_end":230,"column_start":14,"column_end":21},"name":"Entries","qualname":"::iterators::Entries","value":"super::object::Iter","parent":null,"children":[],"decl_id":null,"docs":" Iterator over key value pairs of `JsonValue::Object`.\n","sig":null,"attributes":[{"value":"/ Iterator over key value pairs of `JsonValue::Object`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5518,"byte_end":5575,"line_start":229,"line_end":229,"column_start":5,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":623},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5712,"byte_end":5722,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"EntriesMut","qualname":"::iterators::EntriesMut","value":"super::object::IterMut","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over key value pairs of `JsonValue::Object`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over key value pairs of `JsonValue::Object`.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5633,"byte_end":5698,"line_start":232,"line_end":232,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":628},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":5980,"byte_end":5985,"line_start":244,"line_end":244,"column_start":10,"column_end":15},"name":"Array","qualname":"::Array","value":"Vec<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":629},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":6057,"byte_end":6061,"line_start":247,"line_end":247,"column_start":8,"column_end":12},"name":"from","qualname":"::from","value":"pub fn from<T>(T) -> JsonValue where T: Into<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Convenience for `JsonValue::from(value)`\n","sig":null,"attributes":[{"value":"/ Convenience for `JsonValue::from(value)`","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":6005,"byte_end":6049,"line_start":246,"line_end":246,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":631},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":6190,"byte_end":6199,"line_start":252,"line_end":252,"column_start":8,"column_end":17},"name":"stringify","qualname":"::stringify","value":"pub fn stringify<T>(T) -> String where T: Into<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Pretty prints out the value as JSON string.\n","sig":null,"attributes":[{"value":"/ Pretty prints out the value as JSON string.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":6135,"byte_end":6182,"line_start":251,"line_end":251,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":633},"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":6431,"byte_end":6447,"line_start":259,"line_end":259,"column_start":8,"column_end":24},"name":"stringify_pretty","qualname":"::stringify_pretty","value":"pub fn stringify_pretty<T>(T, u16) -> String where T: Into<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Pretty prints out the value as JSON string. Second argument is a\n number of spaces to indent new blocks with.\n","sig":null,"attributes":[{"value":"/ Pretty prints out the value as JSON string. Second argument is a","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":6307,"byte_end":6375,"line_start":257,"line_end":257,"column_start":1,"column_end":69}},{"value":"/ number of spaces to indent new blocks with.","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":6376,"byte_end":6423,"line_start":258,"line_end":258,"column_start":1,"column_end":48}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":14253,"byte_end":14266,"line_start":188,"line_end":188,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":14604,"byte_end":14617,"line_start":202,"line_end":202,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":15242,"byte_end":15257,"line_start":234,"line_end":234,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":15567,"byte_end":15582,"line_start":248,"line_end":248,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":16557,"byte_end":16572,"line_start":295,"line_end":295,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":16744,"byte_end":16759,"line_start":303,"line_end":303,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":17168,"byte_end":17189,"line_start":324,"line_end":324,"column_start":13,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":17441,"byte_end":17462,"line_start":334,"line_end":334,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/parser.rs","byte_start":30147,"byte_end":30153,"line_start":365,"line_end":365,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":67182,"byte_end":67191,"line_start":65,"line_end":65,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":67463,"byte_end":67472,"line_start":75,"line_end":75,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":67678,"byte_end":67687,"line_start":84,"line_end":84,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":67941,"byte_end":67950,"line_start":96,"line_end":96,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":68256,"byte_end":68265,"line_start":108,"line_end":108,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":68823,"byte_end":68832,"line_start":124,"line_end":124,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":69361,"byte_end":69370,"line_start":144,"line_end":144,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":46301,"byte_end":46310,"line_start":48,"line_end":48,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":46960,"byte_end":46969,"line_start":66,"line_end":66,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":47185,"byte_end":47194,"line_start":76,"line_end":76,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":47846,"byte_end":47855,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":62512,"byte_end":62521,"line_start":552,"line_end":552,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":63067,"byte_end":63076,"line_start":579,"line_end":579,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":63975,"byte_end":63984,"line_start":617,"line_end":617,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":64214,"byte_end":64223,"line_start":628,"line_end":628,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":64381,"byte_end":64390,"line_start":636,"line_end":636,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":64844,"byte_end":64853,"line_start":660,"line_end":660,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":65205,"byte_end":65214,"line_start":674,"line_end":674,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":65361,"byte_end":65370,"line_start":680,"line_end":680,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70778,"byte_end":70783,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70907,"byte_end":70912,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":71562,"byte_end":71567,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/util/diyfp.rs","byte_start":72949,"byte_end":72954,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/util/diyfp.rs","byte_start":75904,"byte_end":75909,"line_start":135,"line_end":135,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/util/diyfp.rs","byte_start":76084,"byte_end":76089,"line_start":145,"line_end":145,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92172,"byte_end":92177,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":93224,"byte_end":93229,"line_start":46,"line_end":46,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":93357,"byte_end":93362,"line_start":53,"line_end":53,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":93497,"byte_end":93502,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":93898,"byte_end":93903,"line_start":69,"line_end":69,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":94034,"byte_end":94040,"line_start":78,"line_end":78,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":94151,"byte_end":94156,"line_start":84,"line_end":84,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":94382,"byte_end":94387,"line_start":96,"line_end":96,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":94500,"byte_end":94506,"line_start":102,"line_end":102,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":96715,"byte_end":96718,"line_start":68,"line_end":68,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":98403,"byte_end":98406,"line_start":128,"line_end":128,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":98431,"byte_end":98434,"line_start":129,"line_end":129,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":98602,"byte_end":98605,"line_start":133,"line_end":133,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":99286,"byte_end":99289,"line_start":154,"line_end":154,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":100476,"byte_end":100480,"line_start":197,"line_end":197,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":100655,"byte_end":100659,"line_start":203,"line_end":203,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":100870,"byte_end":100874,"line_start":211,"line_end":211,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101397,"byte_end":101403,"line_start":231,"line_end":231,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":110949,"byte_end":110955,"line_start":528,"line_end":528,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":111353,"byte_end":111359,"line_start":545,"line_end":545,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":111805,"byte_end":111809,"line_start":566,"line_end":566,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":111990,"byte_end":111994,"line_start":575,"line_end":575,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":112226,"byte_end":112230,"line_start":584,"line_end":584,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":112427,"byte_end":112431,"line_start":591,"line_end":591,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":112574,"byte_end":112581,"line_start":601,"line_end":601,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":112769,"byte_end":112776,"line_start":610,"line_end":610,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":113016,"byte_end":113023,"line_start":619,"line_end":619,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":113224,"byte_end":113231,"line_start":626,"line_end":626,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":113702,"byte_end":113708,"line_start":652,"line_end":652,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":113921,"byte_end":113927,"line_start":663,"line_end":663,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":114085,"byte_end":114091,"line_start":671,"line_end":671,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":114628,"byte_end":114634,"line_start":698,"line_end":698,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":114868,"byte_end":114874,"line_start":707,"line_end":707,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":115021,"byte_end":115027,"line_start":713,"line_end":713,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116490,"byte_end":116496,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":121127,"byte_end":121133,"line_start":194,"line_end":194,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":121862,"byte_end":121868,"line_start":223,"line_end":223,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":124385,"byte_end":124391,"line_start":324,"line_end":324,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":124898,"byte_end":124904,"line_start":343,"line_end":343,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":125430,"byte_end":125436,"line_start":362,"line_end":362,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":125547,"byte_end":125553,"line_start":368,"line_end":368,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":128064,"byte_end":128070,"line_start":469,"line_end":469,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4917,"byte_end":4922,"line_start":207,"line_end":207,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":399}},{"kind":"Mod","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4932,"byte_end":4938,"line_start":208,"line_end":208,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":430}},{"kind":"Mod","span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/lib.rs","byte_start":4948,"byte_end":4954,"line_start":209,"line_end":209,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":553}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":14253,"byte_end":14266,"line_start":188,"line_end":188,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":14604,"byte_end":14617,"line_start":202,"line_end":202,"column_start":20,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":37},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":15242,"byte_end":15257,"line_start":234,"line_end":234,"column_start":6,"column_end":21},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":48},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":15567,"byte_end":15582,"line_start":248,"line_end":248,"column_start":20,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":48},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":16557,"byte_end":16572,"line_start":295,"line_end":295,"column_start":13,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":64},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":16744,"byte_end":16759,"line_start":303,"line_end":303,"column_start":27,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":64},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":17168,"byte_end":17189,"line_start":324,"line_end":324,"column_start":13,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/codegen.rs","byte_start":17441,"byte_end":17462,"line_start":334,"line_end":334,"column_start":27,"column_end":48},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":78},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/parser.rs","byte_start":30147,"byte_end":30153,"line_start":365,"line_end":365,"column_start":10,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":67182,"byte_end":67191,"line_start":65,"line_end":65,"column_start":28,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":67463,"byte_end":67472,"line_start":75,"line_end":75,"column_start":46,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":67678,"byte_end":67687,"line_start":84,"line_end":84,"column_start":43,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":67941,"byte_end":67950,"line_start":96,"line_end":96,"column_start":43,"column_end":52},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":68256,"byte_end":68265,"line_start":108,"line_end":108,"column_start":44,"column_end":53},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":68823,"byte_end":68832,"line_start":124,"line_end":124,"column_start":33,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/implements.rs","byte_start":69361,"byte_end":69370,"line_start":144,"line_end":144,"column_start":25,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":46301,"byte_end":46310,"line_start":48,"line_end":48,"column_start":20,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":46960,"byte_end":46969,"line_start":66,"line_end":66,"column_start":13,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":1658}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":47185,"byte_end":47194,"line_start":76,"line_end":76,"column_start":23,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":47846,"byte_end":47855,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":62512,"byte_end":62521,"line_start":552,"line_end":552,"column_start":23,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":63067,"byte_end":63076,"line_start":579,"line_end":579,"column_start":26,"column_end":35},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":63975,"byte_end":63984,"line_start":617,"line_end":617,"column_start":29,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":64214,"byte_end":64223,"line_start":628,"line_end":628,"column_start":24,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":64381,"byte_end":64390,"line_start":636,"line_end":636,"column_start":32,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":64844,"byte_end":64853,"line_start":660,"line_end":660,"column_start":32,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":65205,"byte_end":65214,"line_start":674,"line_end":674,"column_start":27,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/value/mod.rs","byte_start":65361,"byte_end":65370,"line_start":680,"line_end":680,"column_start":35,"column_end":44},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70778,"byte_end":70783,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":70907,"byte_end":70912,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":816},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/error.rs","byte_start":71562,"byte_end":71567,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":816},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/util/diyfp.rs","byte_start":72949,"byte_end":72954,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/util/diyfp.rs","byte_start":75904,"byte_end":75909,"line_start":135,"line_end":135,"column_start":19,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/util/diyfp.rs","byte_start":76084,"byte_end":76089,"line_start":145,"line_end":145,"column_start":19,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":2002}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":92172,"byte_end":92177,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":93224,"byte_end":93229,"line_start":46,"line_end":46,"column_start":20,"column_end":25},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":93357,"byte_end":93362,"line_start":53,"line_end":53,"column_start":21,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":93497,"byte_end":93502,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":93898,"byte_end":93903,"line_start":69,"line_end":69,"column_start":16,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":94034,"byte_end":94040,"line_start":78,"line_end":78,"column_start":22,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":5,"index":4932},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":94151,"byte_end":94156,"line_start":84,"line_end":84,"column_start":25,"column_end":30},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":94382,"byte_end":94387,"line_start":96,"line_end":96,"column_start":28,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/short.rs","byte_start":94500,"byte_end":94506,"line_start":102,"line_end":102,"column_start":27,"column_end":33},"kind":{"Impl":{"id":60}},"from":{"krate":5,"index":4932},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":96715,"byte_end":96718,"line_start":68,"line_end":68,"column_start":6,"column_end":9},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":98403,"byte_end":98406,"line_start":128,"line_end":128,"column_start":22,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":449},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":98431,"byte_end":98434,"line_start":129,"line_end":129,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":449},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":98602,"byte_end":98605,"line_start":133,"line_end":133,"column_start":15,"column_end":18},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":449},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":99286,"byte_end":99289,"line_start":154,"line_end":154,"column_start":16,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":449},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":100476,"byte_end":100480,"line_start":197,"line_end":197,"column_start":21,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":855},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":100655,"byte_end":100659,"line_start":203,"line_end":203,"column_start":20,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":855},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":100870,"byte_end":100874,"line_start":211,"line_end":211,"column_start":6,"column_end":10},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":101397,"byte_end":101403,"line_start":231,"line_end":231,"column_start":6,"column_end":12},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":110949,"byte_end":110955,"line_start":528,"line_end":528,"column_start":16,"column_end":22},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":111353,"byte_end":111359,"line_start":545,"line_end":545,"column_start":20,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":111805,"byte_end":111809,"line_start":566,"line_end":566,"column_start":10,"column_end":14},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":111990,"byte_end":111994,"line_start":575,"line_end":575,"column_start":23,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":112226,"byte_end":112230,"line_start":584,"line_end":584,"column_start":34,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":4921}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":112427,"byte_end":112431,"line_start":591,"line_end":591,"column_start":32,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":112574,"byte_end":112581,"line_start":601,"line_end":601,"column_start":10,"column_end":17},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":112769,"byte_end":112776,"line_start":610,"line_end":610,"column_start":23,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":113016,"byte_end":113023,"line_start":619,"line_end":619,"column_start":34,"column_end":41},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":4921}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":113224,"byte_end":113231,"line_start":626,"line_end":626,"column_start":32,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":113702,"byte_end":113708,"line_start":652,"line_end":652,"column_start":29,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":113921,"byte_end":113927,"line_start":663,"line_end":663,"column_start":24,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":114085,"byte_end":114091,"line_start":671,"line_end":671,"column_start":32,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":114628,"byte_end":114634,"line_start":698,"line_end":698,"column_start":32,"column_end":38},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":114868,"byte_end":114874,"line_start":707,"line_end":707,"column_start":27,"column_end":33},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/object.rs","byte_start":115021,"byte_end":115027,"line_start":713,"line_end":713,"column_start":35,"column_end":41},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":116490,"byte_end":116496,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":121127,"byte_end":121133,"line_start":194,"line_end":194,"column_start":20,"column_end":26},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":121862,"byte_end":121868,"line_start":223,"line_end":223,"column_start":23,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":124385,"byte_end":124391,"line_start":324,"line_end":324,"column_start":20,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":124898,"byte_end":124904,"line_start":343,"line_end":343,"column_start":20,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":125430,"byte_end":125436,"line_start":362,"line_end":362,"column_start":25,"column_end":31},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":125547,"byte_end":125553,"line_start":368,"line_end":368,"column_start":25,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/catry/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.11.15/src/number.rs","byte_start":128064,"byte_end":128070,"line_start":469,"line_end":469,"column_start":19,"column_end":25},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":2019}}]}